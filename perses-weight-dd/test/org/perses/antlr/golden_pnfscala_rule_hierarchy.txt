entries {
  ruleName: "Id"
}
entries {
  ruleName: "BooleanLiteral"
}
entries {
  ruleName: "CharacterLiteral"
}
entries {
  ruleName: "SymbolLiteral"
}
entries {
  ruleName: "IntegerLiteral"
}
entries {
  ruleName: "StringLiteral"
}
entries {
  ruleName: "FloatingPointLiteral"
}
entries {
  ruleName: "Varid"
}
entries {
  ruleName: "BoundVarid"
}
entries {
  ruleName: "Paren"
}
entries {
  ruleName: "Delim"
}
entries {
  ruleName: "Semi"
}
entries {
  ruleName: "NL"
}
entries {
  ruleName: "CharNoBackQuoteOrNewline"
}
entries {
  ruleName: "UnicodeEscape"
}
entries {
  ruleName: "WhiteSpace"
}
entries {
  ruleName: "Opchar"
}
entries {
  ruleName: "Op"
}
entries {
  ruleName: "Idrest"
  canBeEpsilon: true
}
entries {
  ruleName: "StringElement"
}
entries {
  ruleName: "MultiLineChars"
  canBeEpsilon: true
}
entries {
  ruleName: "HexDigit"
}
entries {
  ruleName: "FloatType"
}
entries {
  ruleName: "Upper"
}
entries {
  ruleName: "Lower"
}
entries {
  ruleName: "Letter"
}
entries {
  ruleName: "ExponentPart"
}
entries {
  ruleName: "PrintableChar"
}
entries {
  ruleName: "PrintableCharExceptWhitespace"
}
entries {
  ruleName: "CharEscapeSeq"
}
entries {
  ruleName: "DecimalNumeral"
}
entries {
  ruleName: "HexNumeral"
}
entries {
  ruleName: "Digit"
}
entries {
  ruleName: "NonZeroDigit"
}
entries {
  ruleName: "VaridFragment"
}
entries {
  ruleName: "Plainid"
}
entries {
  ruleName: "UnicodeLetter"
}
entries {
  ruleName: "UnicodeClass_LU"
}
entries {
  ruleName: "UnicodeClass_LL"
}
entries {
  ruleName: "UnicodeClass_LT"
}
entries {
  ruleName: "UnicodeClass_LM"
}
entries {
  ruleName: "UnicodeClass_LO"
}
entries {
  ruleName: "UnicodeDigit"
}
entries {
  ruleName: "NEWLINE"
}
entries {
  ruleName: "WS"
}
entries {
  ruleName: "COMMENT"
}
entries {
  ruleName: "LINE_COMMENT"
}
entries {
  ruleName: "literal"
  immediateSubRuleNames: "BooleanLiteral"
  immediateSubRuleNames: "CharacterLiteral"
  immediateSubRuleNames: "StringLiteral"
  immediateSubRuleNames: "SymbolLiteral"
  immediateSubRuleNames: "aux_rule__literal_4"
  immediateStringLiterals: "null"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveStringLiterals: "null"
}
entries {
  ruleName: "qualId"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "ids"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "classQualifier"
}
entries {
  ruleName: "type_"
  immediateSubRuleNames: "aux_rule__type__2"
  immediateSubRuleNames: "aux_rule__type__3"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__type__2"
  transitiveSubRuleNames: "aux_rule__type__3"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "functionArgTypes"
  immediateSubRuleNames: "aux_rule__functionArgTypes_5"
  immediateSubRuleNames: "infixType"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__functionArgTypes_5"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "existentialClause"
}
entries {
  ruleName: "existentialDcl"
  immediateSubRuleNames: "aux_rule__existentialDcl_1"
  immediateSubRuleNames: "aux_rule__existentialDcl_2"
  transitiveSubRuleNames: "aux_rule__existentialDcl_1"
  transitiveSubRuleNames: "aux_rule__existentialDcl_2"
}
entries {
  ruleName: "infixType"
  immediateSubRuleNames: "compoundType"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "compoundType"
  immediateSubRuleNames: "aux_rule__compoundType_4"
  immediateSubRuleNames: "refinement"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "annotType"
  immediateSubRuleNames: "simpleType"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "typeArgs"
}
entries {
  ruleName: "types"
  immediateSubRuleNames: "type_"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__type__2"
  transitiveSubRuleNames: "aux_rule__type__3"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "type_"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "refinement"
}
entries {
  ruleName: "refineStat"
  immediateSubRuleNames: "aux_rule__refineStat_1"
  immediateSubRuleNames: "dcl"
  transitiveSubRuleNames: "aux_rule__dcl_3"
  transitiveSubRuleNames: "aux_rule__dcl_4"
  transitiveSubRuleNames: "aux_rule__dcl_5"
  transitiveSubRuleNames: "aux_rule__refineStat_1"
  transitiveSubRuleNames: "dcl"
}
entries {
  ruleName: "typePat"
  immediateSubRuleNames: "type_"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__type__2"
  transitiveSubRuleNames: "aux_rule__type__3"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "type_"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "ascription"
}
entries {
  ruleName: "expr"
  immediateSubRuleNames: "aux_rule__expr_3"
  immediateSubRuleNames: "expr1"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__expr_3"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "expr1"
  immediateSubRuleNames: "aux_rule__expr1_20"
  immediateSubRuleNames: "aux_rule__expr1_21"
  immediateSubRuleNames: "aux_rule__expr1_22"
  immediateSubRuleNames: "aux_rule__expr1_23"
  immediateSubRuleNames: "aux_rule__expr1_24"
  immediateSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "prefixDef"
  immediateStringLiterals: "!"
  immediateStringLiterals: "+"
  immediateStringLiterals: "-"
  immediateStringLiterals: "~"
  transitiveStringLiterals: "!"
  transitiveStringLiterals: "+"
  transitiveStringLiterals: "-"
  transitiveStringLiterals: "~"
}
entries {
  ruleName: "postfixExpr"
  immediateSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "prefixExpr"
  immediateSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "simpleExpr"
  immediateSubRuleNames: "aux_rule__simpleExpr_2"
  immediateSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "blockExpr"
}
entries {
  ruleName: "exprs"
  immediateSubRuleNames: "expr"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__expr_3"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "expr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "argumentExprs"
  immediateSubRuleNames: "aux_rule__argumentExprs_6"
  immediateSubRuleNames: "aux_rule__argumentExprs_7"
  transitiveSubRuleNames: "aux_rule__argumentExprs_6"
  transitiveSubRuleNames: "aux_rule__argumentExprs_7"
  transitiveSubRuleNames: "blockExpr"
}
entries {
  ruleName: "blockExpr"
}
entries {
  ruleName: "block"
  immediateSubRuleNames: "kleene_plus__block_1"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__blockStat_6"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__blockStat_7"
  transitiveSubRuleNames: "aux_rule__blockStat_8"
  transitiveSubRuleNames: "aux_rule__blockStat_9"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "blockStat"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "kleene_plus__block_1"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "tmplDef"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "blockStat"
  immediateSubRuleNames: "aux_rule__blockStat_7"
  immediateSubRuleNames: "expr1"
  immediateSubRuleNames: "import_"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__blockStat_6"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__blockStat_7"
  transitiveSubRuleNames: "aux_rule__blockStat_8"
  transitiveSubRuleNames: "aux_rule__blockStat_9"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "tmplDef"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "resultExpr"
  immediateSubRuleNames: "aux_rule__resultExpr_4"
  immediateSubRuleNames: "expr1"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__resultExpr_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "enumerators"
  immediateSubRuleNames: "generator"
  transitiveSubRuleNames: "generator"
}
entries {
  ruleName: "generator"
}
entries {
  ruleName: "caseClauses"
  immediateSubRuleNames: "caseClause"
  transitiveSubRuleNames: "caseClause"
}
entries {
  ruleName: "caseClause"
}
entries {
  ruleName: "guard"
}
entries {
  ruleName: "pattern"
  immediateSubRuleNames: "pattern1"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "Varid"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__pattern1_2"
  transitiveSubRuleNames: "aux_rule__pattern2_3"
  transitiveSubRuleNames: "aux_rule__simplePattern_10"
  transitiveSubRuleNames: "aux_rule__simplePattern_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "pattern1"
  transitiveSubRuleNames: "pattern2"
  transitiveSubRuleNames: "pattern3"
  transitiveSubRuleNames: "simplePattern"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "pattern1"
  immediateSubRuleNames: "aux_rule__pattern1_2"
  immediateSubRuleNames: "pattern2"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "Varid"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__pattern1_2"
  transitiveSubRuleNames: "aux_rule__pattern2_3"
  transitiveSubRuleNames: "aux_rule__simplePattern_10"
  transitiveSubRuleNames: "aux_rule__simplePattern_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "pattern2"
  transitiveSubRuleNames: "pattern3"
  transitiveSubRuleNames: "simplePattern"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "pattern2"
  immediateSubRuleNames: "aux_rule__pattern2_3"
  immediateSubRuleNames: "pattern3"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "Varid"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__pattern2_3"
  transitiveSubRuleNames: "aux_rule__simplePattern_10"
  transitiveSubRuleNames: "aux_rule__simplePattern_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "pattern3"
  transitiveSubRuleNames: "simplePattern"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "pattern3"
  immediateSubRuleNames: "simplePattern"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "Varid"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simplePattern_10"
  transitiveSubRuleNames: "aux_rule__simplePattern_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "simplePattern"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "simplePattern"
  immediateSubRuleNames: "Varid"
  immediateSubRuleNames: "aux_rule__simplePattern_10"
  immediateSubRuleNames: "aux_rule__simplePattern_11"
  immediateSubRuleNames: "literal"
  immediateStringLiterals: "_"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "Varid"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simplePattern_10"
  transitiveSubRuleNames: "aux_rule__simplePattern_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "patterns"
  immediateSubRuleNames: "aux_rule__patterns_3"
  immediateSubRuleNames: "aux_rule__patterns_4"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "Varid"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__pattern1_2"
  transitiveSubRuleNames: "aux_rule__pattern2_3"
  transitiveSubRuleNames: "aux_rule__patterns_3"
  transitiveSubRuleNames: "aux_rule__patterns_4"
  transitiveSubRuleNames: "aux_rule__simplePattern_10"
  transitiveSubRuleNames: "aux_rule__simplePattern_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "pattern"
  transitiveSubRuleNames: "pattern1"
  transitiveSubRuleNames: "pattern2"
  transitiveSubRuleNames: "pattern3"
  transitiveSubRuleNames: "simplePattern"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "typeParamClause"
}
entries {
  ruleName: "funTypeParamClause"
}
entries {
  ruleName: "variantTypeParam"
  immediateSubRuleNames: "typeParam"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__typeParam_10"
  transitiveSubRuleNames: "typeParam"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "typeParam"
  immediateSubRuleNames: "altnt_block__typeParam_10"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__typeParam_10"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "paramClauses"
  immediateSubRuleNames: "kleene_star__paramClauses_1"
  immediateSubRuleNames: "optional__paramClauses_4"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__paramClauses_3"
  transitiveSubRuleNames: "kleene_star__paramClauses_1"
  transitiveSubRuleNames: "optional__paramClauses_4"
  transitiveSubRuleNames: "paramClause"
}
entries {
  ruleName: "paramClause"
}
entries {
  ruleName: "params"
  immediateSubRuleNames: "param"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "param"
}
entries {
  ruleName: "param"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "paramType"
  immediateSubRuleNames: "aux_rule__paramType_2"
  immediateSubRuleNames: "aux_rule__paramType_3"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__paramType_2"
  transitiveSubRuleNames: "aux_rule__paramType_3"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__type__2"
  transitiveSubRuleNames: "aux_rule__type__3"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "type_"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "classParamClauses"
  immediateSubRuleNames: "kleene_star__classParamClauses_1"
  immediateSubRuleNames: "optional__classParamClauses_4"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__classParamClauses_3"
  transitiveSubRuleNames: "classParamClause"
  transitiveSubRuleNames: "kleene_star__classParamClauses_1"
  transitiveSubRuleNames: "optional__classParamClauses_4"
}
entries {
  ruleName: "classParamClause"
}
entries {
  ruleName: "classParams"
  immediateSubRuleNames: "classParam"
  transitiveSubRuleNames: "classParam"
}
entries {
  ruleName: "classParam"
}
entries {
  ruleName: "bindings"
}
entries {
  ruleName: "binding"
  immediateSubRuleNames: "altnt_block__typeParam_10"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__typeParam_10"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "modifier"
  immediateSubRuleNames: "accessModifier"
  immediateSubRuleNames: "localModifier"
  immediateStringLiterals: "override"
  transitiveSubRuleNames: "accessModifier"
  transitiveSubRuleNames: "altnt_block__accessModifier_2"
  transitiveSubRuleNames: "localModifier"
  transitiveStringLiterals: "abstract"
  transitiveStringLiterals: "final"
  transitiveStringLiterals: "implicit"
  transitiveStringLiterals: "lazy"
  transitiveStringLiterals: "override"
  transitiveStringLiterals: "private"
  transitiveStringLiterals: "protected"
  transitiveStringLiterals: "sealed"
}
entries {
  ruleName: "localModifier"
  immediateStringLiterals: "abstract"
  immediateStringLiterals: "final"
  immediateStringLiterals: "implicit"
  immediateStringLiterals: "lazy"
  immediateStringLiterals: "sealed"
  transitiveStringLiterals: "abstract"
  transitiveStringLiterals: "final"
  transitiveStringLiterals: "implicit"
  transitiveStringLiterals: "lazy"
  transitiveStringLiterals: "sealed"
}
entries {
  ruleName: "accessModifier"
  immediateSubRuleNames: "altnt_block__accessModifier_2"
  transitiveSubRuleNames: "altnt_block__accessModifier_2"
  transitiveStringLiterals: "private"
  transitiveStringLiterals: "protected"
}
entries {
  ruleName: "accessQualifier"
}
entries {
  ruleName: "annotation"
}
entries {
  ruleName: "constrAnnotation"
}
entries {
  ruleName: "templateBody"
}
entries {
  ruleName: "templateStat"
  immediateSubRuleNames: "aux_rule__templateStat_10"
  immediateSubRuleNames: "expr"
  immediateSubRuleNames: "import_"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "altnt_block__templateStat_9"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__dcl_3"
  transitiveSubRuleNames: "aux_rule__dcl_4"
  transitiveSubRuleNames: "aux_rule__dcl_5"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__expr_3"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__templateStat_10"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "dcl"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "expr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "tmplDef"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "selfType"
}
entries {
  ruleName: "import_"
}
entries {
  ruleName: "importExpr"
  immediateSubRuleNames: "stableId"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "importSelectors"
}
entries {
  ruleName: "importSelector"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "dcl"
  immediateSubRuleNames: "aux_rule__dcl_3"
  immediateSubRuleNames: "aux_rule__dcl_4"
  immediateSubRuleNames: "aux_rule__dcl_5"
  transitiveSubRuleNames: "aux_rule__dcl_3"
  transitiveSubRuleNames: "aux_rule__dcl_4"
  transitiveSubRuleNames: "aux_rule__dcl_5"
}
entries {
  ruleName: "valDcl"
}
entries {
  ruleName: "funDcl"
  immediateSubRuleNames: "funSig"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "funSig"
}
entries {
  ruleName: "funSig"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "typeDcl"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "patVarDef"
  immediateSubRuleNames: "aux_rule__patVarDef_1"
  immediateSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
}
entries {
  ruleName: "def"
  immediateSubRuleNames: "aux_rule__def_2"
  immediateSubRuleNames: "aux_rule__def_3"
  immediateSubRuleNames: "patVarDef"
  immediateSubRuleNames: "tmplDef"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "patDef"
}
entries {
  ruleName: "varDef"
  immediateSubRuleNames: "aux_rule__varDef_1"
  immediateSubRuleNames: "patDef"
  transitiveSubRuleNames: "aux_rule__varDef_1"
  transitiveSubRuleNames: "patDef"
}
entries {
  ruleName: "funDef"
  immediateSubRuleNames: "aux_rule__funDef_7"
  immediateSubRuleNames: "aux_rule__funDef_8"
  transitiveSubRuleNames: "aux_rule__funDef_7"
  transitiveSubRuleNames: "aux_rule__funDef_8"
}
entries {
  ruleName: "typeDef"
}
entries {
  ruleName: "tmplDef"
  immediateSubRuleNames: "aux_rule__tmplDef_4"
  immediateSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
}
entries {
  ruleName: "classDef"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "traitDef"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "objectDef"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "classTemplateOpt"
  immediateSubRuleNames: "aux_rule__classTemplateOpt_4"
  immediateSubRuleNames: "optional__classTemplateOpt_3"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__classTemplateOpt_2"
  transitiveSubRuleNames: "aux_rule__classTemplateOpt_4"
  transitiveSubRuleNames: "optional__classTemplateOpt_3"
  transitiveSubRuleNames: "templateBody"
}
entries {
  ruleName: "traitTemplateOpt"
  immediateSubRuleNames: "aux_rule__traitTemplateOpt_4"
  immediateSubRuleNames: "optional__classTemplateOpt_3"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__classTemplateOpt_2"
  transitiveSubRuleNames: "aux_rule__traitTemplateOpt_4"
  transitiveSubRuleNames: "optional__classTemplateOpt_3"
  transitiveSubRuleNames: "templateBody"
}
entries {
  ruleName: "classTemplate"
  immediateSubRuleNames: "classParents"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "classParents"
  transitiveSubRuleNames: "constr"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "traitTemplate"
  immediateSubRuleNames: "traitParents"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "traitParents"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "classParents"
  immediateSubRuleNames: "constr"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "constr"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "traitParents"
  immediateSubRuleNames: "annotType"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "constr"
  immediateSubRuleNames: "annotType"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "earlyDefs"
}
entries {
  ruleName: "earlyDef"
  immediateSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "patVarDef"
}
entries {
  ruleName: "constrExpr"
  immediateSubRuleNames: "constrBlock"
  immediateSubRuleNames: "selfInvocation"
  transitiveSubRuleNames: "constrBlock"
  transitiveSubRuleNames: "selfInvocation"
}
entries {
  ruleName: "constrBlock"
}
entries {
  ruleName: "selfInvocation"
}
entries {
  ruleName: "topStatSeq"
  immediateSubRuleNames: "topStat"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "aux_rule__topStat_5"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "packageObject"
  transitiveSubRuleNames: "packaging"
  transitiveSubRuleNames: "tmplDef"
  transitiveSubRuleNames: "topStat"
}
entries {
  ruleName: "topStat"
  immediateSubRuleNames: "aux_rule__topStat_5"
  immediateSubRuleNames: "import_"
  immediateSubRuleNames: "packageObject"
  immediateSubRuleNames: "packaging"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "aux_rule__topStat_5"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "packageObject"
  transitiveSubRuleNames: "packaging"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "packaging"
}
entries {
  ruleName: "packageObject"
}
entries {
  ruleName: "compilationUnit"
}
entries {
  ruleName: "optional__literal_1"
  immediateStringLiterals: "-"
  canBeEpsilon: true
  transitiveStringLiterals: "-"
}
entries {
  ruleName: "aux_rule__qualId_1"
}
entries {
  ruleName: "kleene_star__qualId_2"
  immediateSubRuleNames: "aux_rule__qualId_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__qualId_1"
}
entries {
  ruleName: "aux_rule__ids_1"
}
entries {
  ruleName: "kleene_star__ids_2"
  immediateSubRuleNames: "aux_rule__ids_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__ids_1"
}
entries {
  ruleName: "aux_rule__stableId_1"
}
entries {
  ruleName: "optional__stableId_2"
  immediateSubRuleNames: "aux_rule__stableId_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__stableId_1"
}
entries {
  ruleName: "optional__stableId_3"
  immediateSubRuleNames: "classQualifier"
  canBeEpsilon: true
  transitiveSubRuleNames: "classQualifier"
}
entries {
  ruleName: "optional__type__1"
  immediateSubRuleNames: "existentialClause"
  canBeEpsilon: true
  transitiveSubRuleNames: "existentialClause"
}
entries {
  ruleName: "aux_rule__functionArgTypes_1"
}
entries {
  ruleName: "kleene_star__functionArgTypes_2"
  immediateSubRuleNames: "aux_rule__functionArgTypes_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__functionArgTypes_1"
}
entries {
  ruleName: "aux_rule__functionArgTypes_3"
  immediateSubRuleNames: "paramType"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__paramType_2"
  transitiveSubRuleNames: "aux_rule__paramType_3"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__type__2"
  transitiveSubRuleNames: "aux_rule__type__3"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "paramType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "type_"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "optional__functionArgTypes_4"
  immediateSubRuleNames: "aux_rule__functionArgTypes_3"
  canBeEpsilon: true
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__functionArgTypes_3"
  transitiveSubRuleNames: "aux_rule__paramType_2"
  transitiveSubRuleNames: "aux_rule__paramType_3"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__type__2"
  transitiveSubRuleNames: "aux_rule__type__3"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "paramType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "type_"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "kleene_plus__existentialClause_1"
  immediateSubRuleNames: "existentialDcl"
  transitiveSubRuleNames: "aux_rule__existentialDcl_1"
  transitiveSubRuleNames: "aux_rule__existentialDcl_2"
  transitiveSubRuleNames: "existentialDcl"
}
entries {
  ruleName: "aux_rule__infixType_1"
}
entries {
  ruleName: "kleene_star__infixType_2"
  immediateSubRuleNames: "aux_rule__infixType_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__infixType_1"
}
entries {
  ruleName: "aux_rule__compoundType_1"
}
entries {
  ruleName: "kleene_star__compoundType_2"
  immediateSubRuleNames: "aux_rule__compoundType_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__compoundType_1"
}
entries {
  ruleName: "optional__compoundType_3"
  immediateSubRuleNames: "refinement"
  canBeEpsilon: true
  transitiveSubRuleNames: "refinement"
}
entries {
  ruleName: "kleene_star__annotType_1"
  immediateSubRuleNames: "annotation"
  canBeEpsilon: true
  transitiveSubRuleNames: "annotation"
}
entries {
  ruleName: "aux_rule__simpleType_1"
}
entries {
  ruleName: "optional__simpleType_2"
  immediateSubRuleNames: "aux_rule__simpleType_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__simpleType_1"
}
entries {
  ruleName: "aux_rule__types_1"
}
entries {
  ruleName: "kleene_star__types_2"
  immediateSubRuleNames: "aux_rule__types_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__types_1"
}
entries {
  ruleName: "optional__refinement_1"
  immediateSubRuleNames: "NL"
  canBeEpsilon: true
  transitiveSubRuleNames: "NL"
}
entries {
  ruleName: "kleene_plus__refinement_2"
  immediateSubRuleNames: "refineStat"
  transitiveSubRuleNames: "aux_rule__dcl_3"
  transitiveSubRuleNames: "aux_rule__dcl_4"
  transitiveSubRuleNames: "aux_rule__dcl_5"
  transitiveSubRuleNames: "aux_rule__refineStat_1"
  transitiveSubRuleNames: "dcl"
  transitiveSubRuleNames: "refineStat"
}
entries {
  ruleName: "kleene_plus__ascription_1"
  immediateSubRuleNames: "annotation"
  transitiveSubRuleNames: "annotation"
}
entries {
  ruleName: "optional__expr_1"
  immediateStringLiterals: "implicit"
  canBeEpsilon: true
  transitiveStringLiterals: "implicit"
}
entries {
  ruleName: "aux_rule__expr1_2"
}
entries {
  ruleName: "optional__expr1_3"
  immediateSubRuleNames: "aux_rule__expr1_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__expr1_2"
}
entries {
  ruleName: "aux_rule__expr1_5"
}
entries {
  ruleName: "optional__expr1_6"
  immediateSubRuleNames: "aux_rule__expr1_5"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__expr1_5"
}
entries {
  ruleName: "aux_rule__expr1_7"
}
entries {
  ruleName: "optional__expr1_8"
  immediateSubRuleNames: "aux_rule__expr1_7"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__expr1_7"
}
entries {
  ruleName: "optional__expr1_9"
  immediateStringLiterals: "yield"
  canBeEpsilon: true
  transitiveStringLiterals: "yield"
}
entries {
  ruleName: "optional__expr1_10"
  immediateSubRuleNames: "expr"
  canBeEpsilon: true
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__expr_3"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "expr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "optional__expr1_11"
  immediateStringLiterals: "_"
  canBeEpsilon: true
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "aux_rule__expr1_12"
}
entries {
  ruleName: "optional__expr1_13"
  immediateSubRuleNames: "aux_rule__expr1_12"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__expr1_12"
}
entries {
  ruleName: "optional__expr1_14"
  immediateSubRuleNames: "ascription"
  canBeEpsilon: true
  transitiveSubRuleNames: "ascription"
}
entries {
  ruleName: "optional__postfixExpr_1"
  immediateSubRuleNames: "Id"
  canBeEpsilon: true
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "aux_rule__postfixExpr_2"
}
entries {
  ruleName: "kleene_star__postfixExpr_3"
  immediateSubRuleNames: "aux_rule__postfixExpr_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__postfixExpr_2"
}
entries {
  ruleName: "optional__prefixExpr_1"
  immediateSubRuleNames: "prefixDef"
  canBeEpsilon: true
  transitiveSubRuleNames: "prefixDef"
  transitiveStringLiterals: "!"
  transitiveStringLiterals: "+"
  transitiveStringLiterals: "-"
  transitiveStringLiterals: "~"
}
entries {
  ruleName: "optional__simpleExpr1_1"
  immediateSubRuleNames: "exprs"
  canBeEpsilon: true
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__expr_3"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "expr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "exprs"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__exprs_1"
}
entries {
  ruleName: "kleene_star__exprs_2"
  immediateSubRuleNames: "aux_rule__exprs_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__exprs_1"
}
entries {
  ruleName: "aux_rule__argumentExprs_2"
}
entries {
  ruleName: "optional__argumentExprs_3"
  immediateSubRuleNames: "aux_rule__argumentExprs_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__argumentExprs_2"
}
entries {
  ruleName: "kleene_plus__block_1"
  immediateSubRuleNames: "blockStat"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__blockStat_6"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__blockStat_7"
  transitiveSubRuleNames: "aux_rule__blockStat_8"
  transitiveSubRuleNames: "aux_rule__blockStat_9"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "blockStat"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "tmplDef"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "optional__block_2"
  immediateSubRuleNames: "resultExpr"
  canBeEpsilon: true
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__resultExpr_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "resultExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__blockStat_2"
  immediateStringLiterals: "implicit"
  immediateStringLiterals: "lazy"
  transitiveStringLiterals: "implicit"
  transitiveStringLiterals: "lazy"
}
entries {
  ruleName: "optional__blockStat_3"
  immediateSubRuleNames: "aux_rule__blockStat_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__blockStat_2"
  transitiveStringLiterals: "implicit"
  transitiveStringLiterals: "lazy"
}
entries {
  ruleName: "kleene_star__blockStat_5"
  immediateSubRuleNames: "localModifier"
  canBeEpsilon: true
  transitiveSubRuleNames: "localModifier"
  transitiveStringLiterals: "abstract"
  transitiveStringLiterals: "final"
  transitiveStringLiterals: "implicit"
  transitiveStringLiterals: "lazy"
  transitiveStringLiterals: "sealed"
}
entries {
  ruleName: "aux_rule__generator_1"
  immediateSubRuleNames: "aux_rule__generator_3"
  immediateSubRuleNames: "guard"
  transitiveSubRuleNames: "aux_rule__generator_3"
  transitiveSubRuleNames: "guard"
}
entries {
  ruleName: "kleene_star__generator_2"
  immediateSubRuleNames: "aux_rule__generator_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__generator_1"
  transitiveSubRuleNames: "aux_rule__generator_3"
  transitiveSubRuleNames: "guard"
}
entries {
  ruleName: "optional__caseClause_1"
  immediateSubRuleNames: "guard"
  canBeEpsilon: true
  transitiveSubRuleNames: "guard"
}
entries {
  ruleName: "aux_rule__pattern_1"
}
entries {
  ruleName: "kleene_star__pattern_2"
  immediateSubRuleNames: "aux_rule__pattern_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__pattern_1"
}
entries {
  ruleName: "aux_rule__pattern2_1"
}
entries {
  ruleName: "optional__pattern2_2"
  immediateSubRuleNames: "aux_rule__pattern2_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__pattern2_1"
}
entries {
  ruleName: "aux_rule__pattern3_2"
}
entries {
  ruleName: "kleene_star__pattern3_3"
  immediateSubRuleNames: "aux_rule__pattern3_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__pattern3_2"
}
entries {
  ruleName: "optional__simplePattern_1"
  immediateSubRuleNames: "patterns"
  canBeEpsilon: true
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "Varid"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__pattern1_2"
  transitiveSubRuleNames: "aux_rule__pattern2_3"
  transitiveSubRuleNames: "aux_rule__patterns_3"
  transitiveSubRuleNames: "aux_rule__patterns_4"
  transitiveSubRuleNames: "aux_rule__simplePattern_10"
  transitiveSubRuleNames: "aux_rule__simplePattern_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "pattern"
  transitiveSubRuleNames: "pattern1"
  transitiveSubRuleNames: "pattern2"
  transitiveSubRuleNames: "pattern3"
  transitiveSubRuleNames: "patterns"
  transitiveSubRuleNames: "simplePattern"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__simplePattern_2"
}
entries {
  ruleName: "optional__simplePattern_3"
  immediateSubRuleNames: "aux_rule__simplePattern_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__simplePattern_2"
}
entries {
  ruleName: "aux_rule__simplePattern_4"
}
entries {
  ruleName: "optional__simplePattern_5"
  immediateSubRuleNames: "aux_rule__simplePattern_4"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__simplePattern_4"
}
entries {
  ruleName: "aux_rule__simplePattern_6"
}
entries {
  ruleName: "optional__simplePattern_7"
  immediateSubRuleNames: "aux_rule__simplePattern_6"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__simplePattern_6"
}
entries {
  ruleName: "aux_rule__patterns_1"
}
entries {
  ruleName: "optional__patterns_2"
  immediateSubRuleNames: "aux_rule__patterns_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__patterns_1"
}
entries {
  ruleName: "aux_rule__typeParamClause_1"
}
entries {
  ruleName: "kleene_star__typeParamClause_2"
  immediateSubRuleNames: "aux_rule__typeParamClause_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__typeParamClause_1"
}
entries {
  ruleName: "aux_rule__funTypeParamClause_1"
}
entries {
  ruleName: "kleene_star__funTypeParamClause_2"
  immediateSubRuleNames: "aux_rule__funTypeParamClause_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__funTypeParamClause_1"
}
entries {
  ruleName: "aux_rule__variantTypeParam_2"
  immediateStringLiterals: "+"
  immediateStringLiterals: "-"
  transitiveStringLiterals: "+"
  transitiveStringLiterals: "-"
}
entries {
  ruleName: "optional__variantTypeParam_3"
  immediateSubRuleNames: "aux_rule__variantTypeParam_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__variantTypeParam_2"
  transitiveStringLiterals: "+"
  transitiveStringLiterals: "-"
}
entries {
  ruleName: "aux_rule__typeParam_6"
}
entries {
  ruleName: "kleene_star__typeParam_7"
  immediateSubRuleNames: "aux_rule__typeParam_6"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__typeParam_6"
}
entries {
  ruleName: "aux_rule__typeParam_8"
}
entries {
  ruleName: "kleene_star__typeParam_9"
  immediateSubRuleNames: "aux_rule__typeParam_8"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__typeParam_8"
}
entries {
  ruleName: "kleene_star__paramClauses_1"
  immediateSubRuleNames: "paramClause"
  canBeEpsilon: true
  transitiveSubRuleNames: "paramClause"
}
entries {
  ruleName: "aux_rule__paramClauses_3"
}
entries {
  ruleName: "optional__paramClauses_4"
  immediateSubRuleNames: "aux_rule__paramClauses_3"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__paramClauses_3"
}
entries {
  ruleName: "optional__paramClause_2"
  immediateSubRuleNames: "params"
  canBeEpsilon: true
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "param"
  transitiveSubRuleNames: "params"
}
entries {
  ruleName: "aux_rule__params_1"
}
entries {
  ruleName: "kleene_star__params_2"
  immediateSubRuleNames: "aux_rule__params_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__params_1"
}
entries {
  ruleName: "aux_rule__param_2"
}
entries {
  ruleName: "optional__param_3"
  immediateSubRuleNames: "aux_rule__param_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__param_2"
}
entries {
  ruleName: "aux_rule__param_4"
}
entries {
  ruleName: "optional__param_5"
  immediateSubRuleNames: "aux_rule__param_4"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__param_4"
}
entries {
  ruleName: "kleene_star__classParamClauses_1"
  immediateSubRuleNames: "classParamClause"
  canBeEpsilon: true
  transitiveSubRuleNames: "classParamClause"
}
entries {
  ruleName: "aux_rule__classParamClauses_3"
}
entries {
  ruleName: "optional__classParamClauses_4"
  immediateSubRuleNames: "aux_rule__classParamClauses_3"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__classParamClauses_3"
}
entries {
  ruleName: "optional__classParamClause_2"
  immediateSubRuleNames: "classParams"
  canBeEpsilon: true
  transitiveSubRuleNames: "classParam"
  transitiveSubRuleNames: "classParams"
}
entries {
  ruleName: "aux_rule__classParams_1"
}
entries {
  ruleName: "kleene_star__classParams_2"
  immediateSubRuleNames: "aux_rule__classParams_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__classParams_1"
}
entries {
  ruleName: "kleene_star__classParam_2"
  immediateSubRuleNames: "modifier"
  canBeEpsilon: true
  transitiveSubRuleNames: "accessModifier"
  transitiveSubRuleNames: "altnt_block__accessModifier_2"
  transitiveSubRuleNames: "localModifier"
  transitiveSubRuleNames: "modifier"
  transitiveStringLiterals: "abstract"
  transitiveStringLiterals: "final"
  transitiveStringLiterals: "implicit"
  transitiveStringLiterals: "lazy"
  transitiveStringLiterals: "override"
  transitiveStringLiterals: "private"
  transitiveStringLiterals: "protected"
  transitiveStringLiterals: "sealed"
}
entries {
  ruleName: "optional__classParam_4"
  immediateSubRuleNames: "altnt_block__dcl_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "altnt_block__dcl_2"
  transitiveStringLiterals: "val"
  transitiveStringLiterals: "var"
}
entries {
  ruleName: "aux_rule__bindings_1"
}
entries {
  ruleName: "kleene_star__bindings_2"
  immediateSubRuleNames: "aux_rule__bindings_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__bindings_1"
}
entries {
  ruleName: "optional__binding_2"
  immediateSubRuleNames: "aux_rule__typeParam_8"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__typeParam_8"
}
entries {
  ruleName: "optional__accessModifier_1"
  immediateSubRuleNames: "accessQualifier"
  canBeEpsilon: true
  transitiveSubRuleNames: "accessQualifier"
}
entries {
  ruleName: "kleene_star__annotation_1"
  immediateSubRuleNames: "argumentExprs"
  canBeEpsilon: true
  transitiveSubRuleNames: "argumentExprs"
  transitiveSubRuleNames: "aux_rule__argumentExprs_6"
  transitiveSubRuleNames: "aux_rule__argumentExprs_7"
  transitiveSubRuleNames: "blockExpr"
}
entries {
  ruleName: "optional__templateBody_2"
  immediateSubRuleNames: "selfType"
  canBeEpsilon: true
  transitiveSubRuleNames: "selfType"
}
entries {
  ruleName: "kleene_plus__templateBody_3"
  immediateSubRuleNames: "templateStat"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "altnt_block__templateStat_9"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__dcl_3"
  transitiveSubRuleNames: "aux_rule__dcl_4"
  transitiveSubRuleNames: "aux_rule__dcl_5"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__expr_3"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__templateStat_10"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "dcl"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "expr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "templateStat"
  transitiveSubRuleNames: "tmplDef"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__templateStat_2"
  immediateSubRuleNames: "annotation"
  transitiveSubRuleNames: "annotation"
}
entries {
  ruleName: "kleene_star__templateStat_3"
  immediateSubRuleNames: "aux_rule__templateStat_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "annotation"
  transitiveSubRuleNames: "aux_rule__templateStat_2"
}
entries {
  ruleName: "aux_rule__import__1"
}
entries {
  ruleName: "kleene_star__import__2"
  immediateSubRuleNames: "aux_rule__import__1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__import__1"
}
entries {
  ruleName: "aux_rule__importExpr_1"
}
entries {
  ruleName: "optional__importExpr_2"
  immediateSubRuleNames: "aux_rule__importExpr_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__importExpr_1"
}
entries {
  ruleName: "aux_rule__importSelectors_1"
}
entries {
  ruleName: "kleene_star__importSelectors_2"
  immediateSubRuleNames: "aux_rule__importSelectors_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__importSelectors_1"
}
entries {
  ruleName: "aux_rule__importSelector_1"
}
entries {
  ruleName: "optional__importSelector_2"
  immediateSubRuleNames: "aux_rule__importSelector_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__importSelector_1"
}
entries {
  ruleName: "kleene_star__dcl_1"
  immediateSubRuleNames: "NL"
  canBeEpsilon: true
  transitiveSubRuleNames: "NL"
}
entries {
  ruleName: "optional__funSig_1"
  immediateSubRuleNames: "funTypeParamClause"
  canBeEpsilon: true
  transitiveSubRuleNames: "funTypeParamClause"
}
entries {
  ruleName: "optional__typeDcl_1"
  immediateSubRuleNames: "typeParamClause"
  canBeEpsilon: true
  transitiveSubRuleNames: "typeParamClause"
}
entries {
  ruleName: "aux_rule__typeDcl_2"
}
entries {
  ruleName: "optional__typeDcl_3"
  immediateSubRuleNames: "aux_rule__typeDcl_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__typeDcl_2"
}
entries {
  ruleName: "aux_rule__typeDcl_4"
}
entries {
  ruleName: "optional__typeDcl_5"
  immediateSubRuleNames: "aux_rule__typeDcl_4"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__typeDcl_4"
}
entries {
  ruleName: "aux_rule__patDef_1"
}
entries {
  ruleName: "kleene_star__patDef_2"
  immediateSubRuleNames: "aux_rule__patDef_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__patDef_1"
}
entries {
  ruleName: "optional__tmplDef_1"
  immediateStringLiterals: "case"
  canBeEpsilon: true
  transitiveStringLiterals: "case"
}
entries {
  ruleName: "kleene_star__classDef_2"
  immediateSubRuleNames: "constrAnnotation"
  canBeEpsilon: true
  transitiveSubRuleNames: "constrAnnotation"
}
entries {
  ruleName: "optional__classDef_3"
  immediateSubRuleNames: "accessModifier"
  canBeEpsilon: true
  transitiveSubRuleNames: "accessModifier"
  transitiveSubRuleNames: "altnt_block__accessModifier_2"
  transitiveStringLiterals: "private"
  transitiveStringLiterals: "protected"
}
entries {
  ruleName: "optional__classTemplateOpt_1"
  immediateStringLiterals: "extends"
  canBeEpsilon: true
  transitiveStringLiterals: "extends"
}
entries {
  ruleName: "aux_rule__classTemplateOpt_2"
  immediateSubRuleNames: "templateBody"
  transitiveSubRuleNames: "templateBody"
}
entries {
  ruleName: "optional__classTemplateOpt_3"
  immediateSubRuleNames: "aux_rule__classTemplateOpt_2"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__classTemplateOpt_2"
  transitiveSubRuleNames: "templateBody"
}
entries {
  ruleName: "optional__classTemplate_1"
  immediateSubRuleNames: "earlyDefs"
  canBeEpsilon: true
  transitiveSubRuleNames: "earlyDefs"
}
entries {
  ruleName: "optional__classTemplate_2"
  immediateSubRuleNames: "templateBody"
  canBeEpsilon: true
  transitiveSubRuleNames: "templateBody"
}
entries {
  ruleName: "kleene_plus__earlyDefs_1"
  immediateSubRuleNames: "earlyDef"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "earlyDef"
  transitiveSubRuleNames: "patVarDef"
}
entries {
  ruleName: "kleene_star__constrBlock_1"
  immediateSubRuleNames: "blockStat"
  canBeEpsilon: true
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__blockStat_6"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__blockStat_7"
  transitiveSubRuleNames: "aux_rule__blockStat_8"
  transitiveSubRuleNames: "aux_rule__blockStat_9"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "blockStat"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "tmplDef"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "kleene_plus__selfInvocation_1"
  immediateSubRuleNames: "argumentExprs"
  transitiveSubRuleNames: "argumentExprs"
  transitiveSubRuleNames: "aux_rule__argumentExprs_6"
  transitiveSubRuleNames: "aux_rule__argumentExprs_7"
  transitiveSubRuleNames: "blockExpr"
}
entries {
  ruleName: "aux_rule__compilationUnit_1"
}
entries {
  ruleName: "kleene_star__compilationUnit_2"
  immediateSubRuleNames: "aux_rule__compilationUnit_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__compilationUnit_1"
}
entries {
  ruleName: "aux_rule__stableId_6"
  immediateSubRuleNames: "Id"
  immediateSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "stableId"
  immediateSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__simpleType_4"
  immediateSubRuleNames: "aux_rule__simpleType_6"
  immediateSubRuleNames: "typeArgs"
  transitiveSubRuleNames: "aux_rule__simpleType_6"
  transitiveSubRuleNames: "typeArgs"
}
entries {
  ruleName: "kleene_star__simpleType_3"
  immediateSubRuleNames: "aux_rule__simpleType_4"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__simpleType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_6"
  transitiveSubRuleNames: "typeArgs"
}
entries {
  ruleName: "aux_rule__simpleType_5"
  immediateSubRuleNames: "aux_rule__simpleType_7"
  immediateSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "simpleType"
  immediateSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__simpleExpr1_5"
  immediateSubRuleNames: "argumentExprs"
  immediateSubRuleNames: "aux_rule__simpleExpr1_9"
  transitiveSubRuleNames: "altnt_block__simpleExpr1_7"
  transitiveSubRuleNames: "argumentExprs"
  transitiveSubRuleNames: "aux_rule__argumentExprs_6"
  transitiveSubRuleNames: "aux_rule__argumentExprs_7"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_12"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "typeArgs"
}
entries {
  ruleName: "kleene_star__simpleExpr1_4"
  immediateSubRuleNames: "aux_rule__simpleExpr1_5"
  canBeEpsilon: true
  transitiveSubRuleNames: "altnt_block__simpleExpr1_7"
  transitiveSubRuleNames: "argumentExprs"
  transitiveSubRuleNames: "aux_rule__argumentExprs_6"
  transitiveSubRuleNames: "aux_rule__argumentExprs_7"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_12"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_5"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "typeArgs"
}
entries {
  ruleName: "aux_rule__simpleExpr1_6"
  immediateSubRuleNames: "aux_rule__simpleExpr1_10"
  immediateSubRuleNames: "aux_rule__simpleExpr1_11"
  immediateSubRuleNames: "literal"
  immediateSubRuleNames: "stableId"
  immediateStringLiterals: "_"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "simpleExpr1"
  immediateSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__infixExpr_3"
}
entries {
  ruleName: "kleene_star__infixExpr_2"
  immediateSubRuleNames: "aux_rule__infixExpr_3"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__infixExpr_3"
}
entries {
  ruleName: "infixExpr"
  immediateSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "optional__paramType_1"
  immediateStringLiterals: "=>"
  canBeEpsilon: true
  transitiveStringLiterals: "=>"
}
entries {
  ruleName: "optional__pattern3_4"
  immediateSubRuleNames: "kleene_star__pattern3_3"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__pattern3_2"
  transitiveSubRuleNames: "kleene_star__pattern3_3"
}
entries {
  ruleName: "altnt_block__ascription_2"
  immediateSubRuleNames: "aux_rule__ascription_3"
  immediateSubRuleNames: "infixType"
  immediateSubRuleNames: "kleene_plus__ascription_1"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "annotation"
  transitiveSubRuleNames: "aux_rule__ascription_3"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "kleene_plus__ascription_1"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "altnt_block__expr1_15"
  immediateSubRuleNames: "aux_rule__expr1_26"
  immediateSubRuleNames: "aux_rule__expr1_27"
  immediateSubRuleNames: "aux_rule__expr1_28"
  immediateStringLiterals: "throw"
  transitiveSubRuleNames: "aux_rule__expr1_26"
  transitiveSubRuleNames: "aux_rule__expr1_27"
  transitiveSubRuleNames: "aux_rule__expr1_28"
  transitiveStringLiterals: "throw"
}
entries {
  ruleName: "altnt_block__expr1_16"
  immediateSubRuleNames: "aux_rule__expr1_29"
  immediateSubRuleNames: "optional__expr1_14"
  canBeEpsilon: true
  transitiveSubRuleNames: "ascription"
  transitiveSubRuleNames: "aux_rule__expr1_29"
  transitiveSubRuleNames: "optional__expr1_14"
}
entries {
  ruleName: "altnt_block__simpleExpr1_7"
  immediateSubRuleNames: "aux_rule__simpleExpr1_12"
  immediateSubRuleNames: "typeArgs"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_12"
  transitiveSubRuleNames: "typeArgs"
}
entries {
  ruleName: "altnt_block__argumentExprs_5"
  immediateSubRuleNames: "aux_rule__argumentExprs_8"
  immediateSubRuleNames: "optional__simpleExpr1_1"
  canBeEpsilon: true
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__argumentExprs_8"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__expr_3"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "expr"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "exprs"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "optional__simpleExpr1_1"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "altnt_block__blockExpr_1"
  immediateSubRuleNames: "block"
  immediateSubRuleNames: "caseClauses"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__blockStat_6"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__blockStat_7"
  transitiveSubRuleNames: "aux_rule__blockStat_8"
  transitiveSubRuleNames: "aux_rule__blockStat_9"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__expr1_20"
  transitiveSubRuleNames: "aux_rule__expr1_21"
  transitiveSubRuleNames: "aux_rule__expr1_22"
  transitiveSubRuleNames: "aux_rule__expr1_23"
  transitiveSubRuleNames: "aux_rule__expr1_24"
  transitiveSubRuleNames: "aux_rule__expr1_25"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "block"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "blockStat"
  transitiveSubRuleNames: "caseClause"
  transitiveSubRuleNames: "caseClauses"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "expr1"
  transitiveSubRuleNames: "import_"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "kleene_plus__block_1"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "tmplDef"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "return"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "altnt_block__simplePattern_9"
  immediateSubRuleNames: "aux_rule__simplePattern_12"
  immediateSubRuleNames: "optional__simplePattern_3"
  canBeEpsilon: true
  transitiveSubRuleNames: "aux_rule__simplePattern_12"
  transitiveSubRuleNames: "aux_rule__simplePattern_2"
  transitiveSubRuleNames: "optional__simplePattern_3"
}
entries {
  ruleName: "altnt_block__selfType_3"
  immediateSubRuleNames: "aux_rule__selfType_4"
  immediateSubRuleNames: "aux_rule__selfType_5"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "aux_rule__selfType_4"
  transitiveSubRuleNames: "aux_rule__selfType_5"
}
entries {
  ruleName: "altnt_block__funDef_5"
  immediateSubRuleNames: "aux_rule__funDef_10"
  immediateSubRuleNames: "aux_rule__funDef_9"
  transitiveSubRuleNames: "aux_rule__funDef_10"
  transitiveSubRuleNames: "aux_rule__funDef_9"
}
entries {
  ruleName: "altnt_block__expr1_17"
  immediateSubRuleNames: "aux_rule__expr1_30"
  immediateSubRuleNames: "aux_rule__expr1_31"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "aux_rule__expr1_30"
  transitiveSubRuleNames: "aux_rule__expr1_31"
}
entries {
  ruleName: "altnt_block__expr_2"
  immediateSubRuleNames: "aux_rule__expr_4"
  immediateSubRuleNames: "bindings"
  immediateStringLiterals: "_"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "aux_rule__expr_4"
  transitiveSubRuleNames: "bindings"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "altnt_block__simpleExpr_1"
  immediateSubRuleNames: "classTemplate"
  immediateSubRuleNames: "templateBody"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "classParents"
  transitiveSubRuleNames: "classTemplate"
  transitiveSubRuleNames: "constr"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "templateBody"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "altnt_block__resultExpr_2"
  immediateSubRuleNames: "aux_rule__resultExpr_5"
  immediateSubRuleNames: "bindings"
  transitiveSubRuleNames: "aux_rule__resultExpr_5"
  transitiveSubRuleNames: "bindings"
}
entries {
  ruleName: "altnt_block__pattern1_1"
  immediateSubRuleNames: "BoundVarid"
  immediateSubRuleNames: "Id"
  immediateStringLiterals: "_"
  transitiveSubRuleNames: "BoundVarid"
  transitiveSubRuleNames: "Id"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "altnt_block__typeParam_10"
  immediateSubRuleNames: "Id"
  immediateStringLiterals: "_"
  transitiveSubRuleNames: "Id"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "altnt_block__accessModifier_2"
  immediateStringLiterals: "private"
  immediateStringLiterals: "protected"
  transitiveStringLiterals: "private"
  transitiveStringLiterals: "protected"
}
entries {
  ruleName: "altnt_block__accessQualifier_1"
  immediateSubRuleNames: "Id"
  immediateStringLiterals: "this"
  transitiveSubRuleNames: "Id"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "altnt_block__importSelectors_3"
  immediateSubRuleNames: "importSelector"
  immediateStringLiterals: "_"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "importSelector"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "altnt_block__funDef_6"
  immediateSubRuleNames: "aux_rule__funDef_11"
  immediateSubRuleNames: "aux_rule__funDef_12"
  transitiveSubRuleNames: "aux_rule__funDef_11"
  transitiveSubRuleNames: "aux_rule__funDef_12"
  transitiveSubRuleNames: "constrBlock"
}
entries {
  ruleName: "altnt_block__expr1_18"
  immediateSubRuleNames: "aux_rule__expr1_32"
  immediateSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "altnt_block__importExpr_3"
  immediateSubRuleNames: "Id"
  immediateSubRuleNames: "importSelectors"
  immediateStringLiterals: "_"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "importSelectors"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "altnt_block__stableId_7"
  immediateSubRuleNames: "aux_rule__stableId_9"
  immediateStringLiterals: "this"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "altnt_block__expr1_19"
  immediateSubRuleNames: "aux_rule__expr1_33"
  immediateSubRuleNames: "aux_rule__expr1_34"
  transitiveSubRuleNames: "aux_rule__expr1_33"
  transitiveSubRuleNames: "aux_rule__expr1_34"
}
entries {
  ruleName: "altnt_block__literal_3"
  immediateSubRuleNames: "FloatingPointLiteral"
  immediateSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "IntegerLiteral"
}
entries {
  ruleName: "altnt_block__dcl_2"
  immediateStringLiterals: "val"
  immediateStringLiterals: "var"
  transitiveStringLiterals: "val"
  transitiveStringLiterals: "var"
}
entries {
  ruleName: "altnt_block__blockStat_6"
  immediateSubRuleNames: "aux_rule__blockStat_8"
  immediateSubRuleNames: "aux_rule__blockStat_9"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__blockStat_8"
  transitiveSubRuleNames: "aux_rule__blockStat_9"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "altnt_block__tmplDef_3"
  immediateSubRuleNames: "aux_rule__tmplDef_6"
  immediateSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
}
entries {
  ruleName: "altnt_block__templateStat_9"
  immediateSubRuleNames: "dcl"
  immediateSubRuleNames: "def"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__dcl_3"
  transitiveSubRuleNames: "aux_rule__dcl_4"
  transitiveSubRuleNames: "aux_rule__dcl_5"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "dcl"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "altnt_block__resultExpr_3"
  immediateSubRuleNames: "aux_rule__resultExpr_6"
  immediateStringLiterals: "_"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "aux_rule__resultExpr_6"
  transitiveStringLiterals: "_"
}
entries {
  ruleName: "aux_rule__literal_4"
  immediateSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "altnt_block__literal_3"
}
entries {
  ruleName: "aux_rule__type__2"
}
entries {
  ruleName: "aux_rule__type__3"
  immediateSubRuleNames: "infixType"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__functionArgTypes_5"
}
entries {
  ruleName: "aux_rule__existentialDcl_1"
}
entries {
  ruleName: "aux_rule__existentialDcl_2"
}
entries {
  ruleName: "aux_rule__compoundType_4"
  immediateSubRuleNames: "annotType"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__refineStat_1"
}
entries {
  ruleName: "aux_rule__expr_3"
}
entries {
  ruleName: "aux_rule__expr1_20"
}
entries {
  ruleName: "aux_rule__expr1_21"
}
entries {
  ruleName: "aux_rule__expr1_22"
}
entries {
  ruleName: "aux_rule__expr1_23"
  immediateStringLiterals: "return"
  transitiveStringLiterals: "return"
}
entries {
  ruleName: "aux_rule__expr1_24"
}
entries {
  ruleName: "aux_rule__expr1_25"
  immediateSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__expr1_18"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__expr1_32"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__simpleExpr_2"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "infixExpr"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "postfixExpr"
  transitiveSubRuleNames: "prefixExpr"
  transitiveSubRuleNames: "simpleExpr"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__simpleExpr_2"
}
entries {
  ruleName: "aux_rule__argumentExprs_6"
  immediateSubRuleNames: "blockExpr"
  transitiveSubRuleNames: "blockExpr"
}
entries {
  ruleName: "aux_rule__argumentExprs_7"
}
entries {
  ruleName: "aux_rule__blockStat_7"
  immediateSubRuleNames: "altnt_block__blockStat_6"
  transitiveSubRuleNames: "altnt_block__blockStat_6"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__blockStat_8"
  transitiveSubRuleNames: "aux_rule__blockStat_9"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "aux_rule__resultExpr_4"
}
entries {
  ruleName: "aux_rule__pattern1_2"
}
entries {
  ruleName: "aux_rule__pattern2_3"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "aux_rule__simplePattern_10"
}
entries {
  ruleName: "aux_rule__simplePattern_11"
  immediateSubRuleNames: "stableId"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__patterns_3"
  immediateSubRuleNames: "pattern"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "Varid"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__pattern1_2"
  transitiveSubRuleNames: "aux_rule__pattern2_3"
  transitiveSubRuleNames: "aux_rule__simplePattern_10"
  transitiveSubRuleNames: "aux_rule__simplePattern_11"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "pattern"
  transitiveSubRuleNames: "pattern1"
  transitiveSubRuleNames: "pattern2"
  transitiveSubRuleNames: "pattern3"
  transitiveSubRuleNames: "simplePattern"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__patterns_4"
}
entries {
  ruleName: "aux_rule__paramType_2"
  immediateSubRuleNames: "type_"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "annotType"
  transitiveSubRuleNames: "aux_rule__compoundType_4"
  transitiveSubRuleNames: "aux_rule__simpleType_5"
  transitiveSubRuleNames: "aux_rule__simpleType_7"
  transitiveSubRuleNames: "aux_rule__simpleType_8"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "aux_rule__type__2"
  transitiveSubRuleNames: "aux_rule__type__3"
  transitiveSubRuleNames: "compoundType"
  transitiveSubRuleNames: "infixType"
  transitiveSubRuleNames: "refinement"
  transitiveSubRuleNames: "simpleType"
  transitiveSubRuleNames: "stableId"
  transitiveSubRuleNames: "type_"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__paramType_3"
}
entries {
  ruleName: "aux_rule__templateStat_10"
  immediateSubRuleNames: "altnt_block__templateStat_9"
  transitiveSubRuleNames: "altnt_block__templateStat_9"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__dcl_3"
  transitiveSubRuleNames: "aux_rule__dcl_4"
  transitiveSubRuleNames: "aux_rule__dcl_5"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "dcl"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "aux_rule__dcl_3"
}
entries {
  ruleName: "aux_rule__dcl_4"
}
entries {
  ruleName: "aux_rule__dcl_5"
}
entries {
  ruleName: "aux_rule__patVarDef_1"
}
entries {
  ruleName: "aux_rule__patVarDef_2"
}
entries {
  ruleName: "aux_rule__def_2"
}
entries {
  ruleName: "aux_rule__def_3"
}
entries {
  ruleName: "aux_rule__varDef_1"
}
entries {
  ruleName: "aux_rule__funDef_7"
}
entries {
  ruleName: "aux_rule__funDef_8"
}
entries {
  ruleName: "aux_rule__tmplDef_4"
}
entries {
  ruleName: "aux_rule__tmplDef_5"
  immediateSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
}
entries {
  ruleName: "aux_rule__classTemplateOpt_4"
}
entries {
  ruleName: "aux_rule__traitTemplateOpt_4"
}
entries {
  ruleName: "aux_rule__topStat_5"
  immediateSubRuleNames: "tmplDef"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "aux_rule__generator_3"
}
entries {
  ruleName: "aux_rule__stableId_8"
  immediateSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__simpleType_6"
}
entries {
  ruleName: "aux_rule__simpleType_7"
  immediateSubRuleNames: "stableId"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__simpleType_8"
}
entries {
  ruleName: "aux_rule__simpleExpr1_9"
  immediateSubRuleNames: "altnt_block__simpleExpr1_7"
  transitiveSubRuleNames: "altnt_block__simpleExpr1_7"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_12"
  transitiveSubRuleNames: "typeArgs"
}
entries {
  ruleName: "aux_rule__simpleExpr1_10"
}
entries {
  ruleName: "aux_rule__simpleExpr1_11"
}
entries {
  ruleName: "aux_rule__ascription_3"
}
entries {
  ruleName: "aux_rule__expr1_26"
}
entries {
  ruleName: "aux_rule__expr1_27"
}
entries {
  ruleName: "aux_rule__expr1_28"
}
entries {
  ruleName: "aux_rule__expr1_29"
}
entries {
  ruleName: "aux_rule__simpleExpr1_12"
}
entries {
  ruleName: "aux_rule__argumentExprs_8"
}
entries {
  ruleName: "aux_rule__simplePattern_12"
}
entries {
  ruleName: "aux_rule__selfType_4"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "aux_rule__selfType_5"
}
entries {
  ruleName: "aux_rule__funDef_9"
}
entries {
  ruleName: "aux_rule__funDef_10"
}
entries {
  ruleName: "aux_rule__expr1_30"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "aux_rule__expr1_31"
}
entries {
  ruleName: "aux_rule__expr_4"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
entries {
  ruleName: "aux_rule__resultExpr_5"
}
entries {
  ruleName: "aux_rule__funDef_11"
}
entries {
  ruleName: "aux_rule__funDef_12"
  immediateSubRuleNames: "constrBlock"
  transitiveSubRuleNames: "constrBlock"
}
entries {
  ruleName: "aux_rule__expr1_32"
  immediateSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "BooleanLiteral"
  transitiveSubRuleNames: "CharacterLiteral"
  transitiveSubRuleNames: "FloatingPointLiteral"
  transitiveSubRuleNames: "Id"
  transitiveSubRuleNames: "IntegerLiteral"
  transitiveSubRuleNames: "StringLiteral"
  transitiveSubRuleNames: "SymbolLiteral"
  transitiveSubRuleNames: "altnt_block__literal_3"
  transitiveSubRuleNames: "altnt_block__stableId_7"
  transitiveSubRuleNames: "aux_rule__literal_4"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_10"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_11"
  transitiveSubRuleNames: "aux_rule__simpleExpr1_6"
  transitiveSubRuleNames: "aux_rule__stableId_6"
  transitiveSubRuleNames: "aux_rule__stableId_8"
  transitiveSubRuleNames: "aux_rule__stableId_9"
  transitiveSubRuleNames: "literal"
  transitiveSubRuleNames: "simpleExpr1"
  transitiveSubRuleNames: "stableId"
  transitiveStringLiterals: "_"
  transitiveStringLiterals: "null"
  transitiveStringLiterals: "this"
}
entries {
  ruleName: "aux_rule__stableId_9"
}
entries {
  ruleName: "aux_rule__expr1_33"
}
entries {
  ruleName: "aux_rule__expr1_34"
}
entries {
  ruleName: "aux_rule__blockStat_8"
  immediateSubRuleNames: "def"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__def_2"
  transitiveSubRuleNames: "aux_rule__def_3"
  transitiveSubRuleNames: "aux_rule__patVarDef_1"
  transitiveSubRuleNames: "aux_rule__patVarDef_2"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "def"
  transitiveSubRuleNames: "patVarDef"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "aux_rule__blockStat_9"
  immediateSubRuleNames: "tmplDef"
  transitiveSubRuleNames: "altnt_block__tmplDef_3"
  transitiveSubRuleNames: "aux_rule__tmplDef_4"
  transitiveSubRuleNames: "aux_rule__tmplDef_5"
  transitiveSubRuleNames: "aux_rule__tmplDef_6"
  transitiveSubRuleNames: "aux_rule__tmplDef_7"
  transitiveSubRuleNames: "tmplDef"
}
entries {
  ruleName: "aux_rule__tmplDef_6"
}
entries {
  ruleName: "aux_rule__tmplDef_7"
}
entries {
  ruleName: "aux_rule__resultExpr_6"
  immediateSubRuleNames: "Id"
  transitiveSubRuleNames: "Id"
}
