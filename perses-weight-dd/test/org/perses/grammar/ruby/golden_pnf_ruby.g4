// Auto-generated by Perses AST.
// DO NOT MODIFY.
parser grammar PnfRubyParser;

options {
    tokenVocab=RubyLexer;
}


compilation_unit
    : statement_list_terms
    ;

statement_list_noterms
    : kleene_star__statement_list_terms_1 statement
    ;

statement
    : begin_block
    | end_block
    | alias_statement
    | undef_statement
    | ENSURE
    | expr
    ;

undef_statement
    : UNDEF function_name_or_symbol kleene_star__undef_statement_2
    ;

alias_statement
    : ALIAS function_name_or_symbol function_name_or_symbol
    ;

function_name_or_symbol
    : function_name
    | symbol
    ;

begin_block
    : BEGIN_BLOCK LEFT_PAREN statement_list_terms RIGHT_PAREN
    ;

end_block
    : END_BLOCK LEFT_PAREN statement_list_terms RIGHT_PAREN
    ;

module_definition
    : MODULE cpath optional__module_definition_1 END
    ;

class_definition
    : class_header optional__module_definition_1 END
    ;

superclass
    : '<' id_symbol terms
    ;

class_header
    : CLASS altnt_block__class_header_2
    ;

function_definition
    : function_definition_header optional__module_definition_1 END
    ;

function_definition_header
    : DEF function_name optional__function_definition_header_1 optional__expr_3 terms
    ;

function_name
    : aux_rule__function_name_3
    | literal
    | assignOperator
    | aux_rule__function_name_4
    | bitOperator
    | compareOperator
    | equalsOperator
    | logicalOperator
    ;

function_definition_params
    : aux_rule__function_definition_params_9
    | aux_rule__function_definition_params_10
    ;

function_definition_param
    : hash_asso
    | aux_rule__function_definition_param_3
    | aux_rule__function_definition_param_4
    ;

function_call_param
    : expr
    | hash_asso
    ;

expr_statement_suffix
    : aux_rule__expr_statement_suffix_10
    | aux_rule__expr_statement_suffix_11
    | aux_rule__expr_statement_suffix_12
    ;

func_call_parameters
    : LEFT_RBRACKET altnt_block__func_call_parameters_7 RIGHT_RBRACKET
    ;

func_call_parameters_no_bracket
    : function_call_param kleene_star__func_call_parameters_no_bracket_3
    ;

rescure_param
    : id_symbol
    | hash_asso
    | aux_rule__rescure_param_1
    ;

case_body
    : aux_rule__case_body_3
    | else_tail
    ;

when_cond
    : expr
    ;

if_tail
    : aux_rule__if_tail_2
    | else_tail
    ;

else_tail
    : ELSE optional__expr_1 statement_list_terms
    ;

dot_ref
    : DOT
    | ANDDOT
    ;

logicalOperator
    : OR
    | AND
    ;

equalsOperator
    : EQUAL
    | NOT_EQUAL
    | EQUAL3
    ;

compareOperator
    : LESS
    | GREATER
    | LESS_EQUAL
    | GREATER_EQUAL
    ;

bitOperator
    : BIT_SHL
    | BIT_SHR
    | BIT_AND
    | BIT_OR
    | BIT_XOR
    ;

mathOperator
    : MUL
    | DIV
    | MOD
    | PLUS
    | MINUS
    | EXP
    ;

assignOperator
    : PLUS_ASSIGN
    | MINUS_ASSIGN
    | MUL_ASSIGN
    | DIV_ASSIGN
    | MOD_ASSIGN
    | EXP_ASSIGN
    | BIT_OR_ASSIGN
    | BIT_AND_ASSIGN
    | OR_ASSIGN
    | AND_ASSIGN
    | BIT_XOR_ASSIGN
    | BIT_NOT_ASSIGN
    | BIT_SHL_ASSIGN
    | BIT_SHR_ASSIGN
    ;

block
    : LEFT_PAREN optional__expr_1 optional__block_2 statement_list_noterms optional__expr_1 kleene_star__block_6 RIGHT_PAREN
    ;

block_params
    : BIT_OR expr kleene_star__block_params_2 BIT_OR
    ;

id_symbol
    : optional__id_symbol_1 cpath
    ;

symbol
    : COLON altnt_block__symbol_1
    ;

hash_asso
    : expr altnt_block__hash_asso_1 expr
    ;

cpath
    : identifier kleene_star__cpath_2
    ;

literal
    : string
    | Integer
    | TRUE
    | FALSE
    | NIL
    | aux_rule__literal_2
    | ShellCommand
    ;

globalVar
    : DOLLAR Identifier
    ;

classVar
    : AT AT Identifier
    ;

instanceVar
    : AT Identifier
    ;

do_keyword
    : optional__do_keyword_2 terms
    ;

then_keyword
    : aux_rule__then_keyword_3
    | terms
    ;

string
    : String+
    ;

crlfs
    : aux_rule__crlfs_1+
    ;

terms
    : term+
    ;

term
    : SEMICOLON
    | CRLF
    | SL_COMMENT
    ;

aux_rule__undef_statement_1
    : ',' function_name_or_symbol
    ;

kleene_star__undef_statement_2
    : aux_rule__undef_statement_1*
    ;

optional__module_definition_1
    : statement_list_terms?
    ;

optional__class_header_1
    : superclass?
    ;

optional__function_definition_header_1
    : function_definition_params?
    ;

aux_rule__function_name_1
    : QUESTION
    | SIGH
    | ASSIGN
    ;

optional__function_name_2
    : aux_rule__function_name_1?
    ;

aux_rule__function_definition_params_2
    : ',' optional__expr_1 function_definition_param
    ;

kleene_star__function_definition_params_3
    : aux_rule__function_definition_params_2*
    ;

aux_rule__function_definition_params_4
    : function_definition_param kleene_star__function_definition_params_3
    ;

optional__function_definition_params_5
    : aux_rule__function_definition_params_4?
    ;

optional__expr_1
    : crlfs?
    ;

optional__expr_3
    : expr?
    ;

optional__expr_4
    : ','?
    ;

optional__expr_5
    : MUL?
    ;

optional__expr_12
    : expr_statement_suffix?
    ;

optional__primary_3
    : rescure_param?
    ;

optional__primary_4
    : else_tail?
    ;

aux_rule__primary_7
    : ELSIF expr then_keyword statement
    ;

optional__primary_8
    : aux_rule__primary_7?
    ;

aux_rule__primary_9
    : ELSE expr
    ;

optional__primary_10
    : aux_rule__primary_9?
    ;

kleene_star__primary_13
    : if_tail*
    ;

kleene_star__primary_18
    : case_body*
    ;

optional__primary_25
    : terms?
    ;

aux_rule__primary_30
    : ',' optional__expr_1 hash_asso
    ;

kleene_star__primary_31
    : aux_rule__primary_30*
    ;

aux_rule__primary_37
    : ',' optional__expr_1 expr
    ;

kleene_star__primary_38
    : aux_rule__primary_37*
    ;

aux_rule__func_call_parameters_no_bracket_2
    : ',' optional__expr_1 function_call_param
    ;

kleene_star__func_call_parameters_no_bracket_3
    : aux_rule__func_call_parameters_no_bracket_2*
    ;

aux_rule__case_body_1
    : ',' when_cond
    ;

kleene_star__case_body_2
    : aux_rule__case_body_1*
    ;

optional__block_2
    : block_params?
    ;

aux_rule__block_5
    : ',' statement_list_noterms optional__expr_1
    ;

kleene_star__block_6
    : aux_rule__block_5*
    ;

aux_rule__block_params_1
    : ',' expr
    ;

kleene_star__block_params_2
    : aux_rule__block_params_1*
    ;

aux_rule__cpath_1
    : altnt_block__cpath_3 identifier
    ;

kleene_star__cpath_2
    : aux_rule__cpath_1*
    ;

aux_rule__crlfs_1
    : SL_COMMENT
    | CRLF
    ;

aux_rule__statement_list_terms_2
    : statement terms
    ;

kleene_star__statement_list_terms_1
    : aux_rule__statement_list_terms_2*
    ;

aux_rule__statement_list_terms_3
    : optional__statement_list_terms_4 terms
    ;

statement_list_terms
    : aux_rule__statement_list_terms_3 kleene_star__statement_list_terms_1
    ;

aux_rule__expr_15
    : aux_rule__expr_30
    | aux_rule__expr_31
    | aux_rule__expr_32
    | block
    | expr_statement_suffix
    | aux_rule__expr_33
    | aux_rule__expr_34
    ;

kleene_star__expr_14
    : aux_rule__expr_15*
    ;

expr
    : aux_rule__expr_16 kleene_star__expr_14
    ;

aux_rule__variable_path_2
    : COLON2 altnt_block__variable_path_4
    ;

kleene_star__variable_path_1
    : aux_rule__variable_path_2*
    ;

aux_rule__variable_path_3
    : identifier
    | literal
    | aux_rule__variable_path_5
    ;

variable_path
    : aux_rule__variable_path_3 kleene_star__variable_path_1
    ;

optional__statement_list_terms_4
    : statement?
    ;

optional__expr_17
    : SIGH?
    ;

aux_rule__expr_18
    : expr COLON expr
    ;

optional__expr_19
    : aux_rule__expr_18?
    ;

optional__id_symbol_1
    : COLON?
    ;

optional__literal_1
    : DOT?
    ;

optional__function_definition_param_1
    : BIT_AND?
    ;

aux_rule__primary_42
    : altnt_block__expr_23 optional__expr_3
    ;

optional__primary_43
    : aux_rule__primary_42?
    ;

altnt_block__do_keyword_1
    : DO
    | COLON
    ;

optional__do_keyword_2
    : altnt_block__do_keyword_1?
    ;

altnt_block__expr_20
    : PATTERN_MATCH
    | aux_rule__expr_35
    | aux_rule__expr_36
    ;

altnt_block__expr_21
    : CLASS
    | aux_rule__expr_37
    ;

altnt_block__symbol_1
    : aux_rule__symbol_2
    | function_name
    ;

altnt_block__class_header_2
    : aux_rule__class_header_3
    | aux_rule__class_header_4
    ;

altnt_block__function_definition_param_2
    : MUL
    | EXP
    | optional__function_definition_param_1
    ;

altnt_block__hash_asso_1
    : ASSOC
    | COLON
    ;

altnt_block__primary_44
    : aux_rule__primary_51
    | aux_rule__primary_52
    | aux_rule__primary_53
    | aux_rule__primary_54
    | aux_rule__primary_55
    ;

altnt_block__expr_statement_suffix_8
    : altnt_block__expr_statement_suffix_9 optional__expr_1
    ;

altnt_block__func_call_parameters_7
    : optional__expr_1 optional__func_call_parameters_9
    ;

altnt_block__primary_45
    : aux_rule__primary_56
    | aux_rule__primary_57
    ;

altnt_block__primary_46
    : altnt_block__primary_49 kleene_star__primary_18
    ;

aux_rule__expr_16
    : variable_path
    | Regex
    | symbol
    | block
    | aux_rule__expr_38
    | class_definition
    | function_definition
    | module_definition
    | aux_rule__expr_39
    | aux_rule__expr_40
    | aux_rule__expr_41
    | aux_rule__expr_42
    | aux_rule__expr_43
    | aux_rule__expr_44
    | aux_rule__expr_45
    | aux_rule__expr_46
    ;

identifier
    : Identifier
    | globalVar
    | classVar
    | instanceVar
    | aux_rule__identifier_1
    | DollarSpecial
    | NEXT
    | REDO
    | RETRY
    | BREAK
    | SELF
    | SUPER
    | NIL
    | aux_rule__identifier_2
    | aux_rule__identifier_3
    ;

altnt_block__then_keyword_2
    : THEN
    | COLON
    ;

altnt_block__cpath_3
    : COLON2
    | DOT
    ;

altnt_block__expr_23
    : DOT2
    | DOT3
    ;

altnt_block__variable_path_4
    : identifier
    | literal
    ;

altnt_block__expr_25
    : QUESTION
    | SIGH
    ;

aux_rule__func_call_parameters_8
    : function_call_param kleene_star__func_call_parameters_no_bracket_3 optional__expr_1
    ;

optional__func_call_parameters_9
    : aux_rule__func_call_parameters_8?
    ;

altnt_block__expr_26
    : BREAK
    | RETURN
    | YIELD
    ;

altnt_block__expr_27
    : func_call_parameters
    | aux_rule__expr_47
    ;

altnt_block__primary_48
    : aux_rule__primary_58
    | aux_rule__primary_59
    | aux_rule__primary_60
    ;

altnt_block__primary_49
    : optional__module_definition_1
    | terms
    ;

altnt_block__expr_statement_suffix_9
    : IF
    | UNLESS
    | WHILE
    | UNTIL
    ;

altnt_block__primary_50
    : WHILE
    | UNTIL
    ;

altnt_block__expr_28
    : RAISE
    | PLUS
    | MINUS
    | MUL
    | MOD
    | BIT_AND
    | DEFINED
    | NOT
    | SIGH
    | BIT_NOT
    ;

altnt_block__expr_29
    : ','
    | dot_ref
    | aux_rule__expr_48
    | assignOperator
    | compareOperator
    | logicalOperator
    | equalsOperator
    | mathOperator
    | bitOperator
    ;

aux_rule__function_name_3
    : cpath optional__function_name_2
    ;

aux_rule__function_name_4
    : mathOperator AT
    ;

aux_rule__function_definition_params_9
    : LEFT_RBRACKET optional__function_definition_params_5 RIGHT_RBRACKET
    ;

aux_rule__function_definition_params_10
    : function_definition_param kleene_star__function_definition_params_3
    ;

aux_rule__function_definition_param_3
    : identifier ASSIGN expr
    ;

aux_rule__function_definition_param_4
    : altnt_block__function_definition_param_2 identifier
    ;

aux_rule__expr_statement_suffix_10
    : RESCUE statement
    ;

aux_rule__expr_statement_suffix_11
    : DO optional__block_2 optional__primary_25 optional__module_definition_1 END
    ;

aux_rule__expr_statement_suffix_12
    : altnt_block__expr_statement_suffix_8 expr
    ;

aux_rule__rescure_param_1
    : ASSOC identifier
    ;

aux_rule__case_body_3
    : WHEN when_cond kleene_star__case_body_2 then_keyword statement_list_terms
    ;

aux_rule__if_tail_2
    : ELSIF optional__expr_1 expr then_keyword statement_list_terms
    ;

aux_rule__literal_2
    : Float optional__literal_1
    ;

aux_rule__then_keyword_3
    : altnt_block__then_keyword_2 optional__primary_25
    ;

aux_rule__expr_30
    : LEFT_SBRACKET expr RIGHT_SBRACKET
    ;

aux_rule__expr_31
    : altnt_block__expr_23 optional__expr_3
    ;

aux_rule__expr_32
    : QUESTION optional__expr_19
    ;

aux_rule__expr_33
    : altnt_block__expr_20 expr
    ;

aux_rule__expr_34
    : dot_ref altnt_block__expr_21
    ;

aux_rule__variable_path_5
    : COLON2 variable_path
    ;

aux_rule__expr_35
    : optional__expr_17 BIT_NOT
    ;

aux_rule__expr_36
    : altnt_block__expr_29 optional__expr_1
    ;

aux_rule__expr_37
    : function_name func_call_parameters_no_bracket optional__expr_12
    ;

aux_rule__symbol_2
    : identifier COLON string
    ;

aux_rule__class_header_3
    : cpath optional__class_header_1
    ;

aux_rule__class_header_4
    : BIT_SHL identifier
    ;

aux_rule__primary_51
    : WHEN expr then_keyword statement_list_noterms
    ;

aux_rule__primary_52
    : UNLESS optional__expr_1 expr then_keyword optional__module_definition_1 optional__primary_4
    ;

aux_rule__primary_53
    : IF altnt_block__primary_45
    ;

aux_rule__primary_54
    : CASE altnt_block__primary_46
    ;

aux_rule__primary_55
    : altnt_block__primary_48 optional__module_definition_1
    ;

aux_rule__primary_56
    : expr then_keyword statement optional__primary_8 optional__primary_10
    ;

aux_rule__primary_57
    : optional__expr_1 expr then_keyword optional__module_definition_1 kleene_star__primary_13
    ;

aux_rule__expr_38
    : RESCUE optional__primary_3 optional__primary_4
    ;

aux_rule__expr_39
    : LEFT_PAREN optional__expr_1 hash_asso optional__expr_1 kleene_star__primary_31 optional__expr_4 optional__expr_1 RIGHT_PAREN
    ;

aux_rule__expr_40
    : LEFT_SBRACKET optional__expr_1 expr optional__expr_1 kleene_star__primary_38 optional__expr_4 optional__expr_1 RIGHT_SBRACKET
    ;

aux_rule__expr_41
    : LEFT_RBRACKET expr optional__primary_43 RIGHT_RBRACKET
    ;

aux_rule__expr_42
    : altnt_block__primary_44 END
    ;

aux_rule__expr_43
    : cpath altnt_block__expr_25
    ;

aux_rule__expr_44
    : altnt_block__expr_26 optional__expr_3
    ;

aux_rule__expr_45
    : function_name altnt_block__expr_27
    ;

aux_rule__expr_46
    : altnt_block__expr_28 expr
    ;

aux_rule__identifier_1
    : DOLLAR Integer
    ;

aux_rule__identifier_2
    : LEFT_PAREN RIGHT_PAREN
    ;

aux_rule__identifier_3
    : LEFT_SBRACKET RIGHT_SBRACKET
    ;

aux_rule__expr_47
    : func_call_parameters_no_bracket optional__expr_12
    ;

aux_rule__primary_58
    : BEGIN terms
    ;

aux_rule__primary_59
    : FOR optional__expr_1 expr IN when_cond optional__primary_25
    ;

aux_rule__primary_60
    : altnt_block__primary_50 optional__expr_1 expr do_keyword
    ;

aux_rule__expr_48
    : optional__expr_4 optional__expr_5 ASSIGN
    ;

