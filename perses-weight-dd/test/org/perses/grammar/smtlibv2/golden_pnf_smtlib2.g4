// Auto-generated by Perses AST.
// DO NOT MODIFY.
grammar PnfSMTLIBv2;

Comment
    : Semicolon (~[\r\n])* -> skip

    ;
ParOpen
    : '('
    ;
ParClose
    : ')'
    ;
Semicolon
    : ';'
    ;
String
    : '"' (PrintableCharNoDquote | WhiteSpaceChar)+ '"'
    ;
QuotedSymbol
    : '|' (PrintableCharNoBackslash | WhiteSpaceChar)+ '|'
    ;
PS_Not
    : 'not'
    ;
PS_Bool
    : 'Bool'
    ;
PS_ContinuedExecution
    : 'continued-execution'
    ;
PS_Error
    : 'error'
    ;
PS_False
    : 'false'
    ;
PS_ImmediateExit
    : 'immediate-exit'
    ;
PS_Incomplete
    : 'incomplete'
    ;
PS_Logic
    : 'logic'
    ;
PS_Memout
    : 'memout'
    ;
PS_Sat
    : 'sat'
    ;
PS_Success
    : 'success'
    ;
PS_Theory
    : 'theory'
    ;
PS_True
    : 'true'
    ;
PS_Unknown
    : 'unknown'
    ;
PS_Unsupported
    : 'unsupported'
    ;
PS_Unsat
    : 'unsat'
    ;
CMD_Assert
    : 'assert'
    ;
CMD_CheckSat
    : 'check-sat'
    ;
CMD_CheckSatAssuming
    : 'check-sat-assuming'
    ;
CMD_DeclareConst
    : 'declare-const'
    ;
CMD_DeclareDatatype
    : 'declare-datatype'
    ;
CMD_DeclareDatatypes
    : 'declare-datatypes'
    ;
CMD_DeclareFun
    : 'declare-fun'
    ;
CMD_DeclareSort
    : 'declare-sort'
    ;
CMD_DefineFun
    : 'define-fun'
    ;
CMD_DefineFunRec
    : 'define-fun-rec'
    ;
CMD_DefineFunsRec
    : 'define-funs-rec'
    ;
CMD_DefineSort
    : 'define-sort'
    ;
CMD_Echo
    : 'echo'
    ;
CMD_Exit
    : 'exit'
    ;
CMD_GetAssertions
    : 'get-assertions'
    ;
CMD_GetAssignment
    : 'get-assignment'
    ;
CMD_GetInfo
    : 'get-info'
    ;
CMD_GetModel
    : 'get-model'
    ;
CMD_GetOption
    : 'get-option'
    ;
CMD_GetProof
    : 'get-proof'
    ;
CMD_GetUnsatAssumptions
    : 'get-unsat-assumptions'
    ;
CMD_GetUnsatCore
    : 'get-unsat-core'
    ;
CMD_GetValue
    : 'get-value'
    ;
CMD_Pop
    : 'pop'
    ;
CMD_Push
    : 'push'
    ;
CMD_Reset
    : 'reset'
    ;
CMD_ResetAssertions
    : 'reset-assertions'
    ;
CMD_SetInfo
    : 'set-info'
    ;
CMD_SetLogic
    : 'set-logic'
    ;
CMD_SetOption
    : 'set-option'
    ;
CMD_GetQe
    : 'get-qe'
    ;
CMD_Declareheap
    : 'declare-heap'
    ;
GRW_Exclamation
    : '!'
    ;
GRW_Underscore
    : '_'
    ;
GRW_As
    : 'as'
    ;
GRW_Binary
    : 'BINARY'
    ;
GRW_Decimal
    : 'DECIMAL'
    ;
GRW_Exists
    : 'exists'
    ;
GRW_Hexadecimal
    : 'HEXADECIMAL'
    ;
GRW_Forall
    : 'forall'
    ;
GRW_Let
    : 'let'
    ;
GRW_Match
    : 'match'
    ;
GRW_Numeral
    : 'NUMERAL'
    ;
GRW_Par
    : 'par'
    ;
GRW_String
    : 'string'
    ;
Numeral
    : '0'
    | [1-9] Digit*
    ;
Binary
    : '#b' BinaryDigit+
    ;
HexDecimal
    : '#x' HexDigit HexDigit HexDigit HexDigit
    ;
Decimal
    : Numeral '.' '0'* Numeral
    ;
fragment HexDigit
    : '0'..'9'
    | 'a'..'f'
    | 'A'..'F'
    ;
Colon
    : ':'
    ;
fragment Digit
    : [0-9]
    ;
fragment Sym
    : 'a'..'z'
    | 'A'..'Z'
    | '+'
    | '='
    | '/'
    | '*'
    | '%'
    | '?'
    | '!'
    | '$'
    | '-'
    | '_'
    | '~'
    | '&'
    | '^'
    | '<'
    | '>'
    | '@'
    | '.'
    ;
fragment BinaryDigit
    : [01]
    ;
fragment PrintableChar
    : '\u0020'..'\u007E'
    | '\u0080'..'\uffff'
    | EscapedSpace
    ;
fragment PrintableCharNoDquote
    : '\u0020'..'\u0021'
    | '\u0023'..'\u007E'
    | '\u0080'..'\uffff'
    | EscapedSpace
    ;
fragment PrintableCharNoBackslash
    : '\u0020'..'\u005B'
    | '\u005D'..'\u007B'
    | '\u007D'..'\u007E'
    | '\u0080'..'\uffff'
    | EscapedSpace
    ;
fragment EscapedSpace
    : '""'
    ;
fragment WhiteSpaceChar
    : '\u0009'
    | '\u000A'
    | '\u000D'
    | '\u0020'
    ;
PK_AllStatistics
    : ':all-statistics'
    ;
PK_AssertionStackLevels
    : ':assertion-stack-levels'
    ;
PK_Authors
    : ':authors'
    ;
PK_Category
    : ':category'
    ;
PK_Chainable
    : ':chainable'
    ;
PK_Definition
    : ':definition'
    ;
PK_DiagnosticOutputChannel
    : ':diagnostic-output-channel'
    ;
PK_ErrorBehaviour
    : ':error-behavior'
    ;
PK_Extension
    : ':extensions'
    ;
PK_Funs
    : ':funs'
    ;
PK_FunsDescription
    : ':funs-description'
    ;
PK_GlobalDeclarations
    : ':global-declarations'
    ;
PK_InteractiveMode
    : ':interactive-mode'
    ;
PK_Language
    : ':language'
    ;
PK_LeftAssoc
    : ':left-assoc'
    ;
PK_License
    : ':license'
    ;
PK_Named
    : ':named'
    ;
PK_Name
    : ':name'
    ;
PK_Notes
    : ':notes'
    ;
PK_Pattern
    : ':pattern'
    ;
PK_PrintSuccess
    : ':print-success'
    ;
PK_ProduceAssertions
    : ':produce-assertions'
    ;
PK_ProduceAssignments
    : ':produce-assignments'
    ;
PK_ProduceModels
    : ':produce-models'
    ;
PK_ProduceProofs
    : ':produce-proofs'
    ;
PK_ProduceUnsatAssumptions
    : ':produce-unsat-assumptions'
    ;
PK_ProduceUnsatCores
    : ':produce-unsat-cores'
    ;
PK_RandomSeed
    : ':random-seed'
    ;
PK_ReasonUnknown
    : ':reason-unknown'
    ;
PK_RegularOutputChannel
    : ':regular-output-channel'
    ;
PK_ReproducibleResourceLimit
    : ':reproducible-resource-limit'
    ;
PK_RightAssoc
    : ':right-assoc'
    ;
PK_SmtLibVersion
    : ':smt-lib-version'
    ;
PK_Sorts
    : ':sorts'
    ;
PK_SortsDescription
    : ':sorts-description'
    ;
PK_Source
    : ':source'
    ;
PK_Status
    : ':status'
    ;
PK_Theories
    : ':theories'
    ;
PK_Values
    : ':values'
    ;
PK_Verbosity
    : ':verbosity'
    ;
PK_Version
    : ':version'
    ;
UndefinedSymbol
    : Sym (Digit | Sym)*
    ;
WS
    : [ \t\r\n]+ -> skip

    ;


start
    : script EOF
    ;

quotedSymbol
    : QuotedSymbol
    ;

symbol
    : simpleSymbol
    | quotedSymbol
    ;

numeral
    : Numeral
    ;

decimal
    : Decimal
    ;

hexadecimal
    : HexDecimal
    ;

binary
    : Binary
    ;

string
    : String
    ;

spec_constant
    : numeral
    | decimal
    | hexadecimal
    | binary
    | string
    ;

s_expr
    : spec_constant
    | symbol
    | keyword
    | aux_rule__s_expr_2
    ;

index
    : numeral
    | symbol
    ;

identifier
    : symbol
    | aux_rule__identifier_2
    ;

attribute_value
    : spec_constant
    | symbol
    | aux_rule__attribute_value_2
    ;

attribute
    : keyword optional__attribute_1
    ;

sort
    : identifier
    | aux_rule__sort_2
    ;

qual_identifier
    : identifier
    | aux_rule__qual_identifier_1
    ;

var_binding
    : ParOpen symbol term ParClose
    ;

sorted_var
    : ParOpen symbol sort ParClose
    ;

pattern
    : symbol
    | aux_rule__pattern_2
    ;

match_case
    : ParOpen pattern term ParClose
    ;

term
    : spec_constant
    | qual_identifier
    | aux_rule__term_10
    ;

sort_dec
    : ParOpen symbol numeral ParClose
    ;

constructor_dec
    : ParOpen symbol kleene_star__constructor_dec_1 ParClose
    ;

datatype_dec
    : ParOpen altnt_block__datatype_dec_4 ParClose
    ;

function_dec
    : ParOpen symbol ParOpen kleene_star__constructor_dec_1 ParClose sort ParClose
    ;

function_def
    : symbol ParOpen kleene_star__constructor_dec_1 ParClose sort term
    ;

script
    : command*
    ;

cmd_assert
    : CMD_Assert
    ;

cmd_checkSat
    : CMD_CheckSat
    ;

cmd_checkSatAssuming
    : CMD_CheckSatAssuming
    ;

cmd_declareConst
    : CMD_DeclareConst
    ;

cmd_declareDatatype
    : CMD_DeclareDatatype
    ;

cmd_declareDatatypes
    : CMD_DeclareDatatypes
    ;

cmd_declareFun
    : CMD_DeclareFun
    ;

cmd_declareSort
    : CMD_DeclareSort
    ;

cmd_defineFun
    : CMD_DefineFun
    ;

cmd_defineFunRec
    : CMD_DefineFunRec
    ;

cmd_defineFunsRec
    : CMD_DefineFunsRec
    ;

cmd_defineSort
    : CMD_DefineSort
    ;

cmd_echo
    : CMD_Echo
    ;

cmd_exit
    : CMD_Exit
    ;

cmd_getAssertions
    : CMD_GetAssertions
    ;

cmd_getAssignment
    : CMD_GetAssignment
    ;

cmd_getInfo
    : CMD_GetInfo
    ;

cmd_getModel
    : CMD_GetModel
    ;

cmd_getOption
    : CMD_GetOption
    ;

cmd_getProof
    : CMD_GetProof
    ;

cmd_getUnsatAssumptions
    : CMD_GetUnsatAssumptions
    ;

cmd_getUnsatCore
    : CMD_GetUnsatCore
    ;

cmd_getValue
    : CMD_GetValue
    ;

cmd_pop
    : CMD_Pop
    ;

cmd_push
    : CMD_Push
    ;

cmd_reset
    : CMD_Reset
    ;

cmd_resetAssertions
    : CMD_ResetAssertions
    ;

cmd_setInfo
    : CMD_SetInfo
    ;

cmd_setLogic
    : CMD_SetLogic
    ;

cmd_setOption
    : CMD_SetOption
    ;

cmd_getQe
    : CMD_GetQe
    ;

cmd_declareHeap
    : CMD_Declareheap
    ;

command
    : ParOpen altnt_block__command_12 ParClose
    ;

b_value
    : PS_True
    | PS_False
    ;

option
    : attribute
    | aux_rule__option_4
    | aux_rule__option_5
    | aux_rule__option_6
    ;

info_flag
    : PK_AllStatistics
    | PK_AssertionStackLevels
    | PK_Authors
    | PK_ErrorBehaviour
    | PK_Name
    | PK_ReasonUnknown
    | PK_Version
    | keyword
    ;

kleene_star__s_expr_1
    : s_expr*
    ;

kleene_plus__identifier_1
    : index+
    ;

kleene_plus__sort_1
    : sort+
    ;

kleene_plus__pattern_1
    : symbol+
    ;

kleene_plus__term_1
    : term+
    ;

kleene_plus__term_2
    : var_binding+
    ;

kleene_plus__term_3
    : sorted_var+
    ;

kleene_plus__term_5
    : match_case+
    ;

kleene_plus__term_6
    : attribute+
    ;

kleene_star__constructor_dec_1
    : sorted_var*
    ;

kleene_plus__datatype_dec_1
    : constructor_dec+
    ;

kleene_star__command_1
    : sort*
    ;

kleene_star__command_2
    : term*
    ;

aux_rule__command_3
    : ParOpen kleene_star__command_2 ParClose
    ;

kleene_star__command_4
    : aux_rule__command_3*
    ;

kleene_plus__command_5
    : sort_dec+
    ;

kleene_plus__command_6
    : datatype_dec+
    ;

kleene_plus__command_8
    : function_dec+
    ;

kleene_star__command_10
    : symbol*
    ;

optional__attribute_1
    : attribute_value?
    ;

altnt_block__term_7
    : aux_rule__term_11
    | aux_rule__term_12
    | aux_rule__term_13
    | aux_rule__term_14
    ;

altnt_block__datatype_dec_4
    : kleene_plus__datatype_dec_1
    | aux_rule__datatype_dec_5
    ;

altnt_block__command_12
    : cmd_checkSat
    | aux_rule__command_20
    | aux_rule__command_21
    | aux_rule__command_22
    | cmd_exit
    | cmd_getAssertions
    | cmd_getAssignment
    | aux_rule__command_23
    | cmd_getModel
    | aux_rule__command_24
    | cmd_getProof
    | cmd_getUnsatAssumptions
    | cmd_getUnsatCore
    | cmd_reset
    | cmd_resetAssertions
    | aux_rule__command_25
    | aux_rule__command_26
    | aux_rule__command_27
    | aux_rule__command_28
    | aux_rule__command_29
    | aux_rule__command_30
    | aux_rule__command_31
    | aux_rule__command_32
    ;

altnt_block__option_1
    : PK_GlobalDeclarations
    | PK_InteractiveMode
    | PK_PrintSuccess
    | PK_ProduceAssertions
    | PK_ProduceAssignments
    | PK_ProduceModels
    | PK_ProduceProofs
    | PK_ProduceUnsatAssumptions
    | PK_ProduceUnsatCores
    ;

altnt_block__option_2
    : PK_RandomSeed
    | PK_ReproducibleResourceLimit
    | PK_Verbosity
    ;

altnt_block__option_3
    : PK_DiagnosticOutputChannel
    | PK_RegularOutputChannel
    ;

altnt_block__term_8
    : aux_rule__term_15
    | aux_rule__term_16
    ;

altnt_block__command_13
    : aux_rule__command_33
    | aux_rule__command_34
    | aux_rule__command_35
    ;

altnt_block__command_14
    : aux_rule__command_36
    | aux_rule__command_37
    ;

altnt_block__command_15
    : aux_rule__command_38
    | cmd_pop
    | cmd_push
    ;

altnt_block__command_16
    : cmd_assert
    | cmd_getQe
    ;

altnt_block__command_17
    : cmd_defineFun
    | cmd_defineFunRec
    ;

altnt_block__command_18
    : aux_rule__command_39
    | aux_rule__command_40
    ;

simpleSymbol
    : PS_Not
    | PS_Bool
    | PS_ContinuedExecution
    | PS_Error
    | PS_False
    | PS_ImmediateExit
    | PS_Incomplete
    | PS_Logic
    | PS_Memout
    | PS_Sat
    | PS_Success
    | PS_Theory
    | PS_True
    | PS_Unknown
    | PS_Unsupported
    | PS_Unsat
    | UndefinedSymbol
    ;

keyword
    : PK_AllStatistics
    | PK_AssertionStackLevels
    | PK_Authors
    | PK_Category
    | PK_Chainable
    | PK_Definition
    | PK_DiagnosticOutputChannel
    | PK_ErrorBehaviour
    | PK_Extension
    | PK_Funs
    | PK_FunsDescription
    | PK_GlobalDeclarations
    | PK_InteractiveMode
    | PK_Language
    | PK_LeftAssoc
    | PK_License
    | PK_Named
    | PK_Name
    | PK_Notes
    | PK_Pattern
    | PK_PrintSuccess
    | PK_ProduceAssertions
    | PK_ProduceAssignments
    | PK_ProduceModels
    | PK_ProduceProofs
    | PK_ProduceUnsatAssumptions
    | PK_ProduceUnsatCores
    | PK_RandomSeed
    | PK_ReasonUnknown
    | PK_RegularOutputChannel
    | PK_ReproducibleResourceLimit
    | PK_RightAssoc
    | PK_SmtLibVersion
    | PK_Sorts
    | PK_SortsDescription
    | PK_Source
    | PK_Status
    | PK_Theories
    | PK_Values
    | PK_Verbosity
    | PK_Version
    | aux_rule__keyword_1
    ;

altnt_block__term_9
    : GRW_Forall
    | GRW_Exists
    ;

altnt_block__command_19
    : aux_rule__command_41
    | cmd_getValue
    ;

aux_rule__s_expr_2
    : ParOpen kleene_star__s_expr_1 ParClose
    ;

aux_rule__identifier_2
    : ParOpen GRW_Underscore symbol kleene_plus__identifier_1 ParClose
    ;

aux_rule__attribute_value_2
    : ParOpen kleene_star__s_expr_1 ParClose
    ;

aux_rule__sort_2
    : ParOpen identifier kleene_plus__sort_1 ParClose
    ;

aux_rule__qual_identifier_1
    : ParOpen GRW_As identifier sort ParClose
    ;

aux_rule__pattern_2
    : ParOpen symbol kleene_plus__pattern_1 ParClose
    ;

aux_rule__term_10
    : ParOpen altnt_block__term_7 ParClose
    ;

aux_rule__option_4
    : altnt_block__option_1 b_value
    ;

aux_rule__option_5
    : altnt_block__option_2 numeral
    ;

aux_rule__option_6
    : altnt_block__option_3 string
    ;

aux_rule__term_11
    : qual_identifier kleene_plus__term_1
    ;

aux_rule__term_12
    : GRW_Match term ParOpen kleene_plus__term_5 ParClose
    ;

aux_rule__term_13
    : GRW_Exclamation term kleene_plus__term_6
    ;

aux_rule__term_14
    : altnt_block__term_8 ParClose term
    ;

aux_rule__datatype_dec_5
    : GRW_Par ParOpen kleene_plus__pattern_1 ParClose ParOpen kleene_plus__datatype_dec_1 ParClose
    ;

aux_rule__command_20
    : cmd_checkSatAssuming kleene_star__command_4
    ;

aux_rule__command_21
    : cmd_declareDatatype symbol datatype_dec
    ;

aux_rule__command_22
    : cmd_echo string
    ;

aux_rule__command_23
    : cmd_getInfo info_flag
    ;

aux_rule__command_24
    : cmd_getOption keyword
    ;

aux_rule__command_25
    : cmd_setInfo attribute
    ;

aux_rule__command_26
    : cmd_setLogic symbol
    ;

aux_rule__command_27
    : cmd_setOption option
    ;

aux_rule__command_28
    : altnt_block__command_13 ParClose
    ;

aux_rule__command_29
    : altnt_block__command_14 sort
    ;

aux_rule__command_30
    : altnt_block__command_15 numeral
    ;

aux_rule__command_31
    : altnt_block__command_16 term
    ;

aux_rule__command_32
    : altnt_block__command_17 function_def
    ;

aux_rule__term_15
    : GRW_Let ParOpen kleene_plus__term_2
    ;

aux_rule__term_16
    : altnt_block__term_9 ParOpen kleene_plus__term_3
    ;

aux_rule__command_33
    : cmd_declareHeap ParOpen kleene_star__command_1
    ;

aux_rule__command_34
    : cmd_declareDatatypes ParOpen kleene_plus__command_5 ParClose ParOpen kleene_plus__command_6
    ;

aux_rule__command_35
    : altnt_block__command_19 ParOpen kleene_plus__term_1
    ;

aux_rule__command_36
    : cmd_declareConst symbol
    ;

aux_rule__command_37
    : altnt_block__command_18 ParClose
    ;

aux_rule__command_38
    : cmd_declareSort symbol
    ;

aux_rule__command_39
    : cmd_declareFun symbol ParOpen kleene_star__command_1
    ;

aux_rule__command_40
    : cmd_defineSort symbol ParOpen kleene_star__command_10
    ;

aux_rule__keyword_1
    : Colon simpleSymbol
    ;

aux_rule__command_41
    : cmd_defineFunsRec ParOpen kleene_plus__command_8 ParClose
    ;

