// Auto-generated by Perses AST.
// DO NOT MODIFY.
grammar PnfRust;

@lexer::members {
    private Token lastToken;

    public void emit(Token token) {
      lastToken = token;
      super.emit(token);
    }
}
fragment XID_Start
    : '\u0041'..'\u005a'
    | '_'
    | '\u0061'..'\u007a'
    | '\u00aa'
    | '\u00b5'
    | '\u00ba'
    | '\u00c0'..'\u00d6'
    | '\u00d8'..'\u00f6'
    | '\u00f8'..'\u0236'
    | '\u0250'..'\u02c1'
    | '\u02c6'..'\u02d1'
    | '\u02e0'..'\u02e4'
    | '\u02ee'
    | '\u0386'
    | '\u0388'..'\u038a'
    | '\u038c'
    | '\u038e'..'\u03a1'
    | '\u03a3'..'\u03ce'
    | '\u03d0'..'\u03f5'
    | '\u03f7'..'\u03fb'
    | '\u0400'..'\u0481'
    | '\u048a'..'\u04ce'
    | '\u04d0'..'\u04f5'
    | '\u04f8'..'\u04f9'
    | '\u0500'..'\u050f'
    | '\u0531'..'\u0556'
    | '\u0559'
    | '\u0561'..'\u0587'
    | '\u05d0'..'\u05ea'
    | '\u05f0'..'\u05f2'
    | '\u0621'..'\u063a'
    | '\u0640'..'\u064a'
    | '\u066e'..'\u066f'
    | '\u0671'..'\u06d3'
    | '\u06d5'
    | '\u06e5'..'\u06e6'
    | '\u06ee'..'\u06ef'
    | '\u06fa'..'\u06fc'
    | '\u06ff'
    | '\u0710'
    | '\u0712'..'\u072f'
    | '\u074d'..'\u074f'
    | '\u0780'..'\u07a5'
    | '\u07b1'
    | '\u0904'..'\u0939'
    | '\u093d'
    | '\u0950'
    | '\u0958'..'\u0961'
    | '\u0985'..'\u098c'
    | '\u098f'..'\u0990'
    | '\u0993'..'\u09a8'
    | '\u09aa'..'\u09b0'
    | '\u09b2'
    | '\u09b6'..'\u09b9'
    | '\u09bd'
    | '\u09dc'..'\u09dd'
    | '\u09df'..'\u09e1'
    | '\u09f0'..'\u09f1'
    | '\u0a05'..'\u0a0a'
    | '\u0a0f'..'\u0a10'
    | '\u0a13'..'\u0a28'
    | '\u0a2a'..'\u0a30'
    | '\u0a32'..'\u0a33'
    | '\u0a35'..'\u0a36'
    | '\u0a38'..'\u0a39'
    | '\u0a59'..'\u0a5c'
    | '\u0a5e'
    | '\u0a72'..'\u0a74'
    | '\u0a85'..'\u0a8d'
    | '\u0a8f'..'\u0a91'
    | '\u0a93'..'\u0aa8'
    | '\u0aaa'..'\u0ab0'
    | '\u0ab2'..'\u0ab3'
    | '\u0ab5'..'\u0ab9'
    | '\u0abd'
    | '\u0ad0'
    | '\u0ae0'..'\u0ae1'
    | '\u0b05'..'\u0b0c'
    | '\u0b0f'..'\u0b10'
    | '\u0b13'..'\u0b28'
    | '\u0b2a'..'\u0b30'
    | '\u0b32'..'\u0b33'
    | '\u0b35'..'\u0b39'
    | '\u0b3d'
    | '\u0b5c'..'\u0b5d'
    | '\u0b5f'..'\u0b61'
    | '\u0b71'
    | '\u0b83'
    | '\u0b85'..'\u0b8a'
    | '\u0b8e'..'\u0b90'
    | '\u0b92'..'\u0b95'
    | '\u0b99'..'\u0b9a'
    | '\u0b9c'
    | '\u0b9e'..'\u0b9f'
    | '\u0ba3'..'\u0ba4'
    | '\u0ba8'..'\u0baa'
    | '\u0bae'..'\u0bb5'
    | '\u0bb7'..'\u0bb9'
    | '\u0c05'..'\u0c0c'
    | '\u0c0e'..'\u0c10'
    | '\u0c12'..'\u0c28'
    | '\u0c2a'..'\u0c33'
    | '\u0c35'..'\u0c39'
    | '\u0c60'..'\u0c61'
    | '\u0c85'..'\u0c8c'
    | '\u0c8e'..'\u0c90'
    | '\u0c92'..'\u0ca8'
    | '\u0caa'..'\u0cb3'
    | '\u0cb5'..'\u0cb9'
    | '\u0cbd'
    | '\u0cde'
    | '\u0ce0'..'\u0ce1'
    | '\u0d05'..'\u0d0c'
    | '\u0d0e'..'\u0d10'
    | '\u0d12'..'\u0d28'
    | '\u0d2a'..'\u0d39'
    | '\u0d60'..'\u0d61'
    | '\u0d85'..'\u0d96'
    | '\u0d9a'..'\u0db1'
    | '\u0db3'..'\u0dbb'
    | '\u0dbd'
    | '\u0dc0'..'\u0dc6'
    | '\u0e01'..'\u0e30'
    | '\u0e32'
    | '\u0e40'..'\u0e46'
    | '\u0e81'..'\u0e82'
    | '\u0e84'
    | '\u0e87'..'\u0e88'
    | '\u0e8a'
    | '\u0e8d'
    | '\u0e94'..'\u0e97'
    | '\u0e99'..'\u0e9f'
    | '\u0ea1'..'\u0ea3'
    | '\u0ea5'
    | '\u0ea7'
    | '\u0eaa'..'\u0eab'
    | '\u0ead'..'\u0eb0'
    | '\u0eb2'
    | '\u0ebd'
    | '\u0ec0'..'\u0ec4'
    | '\u0ec6'
    | '\u0edc'..'\u0edd'
    | '\u0f00'
    | '\u0f40'..'\u0f47'
    | '\u0f49'..'\u0f6a'
    | '\u0f88'..'\u0f8b'
    | '\u1000'..'\u1021'
    | '\u1023'..'\u1027'
    | '\u1029'..'\u102a'
    | '\u1050'..'\u1055'
    | '\u10a0'..'\u10c5'
    | '\u10d0'..'\u10f8'
    | '\u1100'..'\u1159'
    | '\u115f'..'\u11a2'
    | '\u11a8'..'\u11f9'
    | '\u1200'..'\u1206'
    | '\u1208'..'\u1246'
    | '\u1248'
    | '\u124a'..'\u124d'
    | '\u1250'..'\u1256'
    | '\u1258'
    | '\u125a'..'\u125d'
    | '\u1260'..'\u1286'
    | '\u1288'
    | '\u128a'..'\u128d'
    | '\u1290'..'\u12ae'
    | '\u12b0'
    | '\u12b2'..'\u12b5'
    | '\u12b8'..'\u12be'
    | '\u12c0'
    | '\u12c2'..'\u12c5'
    | '\u12c8'..'\u12ce'
    | '\u12d0'..'\u12d6'
    | '\u12d8'..'\u12ee'
    | '\u12f0'..'\u130e'
    | '\u1310'
    | '\u1312'..'\u1315'
    | '\u1318'..'\u131e'
    | '\u1320'..'\u1346'
    | '\u1348'..'\u135a'
    | '\u13a0'..'\u13f4'
    | '\u1401'..'\u166c'
    | '\u166f'..'\u1676'
    | '\u1681'..'\u169a'
    | '\u16a0'..'\u16ea'
    | '\u16ee'..'\u16f0'
    | '\u1700'..'\u170c'
    | '\u170e'..'\u1711'
    | '\u1720'..'\u1731'
    | '\u1740'..'\u1751'
    | '\u1760'..'\u176c'
    | '\u176e'..'\u1770'
    | '\u1780'..'\u17b3'
    | '\u17d7'
    | '\u17dc'
    | '\u1820'..'\u1877'
    | '\u1880'..'\u18a8'
    | '\u1900'..'\u191c'
    | '\u1950'..'\u196d'
    | '\u1970'..'\u1974'
    | '\u1d00'..'\u1d6b'
    | '\u1e00'..'\u1e9b'
    | '\u1ea0'..'\u1ef9'
    | '\u1f00'..'\u1f15'
    | '\u1f18'..'\u1f1d'
    | '\u1f20'..'\u1f45'
    | '\u1f48'..'\u1f4d'
    | '\u1f50'..'\u1f57'
    | '\u1f59'
    | '\u1f5b'
    | '\u1f5d'
    | '\u1f5f'..'\u1f7d'
    | '\u1f80'..'\u1fb4'
    | '\u1fb6'..'\u1fbc'
    | '\u1fbe'
    | '\u1fc2'..'\u1fc4'
    | '\u1fc6'..'\u1fcc'
    | '\u1fd0'..'\u1fd3'
    | '\u1fd6'..'\u1fdb'
    | '\u1fe0'..'\u1fec'
    | '\u1ff2'..'\u1ff4'
    | '\u1ff6'..'\u1ffc'
    | '\u2071'
    | '\u207f'
    | '\u2102'
    | '\u2107'
    | '\u210a'..'\u2113'
    | '\u2115'
    | '\u2118'..'\u211d'
    | '\u2124'
    | '\u2126'
    | '\u2128'
    | '\u212a'..'\u2131'
    | '\u2133'..'\u2139'
    | '\u213d'..'\u213f'
    | '\u2145'..'\u2149'
    | '\u2160'..'\u2183'
    | '\u3005'..'\u3007'
    | '\u3021'..'\u3029'
    | '\u3031'..'\u3035'
    | '\u3038'..'\u303c'
    | '\u3041'..'\u3096'
    | '\u309d'..'\u309f'
    | '\u30a1'..'\u30fa'
    | '\u30fc'..'\u30ff'
    | '\u3105'..'\u312c'
    | '\u3131'..'\u318e'
    | '\u31a0'..'\u31b7'
    | '\u31f0'..'\u31ff'
    | '\u3400'..'\u4db5'
    | '\u4e00'..'\u9fa5'
    | '\ua000'..'\ua48c'
    | '\uac00'..'\ud7a3'
    | '\uf900'..'\ufa2d'
    | '\ufa30'..'\ufa6a'
    | '\ufb00'..'\ufb06'
    | '\ufb13'..'\ufb17'
    | '\ufb1d'
    | '\ufb1f'..'\ufb28'
    | '\ufb2a'..'\ufb36'
    | '\ufb38'..'\ufb3c'
    | '\ufb3e'
    | '\ufb40'..'\ufb41'
    | '\ufb43'..'\ufb44'
    | '\ufb46'..'\ufbb1'
    | '\ufbd3'..'\ufc5d'
    | '\ufc64'..'\ufd3d'
    | '\ufd50'..'\ufd8f'
    | '\ufd92'..'\ufdc7'
    | '\ufdf0'..'\ufdf9'
    | '\ufe71'
    | '\ufe73'
    | '\ufe77'
    | '\ufe79'
    | '\ufe7b'
    | '\ufe7d'
    | '\ufe7f'..'\ufefc'
    | '\uff21'..'\uff3a'
    | '\uff41'..'\uff5a'
    | '\uff66'..'\uff9d'
    | '\uffa0'..'\uffbe'
    | '\uffc2'..'\uffc7'
    | '\uffca'..'\uffcf'
    | '\uffd2'..'\uffd7'
    | '\uffda'..'\uffdc'
    | '\ud800' '\udc00'..'\udc0a'
    | '\ud800' '\udc0d'..'\udc25'
    | '\ud800' '\udc28'..'\udc39'
    | '\ud800' '\udc3c'..'\udc3c'
    | '\ud800' '\udc3f'..'\udc4c'
    | '\ud800' '\udc50'..'\udc5c'
    | '\ud800' '\udc80'..'\udcf9'
    | '\ud800' '\udf00'..'\udf1d'
    | '\ud800' '\udf30'..'\udf49'
    | '\ud800' '\udf80'..'\udf9c'
    | '\ud801' '\ue000'..'\ue09c'
    | '\ud802' '\ue400'..'\ue404'
    | '\ud802' '\u0808'
    | '\ud802' '\ue40a'..'\ue434'
    | '\ud802' '\ue437'..'\ue437'
    | '\ud802' '\u083c'
    | '\ud802' '\u083f'
    | '\ud835' '\ub000'..'\ub053'
    | '\ud835' '\ub056'..'\ub09b'
    | '\ud835' '\ub09e'..'\ub09e'
    | '\ud835' '\ud4a2'
    | '\ud835' '\ub0a5'..'\ub0a5'
    | '\ud835' '\ub0a9'..'\ub0ab'
    | '\ud835' '\ub0ae'..'\ub0b8'
    | '\ud835' '\ud4bb'
    | '\ud835' '\ub0bd'..'\ub0c2'
    | '\ud835' '\ub0c5'..'\ub104'
    | '\ud835' '\ub107'..'\ub109'
    | '\ud835' '\ub10d'..'\ub113'
    | '\ud835' '\ub116'..'\ub11b'
    | '\ud835' '\ub11e'..'\ub138'
    | '\ud835' '\ub13b'..'\ub13d'
    | '\ud835' '\ub140'..'\ub143'
    | '\ud835' '\ud546'
    | '\ud835' '\ub14a'..'\ub14f'
    | '\ud835' '\ub152'..'\ub2a2'
    | '\ud835' '\ub2a8'..'\ub2bf'
    | '\ud835' '\ub2c2'..'\ub2d9'
    | '\ud835' '\ub2dc'..'\ub2f9'
    | '\ud835' '\ub2fc'..'\ub313'
    | '\ud835' '\ub316'..'\ub333'
    | '\ud835' '\ub336'..'\ub34d'
    | '\ud835' '\ub350'..'\ub36d'
    | '\ud835' '\ub370'..'\ub387'
    | '\ud835' '\ub38a'..'\ub3a7'
    | '\ud835' '\ub3aa'..'\ub3c1'
    | '\ud835' '\ub3c4'..'\ub3c8'
    | '\ud840' '\udc00'..'\udffe'
    | '\ud841' '\ue000'..'\ue3fe'
    | '\ud842' '\ue400'..'\ue7fe'
    | '\ud843' '\ue800'..'\uebfe'
    | '\ud844' '\uec00'..'\ueffe'
    | '\ud845' '\uf000'..'\uf3fe'
    | '\ud846' '\uf400'..'\uf7fe'
    | '\ud847' '\uf800'..'\ufbfe'
    | '\ud848' '\ufc00'..'\ufffe'
    | '\ud849' '\u0000'..'\u03fe'
    | '\ud84a' '\u0400'..'\u07fe'
    | '\ud84b' '\u0800'..'\u0bfe'
    | '\ud84c' '\u0c00'..'\u0ffe'
    | '\ud84d' '\u1000'..'\u13fe'
    | '\ud84e' '\u1400'..'\u17fe'
    | '\ud84f' '\u1800'..'\u1bfe'
    | '\ud850' '\u1c00'..'\u1ffe'
    | '\ud851' '\u2000'..'\u23fe'
    | '\ud852' '\u2400'..'\u27fe'
    | '\ud853' '\u2800'..'\u2bfe'
    | '\ud854' '\u2c00'..'\u2ffe'
    | '\ud855' '\u3000'..'\u33fe'
    | '\ud856' '\u3400'..'\u37fe'
    | '\ud857' '\u3800'..'\u3bfe'
    | '\ud858' '\u3c00'..'\u3ffe'
    | '\ud859' '\u4000'..'\u43fe'
    | '\ud85a' '\u4400'..'\u47fe'
    | '\ud85b' '\u4800'..'\u4bfe'
    | '\ud85c' '\u4c00'..'\u4ffe'
    | '\ud85d' '\u5000'..'\u53fe'
    | '\ud85e' '\u5400'..'\u57fe'
    | '\ud85f' '\u5800'..'\u5bfe'
    | '\ud860' '\u5c00'..'\u5ffe'
    | '\ud861' '\u6000'..'\u63fe'
    | '\ud862' '\u6400'..'\u67fe'
    | '\ud863' '\u6800'..'\u6bfe'
    | '\ud864' '\u6c00'..'\u6ffe'
    | '\ud865' '\u7000'..'\u73fe'
    | '\ud866' '\u7400'..'\u77fe'
    | '\ud867' '\u7800'..'\u7bfe'
    | '\ud868' '\u7c00'..'\u7ffe'
    | '\ud869' '\u8000'..'\u82d5'
    | '\ud87e' '\ud400'..'\ud61c'
    ;
fragment XID_Continue
    : '\u0030'..'\u0039'
    | '\u0041'..'\u005a'
    | '\u005f'
    | '\u0061'..'\u007a'
    | '\u00aa'
    | '\u00b5'
    | '\u00b7'
    | '\u00ba'
    | '\u00c0'..'\u00d6'
    | '\u00d8'..'\u00f6'
    | '\u00f8'..'\u0236'
    | '\u0250'..'\u02c1'
    | '\u02c6'..'\u02d1'
    | '\u02e0'..'\u02e4'
    | '\u02ee'
    | '\u0300'..'\u0357'
    | '\u035d'..'\u036f'
    | '\u0386'
    | '\u0388'..'\u038a'
    | '\u038c'
    | '\u038e'..'\u03a1'
    | '\u03a3'..'\u03ce'
    | '\u03d0'..'\u03f5'
    | '\u03f7'..'\u03fb'
    | '\u0400'..'\u0481'
    | '\u0483'..'\u0486'
    | '\u048a'..'\u04ce'
    | '\u04d0'..'\u04f5'
    | '\u04f8'..'\u04f9'
    | '\u0500'..'\u050f'
    | '\u0531'..'\u0556'
    | '\u0559'
    | '\u0561'..'\u0587'
    | '\u0591'..'\u05a1'
    | '\u05a3'..'\u05b9'
    | '\u05bb'..'\u05bd'
    | '\u05bf'
    | '\u05c1'..'\u05c2'
    | '\u05c4'
    | '\u05d0'..'\u05ea'
    | '\u05f0'..'\u05f2'
    | '\u0610'..'\u0615'
    | '\u0621'..'\u063a'
    | '\u0640'..'\u0658'
    | '\u0660'..'\u0669'
    | '\u066e'..'\u06d3'
    | '\u06d5'..'\u06dc'
    | '\u06df'..'\u06e8'
    | '\u06ea'..'\u06fc'
    | '\u06ff'
    | '\u0710'..'\u074a'
    | '\u074d'..'\u074f'
    | '\u0780'..'\u07b1'
    | '\u0901'..'\u0939'
    | '\u093c'..'\u094d'
    | '\u0950'..'\u0954'
    | '\u0958'..'\u0963'
    | '\u0966'..'\u096f'
    | '\u0981'..'\u0983'
    | '\u0985'..'\u098c'
    | '\u098f'..'\u0990'
    | '\u0993'..'\u09a8'
    | '\u09aa'..'\u09b0'
    | '\u09b2'
    | '\u09b6'..'\u09b9'
    | '\u09bc'..'\u09c4'
    | '\u09c7'..'\u09c8'
    | '\u09cb'..'\u09cd'
    | '\u09d7'
    | '\u09dc'..'\u09dd'
    | '\u09df'..'\u09e3'
    | '\u09e6'..'\u09f1'
    | '\u0a01'..'\u0a03'
    | '\u0a05'..'\u0a0a'
    | '\u0a0f'..'\u0a10'
    | '\u0a13'..'\u0a28'
    | '\u0a2a'..'\u0a30'
    | '\u0a32'..'\u0a33'
    | '\u0a35'..'\u0a36'
    | '\u0a38'..'\u0a39'
    | '\u0a3c'
    | '\u0a3e'..'\u0a42'
    | '\u0a47'..'\u0a48'
    | '\u0a4b'..'\u0a4d'
    | '\u0a59'..'\u0a5c'
    | '\u0a5e'
    | '\u0a66'..'\u0a74'
    | '\u0a81'..'\u0a83'
    | '\u0a85'..'\u0a8d'
    | '\u0a8f'..'\u0a91'
    | '\u0a93'..'\u0aa8'
    | '\u0aaa'..'\u0ab0'
    | '\u0ab2'..'\u0ab3'
    | '\u0ab5'..'\u0ab9'
    | '\u0abc'..'\u0ac5'
    | '\u0ac7'..'\u0ac9'
    | '\u0acb'..'\u0acd'
    | '\u0ad0'
    | '\u0ae0'..'\u0ae3'
    | '\u0ae6'..'\u0aef'
    | '\u0b01'..'\u0b03'
    | '\u0b05'..'\u0b0c'
    | '\u0b0f'..'\u0b10'
    | '\u0b13'..'\u0b28'
    | '\u0b2a'..'\u0b30'
    | '\u0b32'..'\u0b33'
    | '\u0b35'..'\u0b39'
    | '\u0b3c'..'\u0b43'
    | '\u0b47'..'\u0b48'
    | '\u0b4b'..'\u0b4d'
    | '\u0b56'..'\u0b57'
    | '\u0b5c'..'\u0b5d'
    | '\u0b5f'..'\u0b61'
    | '\u0b66'..'\u0b6f'
    | '\u0b71'
    | '\u0b82'..'\u0b83'
    | '\u0b85'..'\u0b8a'
    | '\u0b8e'..'\u0b90'
    | '\u0b92'..'\u0b95'
    | '\u0b99'..'\u0b9a'
    | '\u0b9c'
    | '\u0b9e'..'\u0b9f'
    | '\u0ba3'..'\u0ba4'
    | '\u0ba8'..'\u0baa'
    | '\u0bae'..'\u0bb5'
    | '\u0bb7'..'\u0bb9'
    | '\u0bbe'..'\u0bc2'
    | '\u0bc6'..'\u0bc8'
    | '\u0bca'..'\u0bcd'
    | '\u0bd7'
    | '\u0be7'..'\u0bef'
    | '\u0c01'..'\u0c03'
    | '\u0c05'..'\u0c0c'
    | '\u0c0e'..'\u0c10'
    | '\u0c12'..'\u0c28'
    | '\u0c2a'..'\u0c33'
    | '\u0c35'..'\u0c39'
    | '\u0c3e'..'\u0c44'
    | '\u0c46'..'\u0c48'
    | '\u0c4a'..'\u0c4d'
    | '\u0c55'..'\u0c56'
    | '\u0c60'..'\u0c61'
    | '\u0c66'..'\u0c6f'
    | '\u0c82'..'\u0c83'
    | '\u0c85'..'\u0c8c'
    | '\u0c8e'..'\u0c90'
    | '\u0c92'..'\u0ca8'
    | '\u0caa'..'\u0cb3'
    | '\u0cb5'..'\u0cb9'
    | '\u0cbc'..'\u0cc4'
    | '\u0cc6'..'\u0cc8'
    | '\u0cca'..'\u0ccd'
    | '\u0cd5'..'\u0cd6'
    | '\u0cde'
    | '\u0ce0'..'\u0ce1'
    | '\u0ce6'..'\u0cef'
    | '\u0d02'..'\u0d03'
    | '\u0d05'..'\u0d0c'
    | '\u0d0e'..'\u0d10'
    | '\u0d12'..'\u0d28'
    | '\u0d2a'..'\u0d39'
    | '\u0d3e'..'\u0d43'
    | '\u0d46'..'\u0d48'
    | '\u0d4a'..'\u0d4d'
    | '\u0d57'
    | '\u0d60'..'\u0d61'
    | '\u0d66'..'\u0d6f'
    | '\u0d82'..'\u0d83'
    | '\u0d85'..'\u0d96'
    | '\u0d9a'..'\u0db1'
    | '\u0db3'..'\u0dbb'
    | '\u0dbd'
    | '\u0dc0'..'\u0dc6'
    | '\u0dca'
    | '\u0dcf'..'\u0dd4'
    | '\u0dd6'
    | '\u0dd8'..'\u0ddf'
    | '\u0df2'..'\u0df3'
    | '\u0e01'..'\u0e3a'
    | '\u0e40'..'\u0e4e'
    | '\u0e50'..'\u0e59'
    | '\u0e81'..'\u0e82'
    | '\u0e84'
    | '\u0e87'..'\u0e88'
    | '\u0e8a'
    | '\u0e8d'
    | '\u0e94'..'\u0e97'
    | '\u0e99'..'\u0e9f'
    | '\u0ea1'..'\u0ea3'
    | '\u0ea5'
    | '\u0ea7'
    | '\u0eaa'..'\u0eab'
    | '\u0ead'..'\u0eb9'
    | '\u0ebb'..'\u0ebd'
    | '\u0ec0'..'\u0ec4'
    | '\u0ec6'
    | '\u0ec8'..'\u0ecd'
    | '\u0ed0'..'\u0ed9'
    | '\u0edc'..'\u0edd'
    | '\u0f00'
    | '\u0f18'..'\u0f19'
    | '\u0f20'..'\u0f29'
    | '\u0f35'
    | '\u0f37'
    | '\u0f39'
    | '\u0f3e'..'\u0f47'
    | '\u0f49'..'\u0f6a'
    | '\u0f71'..'\u0f84'
    | '\u0f86'..'\u0f8b'
    | '\u0f90'..'\u0f97'
    | '\u0f99'..'\u0fbc'
    | '\u0fc6'
    | '\u1000'..'\u1021'
    | '\u1023'..'\u1027'
    | '\u1029'..'\u102a'
    | '\u102c'..'\u1032'
    | '\u1036'..'\u1039'
    | '\u1040'..'\u1049'
    | '\u1050'..'\u1059'
    | '\u10a0'..'\u10c5'
    | '\u10d0'..'\u10f8'
    | '\u1100'..'\u1159'
    | '\u115f'..'\u11a2'
    | '\u11a8'..'\u11f9'
    | '\u1200'..'\u1206'
    | '\u1208'..'\u1246'
    | '\u1248'
    | '\u124a'..'\u124d'
    | '\u1250'..'\u1256'
    | '\u1258'
    | '\u125a'..'\u125d'
    | '\u1260'..'\u1286'
    | '\u1288'
    | '\u128a'..'\u128d'
    | '\u1290'..'\u12ae'
    | '\u12b0'
    | '\u12b2'..'\u12b5'
    | '\u12b8'..'\u12be'
    | '\u12c0'
    | '\u12c2'..'\u12c5'
    | '\u12c8'..'\u12ce'
    | '\u12d0'..'\u12d6'
    | '\u12d8'..'\u12ee'
    | '\u12f0'..'\u130e'
    | '\u1310'
    | '\u1312'..'\u1315'
    | '\u1318'..'\u131e'
    | '\u1320'..'\u1346'
    | '\u1348'..'\u135a'
    | '\u1369'..'\u1371'
    | '\u13a0'..'\u13f4'
    | '\u1401'..'\u166c'
    | '\u166f'..'\u1676'
    | '\u1681'..'\u169a'
    | '\u16a0'..'\u16ea'
    | '\u16ee'..'\u16f0'
    | '\u1700'..'\u170c'
    | '\u170e'..'\u1714'
    | '\u1720'..'\u1734'
    | '\u1740'..'\u1753'
    | '\u1760'..'\u176c'
    | '\u176e'..'\u1770'
    | '\u1772'..'\u1773'
    | '\u1780'..'\u17b3'
    | '\u17b6'..'\u17d3'
    | '\u17d7'
    | '\u17dc'..'\u17dd'
    | '\u17e0'..'\u17e9'
    | '\u180b'..'\u180d'
    | '\u1810'..'\u1819'
    | '\u1820'..'\u1877'
    | '\u1880'..'\u18a9'
    | '\u1900'..'\u191c'
    | '\u1920'..'\u192b'
    | '\u1930'..'\u193b'
    | '\u1946'..'\u196d'
    | '\u1970'..'\u1974'
    | '\u1d00'..'\u1d6b'
    | '\u1e00'..'\u1e9b'
    | '\u1ea0'..'\u1ef9'
    | '\u1f00'..'\u1f15'
    | '\u1f18'..'\u1f1d'
    | '\u1f20'..'\u1f45'
    | '\u1f48'..'\u1f4d'
    | '\u1f50'..'\u1f57'
    | '\u1f59'
    | '\u1f5b'
    | '\u1f5d'
    | '\u1f5f'..'\u1f7d'
    | '\u1f80'..'\u1fb4'
    | '\u1fb6'..'\u1fbc'
    | '\u1fbe'
    | '\u1fc2'..'\u1fc4'
    | '\u1fc6'..'\u1fcc'
    | '\u1fd0'..'\u1fd3'
    | '\u1fd6'..'\u1fdb'
    | '\u1fe0'..'\u1fec'
    | '\u1ff2'..'\u1ff4'
    | '\u1ff6'..'\u1ffc'
    | '\u203f'..'\u2040'
    | '\u2054'
    | '\u2071'
    | '\u207f'
    | '\u20d0'..'\u20dc'
    | '\u20e1'
    | '\u20e5'..'\u20ea'
    | '\u2102'
    | '\u2107'
    | '\u210a'..'\u2113'
    | '\u2115'
    | '\u2118'..'\u211d'
    | '\u2124'
    | '\u2126'
    | '\u2128'
    | '\u212a'..'\u2131'
    | '\u2133'..'\u2139'
    | '\u213d'..'\u213f'
    | '\u2145'..'\u2149'
    | '\u2160'..'\u2183'
    | '\u3005'..'\u3007'
    | '\u3021'..'\u302f'
    | '\u3031'..'\u3035'
    | '\u3038'..'\u303c'
    | '\u3041'..'\u3096'
    | '\u3099'..'\u309a'
    | '\u309d'..'\u309f'
    | '\u30a1'..'\u30ff'
    | '\u3105'..'\u312c'
    | '\u3131'..'\u318e'
    | '\u31a0'..'\u31b7'
    | '\u31f0'..'\u31ff'
    | '\u3400'..'\u4db5'
    | '\u4e00'..'\u9fa5'
    | '\ua000'..'\ua48c'
    | '\uac00'..'\ud7a3'
    | '\uf900'..'\ufa2d'
    | '\ufa30'..'\ufa6a'
    | '\ufb00'..'\ufb06'
    | '\ufb13'..'\ufb17'
    | '\ufb1d'..'\ufb28'
    | '\ufb2a'..'\ufb36'
    | '\ufb38'..'\ufb3c'
    | '\ufb3e'
    | '\ufb40'..'\ufb41'
    | '\ufb43'..'\ufb44'
    | '\ufb46'..'\ufbb1'
    | '\ufbd3'..'\ufc5d'
    | '\ufc64'..'\ufd3d'
    | '\ufd50'..'\ufd8f'
    | '\ufd92'..'\ufdc7'
    | '\ufdf0'..'\ufdf9'
    | '\ufe00'..'\ufe0f'
    | '\ufe20'..'\ufe23'
    | '\ufe33'..'\ufe34'
    | '\ufe4d'..'\ufe4f'
    | '\ufe71'
    | '\ufe73'
    | '\ufe77'
    | '\ufe79'
    | '\ufe7b'
    | '\ufe7d'
    | '\ufe7f'..'\ufefc'
    | '\uff10'..'\uff19'
    | '\uff21'..'\uff3a'
    | '\uff3f'
    | '\uff41'..'\uff5a'
    | '\uff65'..'\uffbe'
    | '\uffc2'..'\uffc7'
    | '\uffca'..'\uffcf'
    | '\uffd2'..'\uffd7'
    | '\uffda'..'\uffdc'
    | '\ud800' '\udc00'..'\udc0a'
    | '\ud800' '\udc0d'..'\udc25'
    | '\ud800' '\udc28'..'\udc39'
    | '\ud800' '\udc3c'..'\udc3c'
    | '\ud800' '\udc3f'..'\udc4c'
    | '\ud800' '\udc50'..'\udc5c'
    | '\ud800' '\udc80'..'\udcf9'
    | '\ud800' '\udf00'..'\udf1d'
    | '\ud800' '\udf30'..'\udf49'
    | '\ud800' '\udf80'..'\udf9c'
    | '\ud801' '\ue000'..'\ue09c'
    | '\ud801' '\ue0a0'..'\ue0a8'
    | '\ud802' '\ue400'..'\ue404'
    | '\ud802' '\u0808'
    | '\ud802' '\ue40a'..'\ue434'
    | '\ud802' '\ue437'..'\ue437'
    | '\ud802' '\u083c'
    | '\ud802' '\u083f'
    | '\ud834' '\uad65'..'\uad68'
    | '\ud834' '\uad6d'..'\uad71'
    | '\ud834' '\uad7b'..'\uad81'
    | '\ud834' '\uad85'..'\uad8a'
    | '\ud834' '\uadaa'..'\uadac'
    | '\ud835' '\ub000'..'\ub053'
    | '\ud835' '\ub056'..'\ub09b'
    | '\ud835' '\ub09e'..'\ub09e'
    | '\ud835' '\ud4a2'
    | '\ud835' '\ub0a5'..'\ub0a5'
    | '\ud835' '\ub0a9'..'\ub0ab'
    | '\ud835' '\ub0ae'..'\ub0b8'
    | '\ud835' '\ud4bb'
    | '\ud835' '\ub0bd'..'\ub0c2'
    | '\ud835' '\ub0c5'..'\ub104'
    | '\ud835' '\ub107'..'\ub109'
    | '\ud835' '\ub10d'..'\ub113'
    | '\ud835' '\ub116'..'\ub11b'
    | '\ud835' '\ub11e'..'\ub138'
    | '\ud835' '\ub13b'..'\ub13d'
    | '\ud835' '\ub140'..'\ub143'
    | '\ud835' '\ud546'
    | '\ud835' '\ub14a'..'\ub14f'
    | '\ud835' '\ub152'..'\ub2a2'
    | '\ud835' '\ub2a8'..'\ub2bf'
    | '\ud835' '\ub2c2'..'\ub2d9'
    | '\ud835' '\ub2dc'..'\ub2f9'
    | '\ud835' '\ub2fc'..'\ub313'
    | '\ud835' '\ub316'..'\ub333'
    | '\ud835' '\ub336'..'\ub34d'
    | '\ud835' '\ub350'..'\ub36d'
    | '\ud835' '\ub370'..'\ub387'
    | '\ud835' '\ub38a'..'\ub3a7'
    | '\ud835' '\ub3aa'..'\ub3c1'
    | '\ud835' '\ub3c4'..'\ub3c8'
    | '\ud835' '\ub3ce'..'\ub3fe'
    | '\ud840' '\udc00'..'\udffe'
    | '\ud841' '\ue000'..'\ue3fe'
    | '\ud842' '\ue400'..'\ue7fe'
    | '\ud843' '\ue800'..'\uebfe'
    | '\ud844' '\uec00'..'\ueffe'
    | '\ud845' '\uf000'..'\uf3fe'
    | '\ud846' '\uf400'..'\uf7fe'
    | '\ud847' '\uf800'..'\ufbfe'
    | '\ud848' '\ufc00'..'\ufffe'
    | '\ud849' '\u0000'..'\u03fe'
    | '\ud84a' '\u0400'..'\u07fe'
    | '\ud84b' '\u0800'..'\u0bfe'
    | '\ud84c' '\u0c00'..'\u0ffe'
    | '\ud84d' '\u1000'..'\u13fe'
    | '\ud84e' '\u1400'..'\u17fe'
    | '\ud84f' '\u1800'..'\u1bfe'
    | '\ud850' '\u1c00'..'\u1ffe'
    | '\ud851' '\u2000'..'\u23fe'
    | '\ud852' '\u2400'..'\u27fe'
    | '\ud853' '\u2800'..'\u2bfe'
    | '\ud854' '\u2c00'..'\u2ffe'
    | '\ud855' '\u3000'..'\u33fe'
    | '\ud856' '\u3400'..'\u37fe'
    | '\ud857' '\u3800'..'\u3bfe'
    | '\ud858' '\u3c00'..'\u3ffe'
    | '\ud859' '\u4000'..'\u43fe'
    | '\ud85a' '\u4400'..'\u47fe'
    | '\ud85b' '\u4800'..'\u4bfe'
    | '\ud85c' '\u4c00'..'\u4ffe'
    | '\ud85d' '\u5000'..'\u53fe'
    | '\ud85e' '\u5400'..'\u57fe'
    | '\ud85f' '\u5800'..'\u5bfe'
    | '\ud860' '\u5c00'..'\u5ffe'
    | '\ud861' '\u6000'..'\u63fe'
    | '\ud862' '\u6400'..'\u67fe'
    | '\ud863' '\u6800'..'\u6bfe'
    | '\ud864' '\u6c00'..'\u6ffe'
    | '\ud865' '\u7000'..'\u73fe'
    | '\ud866' '\u7400'..'\u77fe'
    | '\ud867' '\u7800'..'\u7bfe'
    | '\ud868' '\u7c00'..'\u7ffe'
    | '\ud869' '\u8000'..'\u82d5'
    | '\ud87e' '\ud400'..'\ud61c'
    | '\udb40' '\udd00'..'\uddee'
    ;
CashMoney
    : '$'
    ;
RawIdentifier
    : 'r#' IDENT
    ;
fragment IDENT
    : XID_Start XID_Continue*
    ;
Lifetime
    : ['] IDENT
    ;
Ident
    : IDENT
    ;
fragment SIMPLE_ESCAPE
    : '\\' [0nrt'"\\]
    ;
fragment CHAR
    : ~['"\r\n\\\ud800-\udfff]
    | [\ud800-\udbff] [\udc00-\udfff]
    | SIMPLE_ESCAPE
    | '\\x' [0-7] [0-9a-fA-F]
    | '\\u{' [0-9a-fA-F]+ '}'
    ;
CharLit
    : '\'' (CHAR | '"') '\''
    ;
fragment OTHER_STRING_ELEMENT
    : '\''
    | '\\' '\r'? '\n' [ \t]*
    | '\r'
    | '\n'
    ;
fragment STRING_ELEMENT
    : CHAR
    | OTHER_STRING_ELEMENT
    ;
fragment RAW_CHAR
    : ~[\ud800-\udfff]
    | [\ud800-\udbff] [\udc00-\udfff]
    ;
fragment RAW_STRING_BODY
    : '"' RAW_CHAR*? '"'
    | '#' RAW_STRING_BODY '#'
    ;
StringLit
    : '"' STRING_ELEMENT* '"'
    | 'r' RAW_STRING_BODY
    ;
fragment BYTE
    : ' '
    | '!'
    | [#-&]
    | [(-[]
    | ']'
    | '^'
    | [_-~]
    | SIMPLE_ESCAPE
    | '\\x' [0-9a-fA-F] [0-9a-fA-F]
    ;
ByteLit
    : 'b\'' (BYTE | '"') '\''
    ;
fragment BYTE_STRING_ELEMENT
    : BYTE
    | OTHER_STRING_ELEMENT
    ;
fragment RAW_BYTE_STRING_BODY
    : '"' [\t\r\n -~]*? '"'
    | '#' RAW_BYTE_STRING_BODY '#'
    ;
ByteStringLit
    : 'b"' BYTE_STRING_ELEMENT* '"'
    | 'br' RAW_BYTE_STRING_BODY
    ;
fragment DEC_DIGITS
    : [0-9] [0-9_]*
    ;
BareIntLit
    : DEC_DIGITS
    ;
fragment INT_SUFFIX
    : [ui] ('8' | '16' | '32' | '64' | '128' | 'size')
    ;
FullIntLit
    : DEC_DIGITS INT_SUFFIX?
    | '0x' '_'* [0-9a-fA-F] [0-9a-fA-F_]* INT_SUFFIX?
    | '0o' '_'* [0-7] [0-7_]* INT_SUFFIX?
    | '0b' '_'* [01] [01_]* INT_SUFFIX?
    ;
fragment EXPONENT
    : [Ee] [+-]? 'd_'* [0-9] [0-9_]*
    ;
fragment FLOAT_SUFFIX
    : 'f32'
    | 'f64'
    ;
FloatLit
    : (DEC_DIGITS '.' [0-9] [0-9_]* EXPONENT? FLOAT_SUFFIX? | DEC_DIGITS '.' {
        /* dot followed by another dot is a range, not a float */
        _input.LA(1) != '.' &&
        /* dot followed by an identifier is an integer with a function call, not a float */
        _input.LA(1) != '_' &&
        !(_input.LA(1) >= 'a' && _input.LA(1) <= 'z') &&
        !(_input.LA(1) >= 'A' && _input.LA(1) <= 'Z')
      }? | DEC_DIGITS EXPONENT FLOAT_SUFFIX? | DEC_DIGITS FLOAT_SUFFIX) { lastToken == null || !".".equals(lastToken.getText()) }?
    ;
Whitespace
    : [ \t\r\n]+ -> skip

    ;
LineComment
    : '//' (~[\r\n])* -> skip

    ;
BlockComment
    : '/*' (~[*/] | '/'* BlockComment | '/'+ ~[*/] | '*'+ ~[*/])* '*'+ '/' -> skip

    ;
Shebang
    : '#!/' (~[\r\n])* -> skip

    ;


crate
    : mod_body EOF
    ;

mod_body
    : kleene_star__mod_body_1 kleene_star__mod_body_2
    ;

visibility
    : aux_rule__visibility_2
    | 'crate'
    ;

visibility_restriction
    : '(' altnt_block__visibility_restriction_1 ')'
    ;

item
    : kleene_star__item_1 altnt_block__item_7
    ;

pub_item
    : extern_crate
    | use_decl
    | mod_decl_short
    | mod_decl
    | static_decl
    | const_decl
    | associated_const_decl
    | associated_static_decl
    | fn_decl
    | type_decl
    | struct_decl
    | enum_decl
    | union_decl
    | trait_decl
    | trait_alias
    | macro_decl
    ;

extern_crate
    : 'extern' 'crate' altnt_block__extern_crate_2 optional__extern_crate_1 ';'
    ;

use_decl
    : 'use' use_path ';'
    ;

use_path
    : optional__simple_path_1 altnt_block__use_path_8
    ;

use_suffix
    : rename
    | aux_rule__use_suffix_3
    ;

use_item
    : altnt_block__use_item_2 optional__extern_crate_1
    ;

use_item_list
    : use_item kleene_star__use_item_list_2 optional__use_item_list_3
    ;

rename
    : 'as' altnt_block__const_decl_2
    ;

mod_decl_short
    : 'mod' ident ';'
    ;

mod_decl
    : 'mod' ident '{' mod_body '}'
    ;

extern_mod
    : extern_abi '{' kleene_star__mod_body_1 kleene_star__extern_mod_2 '}'
    ;

foreign_item
    : kleene_star__item_1 altnt_block__foreign_item_4
    ;

foreign_item_tail
    : foreign_fn_decl
    | aux_rule__foreign_item_tail_12
    ;

static_decl
    : 'static' optional__static_decl_1 ident ':' ty_sum '=' expr ';'
    ;

associated_static_decl
    : 'static' optional__static_decl_1 ident ':' ty_sum ';'
    ;

const_decl
    : optional__impl_block_1 'const' altnt_block__const_decl_2 ':' ty_sum '=' expr ';'
    ;

associated_const_decl
    : 'const' ident optional__associated_const_decl_2 ';'
    ;

fn_decl
    : fn_head '(' optional__fn_decl_1 ')' optional__fn_decl_2 optional__impl_block_6 altnt_block__fn_decl_4
    ;

method_decl
    : fn_head '(' optional__method_decl_1 ')' optional__fn_decl_2 optional__impl_block_6 altnt_block__fn_decl_4
    ;

trait_method_decl
    : fn_head '(' optional__trait_method_decl_1 ')' optional__foreign_fn_decl_2 optional__impl_block_6 altnt_block__fn_decl_4
    ;

foreign_fn_decl
    : fn_head '(' optional__foreign_fn_decl_1 ')' optional__foreign_fn_decl_2 optional__impl_block_6 altnt_block__fn_decl_4
    ;

macro_decl
    : macro_head optional__macro_decl_3 optional__fn_decl_2 optional__impl_block_6 tt
    ;

macro_head
    : 'macro' ident optional__macro_head_1
    ;

fn_head
    : kleene_star__fn_head_2 optional__fn_head_3 'fn' ident optional__impl_block_3
    ;

param
    : '...'
    | aux_rule__param_13
    ;

param_list
    : param kleene_star__param_list_2 optional__param_list_5 optional__use_item_list_3
    ;

variadic_param_list
    : param kleene_star__param_list_2 optional__variadic_param_list_5 optional__use_item_list_3
    ;

variadic_param_list_names_optional
    : trait_method_param kleene_star__trait_method_param_list_3 optional__variadic_param_list_5 optional__use_item_list_3
    ;

self_param
    : aux_rule__self_param_6
    | aux_rule__self_param_7
    ;

method_param_list
    : altnt_block__method_param_list_4 kleene_star__param_list_2 optional__use_item_list_3
    ;

trait_method_param
    : '...'
    | aux_rule__trait_method_param_10
    ;

restricted_pat
    : optional__restricted_pat_1 optional__restricted_pat_3 altnt_block__restricted_pat_4
    ;

trait_method_param_list
    : kleene_star__item_1 altnt_block__trait_method_param_list_5 kleene_star__trait_method_param_list_3 optional__use_item_list_3
    ;

rtype
    : '->' type
    ;

fn_rtype
    : '->' altnt_block__fn_rtype_1
    ;

type_decl
    : 'type' ident altnt_block__type_decl_10 ';'
    ;

struct_decl
    : 'struct' ident optional__impl_block_3 struct_tail
    ;

struct_tail
    : aux_rule__struct_tail_9
    | aux_rule__struct_tail_10
    ;

tuple_struct_field
    : kleene_star__item_1 optional__item_2 ty_sum
    ;

tuple_struct_field_list
    : tuple_struct_field kleene_star__tuple_struct_field_list_2 optional__use_item_list_3
    ;

field_decl
    : kleene_star__item_1 optional__item_2 ident ':' ty_sum
    ;

field_decl_list
    : field_decl kleene_star__field_decl_list_2 optional__use_item_list_3
    ;

enum_decl
    : 'enum' ident optional__impl_block_3 optional__impl_block_6 '{' optional__enum_decl_3 '}'
    ;

enum_variant
    : kleene_star__item_1 optional__item_2 enum_variant_main optional__enum_variant_4
    ;

enum_variant_list
    : enum_variant kleene_star__enum_variant_list_2 optional__use_item_list_3
    ;

enum_variant_main
    : ident altnt_block__enum_variant_main_5
    ;

enum_tuple_field
    : kleene_star__item_1 ty_sum
    ;

enum_tuple_field_list
    : enum_tuple_field kleene_star__enum_tuple_field_list_2 optional__use_item_list_3
    ;

union_decl
    : 'union' ident optional__impl_block_3 optional__impl_block_6 '{' field_decl_list '}'
    ;

trait_decl
    : optional__impl_block_2 optional__trait_decl_2 'trait' ident optional__impl_block_3 optional__type_decl_4 optional__impl_block_6 '{' kleene_star__mod_body_1 kleene_star__trait_decl_7 '}'
    ;

trait_alias
    : 'trait' ident optional__impl_block_3 '=' altnt_block__trait_alias_3 ';'
    ;

trait_item
    : aux_rule__trait_item_23
    | aux_rule__trait_item_24
    | aux_rule__trait_item_25
    ;

ty_default
    : '=' ty_sum
    ;

impl_block
    : optional__impl_block_1 optional__impl_block_2 'impl' optional__impl_block_3 optional__impl_block_4 optional__impl_block_5 impl_what optional__impl_block_6 '{' kleene_star__impl_block_7 '}'
    ;

impl_what
    : aux_rule__impl_what_4
    | aux_rule__impl_what_5
    | aux_rule__impl_what_6
    ;

impl_item
    : kleene_star__impl_item_2 optional__item_2 impl_item_tail
    ;

impl_item_tail
    : aux_rule__impl_item_tail_14
    | const_decl
    | associated_const_decl
    | macro_invocation_semi
    | aux_rule__impl_item_tail_15
    ;

attr
    : '#' '[' kleene_star__inner_attr_1 ']'
    ;

inner_attr
    : '#' '!' '[' kleene_star__inner_attr_1 ']'
    ;

tt
    : aux_rule__tt_1
    | tt_delimited
    ;

tt_delimited
    : aux_rule__macro_decl_2
    | tt_brackets
    | tt_block
    ;

tt_brackets
    : '[' kleene_star__inner_attr_1 ']'
    ;

tt_block
    : '{' kleene_star__inner_attr_1 '}'
    ;

macro_tail
    : '!' tt_delimited
    ;

path
    : optional__path_3 path_segment_no_super
    ;

as_trait
    : 'as' ty_sum
    ;

path_segment
    : path_segment_no_super
    | 'super'
    ;

path_segment_no_super
    : simple_path_segment optional__path_segment_no_super_2
    ;

simple_path
    : optional__simple_path_1 simple_path_segment kleene_star__simple_path_3
    ;

simple_path_segment
    : ident
    | 'super'
    | 'Self'
    | 'crate'
    | '$crate'
    ;

for_lifetimes
    : 'for' '<' optional__for_lifetimes_1 '>'
    ;

lifetime_def_list
    : lifetime_def kleene_star__lifetime_def_list_2 optional__use_item_list_3
    ;

lifetime_def
    : lifetime optional__lifetime_def_2
    ;

type_path_main
    : optional__type_path_main_3 ty_path_tail
    ;

ty_path_tail
    : aux_rule__ty_path_tail_4
    | ty_path_segment_no_super
    ;

type_path_segment
    : ty_path_segment_no_super
    | 'super'
    ;

ty_path_segment_no_super
    : altnt_block__ty_path_segment_no_super_6 optional__ty_path_segment_no_super_3
    ;

where_clause
    : 'where' where_bound_list
    ;

where_bound_list
    : where_bound kleene_star__where_bound_list_2 optional__use_item_list_3
    ;

where_bound
    : aux_rule__where_bound_3
    | aux_rule__where_bound_4
    ;

empty_ok_colon_bound
    : ':' optional__empty_ok_colon_bound_1
    ;

colon_bound
    : ':' bound
    ;

prim_bound
    : aux_rule__prim_bound_5?
    ;

inferred_type
    : '_'
    ;

array_or_slice_type
    : '[' ty_sum optional__array_or_slice_type_2 ']'
    ;

reference_type
    : '&' optional__type_1 optional__static_decl_1 type
    ;

raw_pointer_type
    : '*' mut_or_const type
    ;

never_type
    : '!'
    ;

tuple_type
    : '(' optional__tuple_type_3 ')'
    ;

impl_trait_type
    : 'impl' type_param_bounds
    ;

impl_trait_type_one_bound
    : 'impl' trait_bound
    ;

trait_object_type_one_bound
    : optional__ty_sum_1 trait_bound
    ;

type_param_bounds
    : type_param_bound kleene_star__type_param_bounds_2 optional__type_param_bounds_3
    ;

type_param_bound
    : lifetime
    | trait_bound
    ;

trait_object_type
    : optional__ty_sum_1 optional__trait_object_type_2
    ;

trait_bound
    : aux_rule__trait_bound_5
    | aux_rule__trait_bound_6
    ;

bare_function_type
    : optional__where_bound_1 optional__impl_block_2 optional__fn_head_3 'fn' '(' optional__bare_function_type_4 ')' optional__foreign_fn_decl_2
    ;

mut_or_const
    : 'mut'
    | 'const'
    ;

extern_abi
    : 'extern' optional__extern_abi_1
    ;

type_arguments
    : '<' altnt_block__type_arguments_9 '>'
    ;

type_argument
    : aux_rule__type_argument_3
    | BareIntLit
    | 'true'
    | 'false'
    ;

ty_sum
    : optional__ty_sum_1 type optional__ty_sum_3
    ;

ty_sum_list
    : ty_sum kleene_star__ty_sum_list_2 optional__use_item_list_3
    ;

type_parameters
    : '<' altnt_block__type_parameters_4 '>'
    ;

lifetime_param
    : kleene_star__item_1 optional__impl_block_5 lifetime optional__lifetime_def_2
    ;

lifetime_param_list
    : lifetime_param kleene_star__lifetime_param_list_2 optional__use_item_list_3
    ;

type_parameter
    : aux_rule__type_parameter_5
    | ty_sum
    ;

type_parameter_list
    : type_parameter kleene_star__type_parameter_list_2 optional__use_item_list_3
    ;

pattern
    : pattern_without_mut
    | aux_rule__pattern_3
    ;

pat_ident
    : '_'
    | aux_rule__pat_ident_1
    ;

pat_range_end
    : path
    | pat_lit
    ;

pat_lit
    : optional__pat_lit_1 lit
    ;

pat_list_with_dots
    : pat_list_dots_tail
    | aux_rule__pat_list_with_dots_6
    ;

pat_list_dots_tail
    : '..' optional__pat_list_dots_tail_2
    ;

pat_fields_left
    : ident
    | BareIntLit
    | FullIntLit
    ;

pat_fields
    : '..'
    | aux_rule__pat_fields_8
    | aux_rule__pat_fields_9
    ;

pat_field
    : kleene_star__item_1 altnt_block__pat_field_6
    ;

expr
    : optional__expr_1 optional__expr_2 assign_expr
    ;

expr_no_struct
    : optional__expr_1 optional__expr_2 assign_expr_no_struct
    ;

expr_list
    : expr kleene_star__expr_list_2 optional__use_item_list_3
    ;

block
    : '{' kleene_star__block_with_inner_attrs_2 optional__block_with_inner_attrs_3 '}'
    ;

block_with_inner_attrs
    : '{' kleene_star__mod_body_1 kleene_star__block_with_inner_attrs_2 optional__block_with_inner_attrs_3 '}'
    ;

stmt
    : item
    | aux_rule__stmt_9
    | macro_invocation_semi
    | aux_rule__stmt_10
    ;

blocky_expr
    : aux_rule__blocky_expr_16
    | aux_rule__blocky_expr_17
    | aux_rule__blocky_expr_18
    ;

if_cond_or_pat
    : 'if' altnt_block__if_cond_or_pat_1
    ;

while_cond_or_pat
    : 'while' altnt_block__if_cond_or_pat_1
    ;

loop_label
    : lifetime ':'
    ;

match_arms
    : match_arm_intro altnt_block__match_arms_6
    ;

match_arm_intro
    : kleene_star__item_1 match_pattern optional__match_arm_intro_2 '=>'
    ;

match_pattern
    : optional__pattern_without_mut_1 pattern kleene_star__match_pattern_3
    ;

match_if_clause
    : 'if' expr
    ;

expr_attrs
    : kleene_plus__expr_attrs_2
    ;

expr_inner_attrs
    : kleene_plus__expr_inner_attrs_2
    ;

prim_expr
    : prim_expr_no_struct
    | aux_rule__prim_expr_3
    ;

prim_expr_no_struct
    : lit
    | 'self'
    | aux_rule__prim_expr_no_struct_25
    | aux_rule__prim_expr_no_struct_26
    | aux_rule__prim_expr_no_struct_27
    | blocky_expr
    | aux_rule__prim_expr_no_struct_28
    | aux_rule__prim_expr_no_struct_29
    | aux_rule__prim_expr_no_struct_30
    | aux_rule__prim_expr_no_struct_31
    ;

lit
    : 'true'
    | 'false'
    | BareIntLit
    | FullIntLit
    | ByteLit
    | ByteStringLit
    | FloatLit
    | CharLit
    | StringLit
    ;

closure_params
    : '||'
    | '|_|'
    | aux_rule__closure_params_3
    ;

closure_param
    : kleene_star__item_1 pattern optional__type_decl_7
    ;

closure_param_list
    : closure_param kleene_star__closure_param_list_2 optional__use_item_list_3
    ;

closure_tail
    : aux_rule__closure_tail_2
    | expr
    ;

lifetime_or_expr
    : lifetime
    | expr_no_struct
    ;

fields
    : struct_update_base
    | aux_rule__fields_5
    ;

struct_update_base
    : '..' expr
    ;

field
    : ident
    | aux_rule__field_2
    ;

field_name
    : ident
    | BareIntLit
    ;

pre_expr
    : post_expr
    | '&raw'
    | aux_rule__pre_expr_5
    | aux_rule__pre_expr_6
    ;

cmp_expr
    : bit_or_expr optional__cmp_expr_2
    ;

range_expr
    : aux_rule__range_expr_9
    | aux_rule__range_expr_10
    ;

assign_expr
    : range_expr optional__assign_expr_2
    ;

pre_expr_no_struct
    : post_expr_no_struct
    | aux_rule__pre_expr_no_struct_4
    ;

cmp_expr_no_struct
    : optional__cmp_expr_no_struct_6 bit_or_expr_no_struct
    ;

range_expr_no_struct
    : aux_rule__range_expr_no_struct_9
    | aux_rule__range_expr_no_struct_10
    ;

assign_expr_no_struct
    : range_expr_no_struct optional__assign_expr_no_struct_2
    ;

ident
    : Ident
    | 'auto'
    | 'default'
    | 'union'
    | 'try'
    | 'crate'
    | 'macro_rules'
    | RawIdentifier
    ;

any_ident
    : ident
    | 'crate'
    | 'Self'
    | 'self'
    | 'static'
    | 'super'
    ;

tokens_no_delimiters_cash
    : ~('(' | ')' | '{' | '}' | '[' | ']' | CashMoney)
    ;

tokens_no_delimiters_repetition_operators
    : ~('(' | ')' | '{' | '}' | '[' | ']' | '+' | '*' | '?')
    ;

macro_rules_definition
    : 'macro_rules' '!' optional__param_4 macro_rules_def
    ;

macro_rules_def
    : aux_rule__macro_rules_def_5
    | aux_rule__macro_rules_def_6
    ;

macro_rules
    : macro_rule kleene_star__macro_rules_2 optional__macro_rules_3
    ;

macro_rule
    : macro_matcher '=>' macro_transcriber
    ;

macro_matcher
    : aux_rule__macro_matcher_4
    | aux_rule__macro_matcher_5
    | aux_rule__macro_matcher_6
    ;

macro_match
    : tokens_no_delimiters_cash
    | macro_matcher
    | aux_rule__macro_match_4
    ;

macro_rep_sep
    : tokens_no_delimiters_repetition_operators
    ;

macro_rep_op
    : '*'
    | '+'
    | '?'
    ;

macro_transcriber
    : delim_token_tree
    ;

delim_token_tree
    : aux_rule__delim_token_tree_4
    | aux_rule__delim_token_tree_5
    | aux_rule__delim_token_tree_6
    ;

macro_invocation_semi
    : simple_path '!' altnt_block__macro_invocation_semi_4
    ;

macro_invocation
    : simple_path '!' delim_token_tree
    ;

lifetime
    : Lifetime
    | '\'static'
    | '\'_'
    ;

kleene_star__mod_body_1
    : inner_attr*
    ;

kleene_star__mod_body_2
    : item*
    ;

optional__visibility_1
    : visibility_restriction?
    ;

kleene_star__item_1
    : attr*
    ;

optional__item_2
    : visibility?
    ;

optional__extern_crate_1
    : rename?
    ;

optional__use_path_2
    : use_item_list?
    ;

aux_rule__use_path_4
    : '::' any_ident
    ;

kleene_star__use_path_5
    : aux_rule__use_path_4*
    ;

optional__use_path_6
    : use_suffix?
    ;

aux_rule__use_item_list_1
    : ',' use_item
    ;

kleene_star__use_item_list_2
    : aux_rule__use_item_list_1*
    ;

optional__use_item_list_3
    : ','?
    ;

kleene_star__extern_mod_2
    : foreign_item*
    ;

aux_rule__foreign_item_tail_2
    : '=' expr
    ;

optional__foreign_item_tail_3
    : aux_rule__foreign_item_tail_2?
    ;

optional__static_decl_1
    : 'mut'?
    ;

aux_rule__associated_const_decl_1
    : ':' ty_sum
    ;

optional__associated_const_decl_2
    : aux_rule__associated_const_decl_1?
    ;

optional__fn_decl_1
    : param_list?
    ;

optional__fn_decl_2
    : fn_rtype?
    ;

optional__method_decl_1
    : method_param_list?
    ;

optional__trait_method_decl_1
    : trait_method_param_list?
    ;

optional__foreign_fn_decl_1
    : variadic_param_list?
    ;

optional__foreign_fn_decl_2
    : rtype?
    ;

aux_rule__macro_decl_2
    : '(' kleene_star__inner_attr_1 ')'
    ;

optional__macro_decl_3
    : aux_rule__macro_decl_2?
    ;

optional__macro_head_1
    : type_parameter?
    ;

aux_rule__fn_head_1
    : 'async'
    | 'const'
    | 'unsafe'
    ;

kleene_star__fn_head_2
    : aux_rule__fn_head_1*
    ;

optional__fn_head_3
    : extern_abi?
    ;

aux_rule__param_3
    : ~EOF
    ;

optional__param_4
    : aux_rule__param_3?
    ;

optional__param_6
    : '&'?
    ;

aux_rule__param_list_1
    : ',' param
    ;

kleene_star__param_list_2
    : aux_rule__param_list_1*
    ;

aux_rule__param_list_4
    : ',' kleene_star__item_1 pattern mut_or_const ':' '...'
    ;

optional__param_list_5
    : aux_rule__param_list_4?
    ;

aux_rule__variadic_param_list_4
    : ',' kleene_star__item_1 '...'
    ;

optional__variadic_param_list_5
    : aux_rule__variadic_param_list_4?
    ;

aux_rule__trait_method_param_2
    : restricted_pat ','
    ;

kleene_star__trait_method_param_3
    : aux_rule__trait_method_param_2*
    ;

optional__restricted_pat_1
    : 'ref'?
    ;

aux_rule__restricted_pat_2
    : '&'
    | '&&'
    | 'mut'
    ;

optional__restricted_pat_3
    : aux_rule__restricted_pat_2?
    ;

aux_rule__trait_method_param_list_2
    : ',' trait_method_param
    ;

kleene_star__trait_method_param_list_3
    : aux_rule__trait_method_param_list_2*
    ;

optional__type_decl_4
    : colon_bound?
    ;

aux_rule__type_decl_6
    : ':' type
    ;

optional__type_decl_7
    : aux_rule__type_decl_6?
    ;

aux_rule__type_decl_8
    : '=' type
    ;

optional__type_decl_9
    : aux_rule__type_decl_8?
    ;

optional__struct_tail_2
    : tuple_struct_field_list?
    ;

optional__struct_tail_5
    : field_decl_list?
    ;

aux_rule__tuple_struct_field_list_1
    : ',' tuple_struct_field
    ;

kleene_star__tuple_struct_field_list_2
    : aux_rule__tuple_struct_field_list_1*
    ;

aux_rule__field_decl_list_1
    : ',' field_decl
    ;

kleene_star__field_decl_list_2
    : aux_rule__field_decl_list_1*
    ;

optional__enum_decl_3
    : enum_variant_list?
    ;

aux_rule__enum_variant_3
    : '=' lit
    ;

optional__enum_variant_4
    : aux_rule__enum_variant_3?
    ;

aux_rule__enum_variant_list_1
    : ',' enum_variant
    ;

kleene_star__enum_variant_list_2
    : aux_rule__enum_variant_list_1*
    ;

optional__enum_variant_main_1
    : enum_tuple_field_list?
    ;

aux_rule__enum_tuple_field_list_1
    : ',' enum_tuple_field
    ;

kleene_star__enum_tuple_field_list_2
    : aux_rule__enum_tuple_field_list_1*
    ;

optional__trait_decl_2
    : 'auto'?
    ;

kleene_star__trait_decl_7
    : trait_item*
    ;

optional__impl_block_1
    : 'default'?
    ;

optional__impl_block_2
    : 'unsafe'?
    ;

optional__impl_block_3
    : type_parameters?
    ;

optional__impl_block_4
    : '?'?
    ;

optional__impl_block_5
    : 'const'?
    ;

optional__impl_block_6
    : where_clause?
    ;

kleene_star__impl_block_7
    : impl_item*
    ;

aux_rule__impl_item_1
    : attr
    | inner_attr
    ;

kleene_star__impl_item_2
    : aux_rule__impl_item_1*
    ;

aux_rule__impl_item_tail_11
    : '=' kleene_star__inner_attr_1
    ;

optional__impl_item_tail_12
    : aux_rule__impl_item_tail_11?
    ;

kleene_star__inner_attr_1
    : tt*
    ;

optional__path_1
    : path_parent?
    ;

optional__path_parent_1
    : as_trait?
    ;

aux_rule__path_segment_no_super_1
    : '::' type_arguments
    ;

optional__path_segment_no_super_2
    : aux_rule__path_segment_no_super_1?
    ;

optional__simple_path_1
    : '::'?
    ;

aux_rule__simple_path_2
    : '::' simple_path_segment
    ;

kleene_star__simple_path_3
    : aux_rule__simple_path_2*
    ;

optional__for_lifetimes_1
    : lifetime_def_list?
    ;

aux_rule__lifetime_def_list_1
    : ',' lifetime_def
    ;

kleene_star__lifetime_def_list_2
    : aux_rule__lifetime_def_list_1*
    ;

aux_rule__lifetime_def_1
    : ':' lifetime_bound
    ;

optional__lifetime_def_2
    : aux_rule__lifetime_def_1?
    ;

optional__type_path_main_1
    : ty_path_parent?
    ;

optional__ty_path_tail_1
    : ty_sum_list?
    ;

optional__ty_path_segment_no_super_2
    : altnt_block__ty_path_tail_3?
    ;

optional__ty_path_segment_no_super_3
    : type_arguments?
    ;

aux_rule__where_bound_list_1
    : ',' where_bound
    ;

kleene_star__where_bound_list_2
    : aux_rule__where_bound_list_1*
    ;

optional__where_bound_1
    : for_lifetimes?
    ;

optional__where_bound_2
    : empty_ok_colon_bound?
    ;

optional__empty_ok_colon_bound_1
    : bound?
    ;

aux_rule__prim_bound_3
    : 'dyn'
    | 'impl'
    ;

optional__prim_bound_4
    : aux_rule__prim_bound_3?
    ;

aux_rule__prim_bound_5
    : aux_rule__prim_bound_6
    | lifetime
    ;

optional__type_1
    : lifetime?
    ;

aux_rule__array_or_slice_type_1
    : ';' expr
    ;

optional__array_or_slice_type_2
    : aux_rule__array_or_slice_type_1?
    ;

aux_rule__type_param_bounds_1
    : '+' type_param_bound
    ;

kleene_star__type_param_bounds_2
    : aux_rule__type_param_bounds_1*
    ;

optional__type_param_bounds_3
    : '+'?
    ;

optional__trait_object_type_2
    : type_param_bounds?
    ;

optional__bare_function_type_4
    : variadic_param_list_names_optional?
    ;

optional__extern_abi_1
    : StringLit?
    ;

aux_rule__type_arguments_1
    : ',' altnt_block__type_arguments_10
    ;

kleene_star__type_arguments_2
    : aux_rule__type_arguments_1*
    ;

aux_rule__type_arguments_4
    : lifetime ','
    ;

kleene_star__type_arguments_5
    : aux_rule__type_arguments_4*
    ;

aux_rule__type_arguments_6
    : ',' type_argument
    ;

kleene_star__type_arguments_7
    : aux_rule__type_arguments_6*
    ;

optional__ty_sum_1
    : 'dyn'?
    ;

aux_rule__ty_sum_2
    : '+' bound
    ;

optional__ty_sum_3
    : aux_rule__ty_sum_2?
    ;

aux_rule__ty_sum_list_1
    : ',' ty_sum
    ;

kleene_star__ty_sum_list_2
    : aux_rule__ty_sum_list_1*
    ;

aux_rule__type_parameters_1
    : lifetime_param ','
    ;

kleene_star__type_parameters_2
    : aux_rule__type_parameters_1*
    ;

optional__type_parameters_3
    : type_parameter_list?
    ;

aux_rule__lifetime_param_list_1
    : ',' lifetime_param
    ;

kleene_star__lifetime_param_list_2
    : aux_rule__lifetime_param_list_1*
    ;

optional__type_parameter_4
    : ty_default?
    ;

aux_rule__type_parameter_list_1
    : ',' type_parameter
    ;

kleene_star__type_parameter_list_2
    : aux_rule__type_parameter_list_1*
    ;

aux_rule__pattern_1
    : '@' pattern
    ;

optional__pattern_2
    : aux_rule__pattern_1?
    ;

optional__pattern_without_mut_1
    : '|'?
    ;

aux_rule__pattern_without_mut_2
    : '@' match_pattern
    ;

optional__pattern_without_mut_3
    : aux_rule__pattern_without_mut_2?
    ;

aux_rule__pattern_without_mut_4
    : pat_ident ','
    ;

kleene_star__pattern_without_mut_5
    : aux_rule__pattern_without_mut_4*
    ;

optional__pattern_without_mut_12
    : pat_list_with_dots?
    ;

optional__pattern_without_mut_13
    : pat_fields?
    ;

aux_rule__pattern_without_mut_15
    : ',' pattern
    ;

kleene_star__pattern_without_mut_16
    : aux_rule__pattern_without_mut_15*
    ;

optional__pat_lit_1
    : '-'?
    ;

optional__pat_list_with_dots_3
    : pat_list_dots_tail?
    ;

aux_rule__pat_list_with_dots_4
    : ',' optional__pat_list_with_dots_3
    ;

optional__pat_list_with_dots_5
    : aux_rule__pat_list_with_dots_4?
    ;

aux_rule__pat_list_dots_tail_1
    : ',' aux_rule__pattern_without_mut_21
    ;

optional__pat_list_dots_tail_2
    : aux_rule__pat_list_dots_tail_1?
    ;

aux_rule__pat_fields_1
    : ',' altnt_block__pat_fields_6
    ;

kleene_star__pat_fields_2
    : aux_rule__pat_fields_1*
    ;

aux_rule__pat_fields_3
    : ',' pat_field
    ;

kleene_star__pat_fields_4
    : aux_rule__pat_fields_3*
    ;

optional__pat_field_2
    : 'box'?
    ;

optional__expr_1
    : '&raw'?
    ;

optional__expr_2
    : mut_or_const?
    ;

aux_rule__expr_list_1
    : ',' expr
    ;

kleene_star__expr_list_2
    : aux_rule__expr_list_1*
    ;

kleene_star__block_with_inner_attrs_2
    : stmt*
    ;

optional__block_with_inner_attrs_3
    : expr?
    ;

aux_rule__blocky_expr_1
    : 'else' if_cond_or_pat block
    ;

kleene_star__blocky_expr_2
    : aux_rule__blocky_expr_1*
    ;

aux_rule__blocky_expr_3
    : 'else' block
    ;

optional__blocky_expr_4
    : aux_rule__blocky_expr_3?
    ;

optional__blocky_expr_5
    : inner_attr?
    ;

optional__blocky_expr_6
    : match_arms?
    ;

optional__blocky_expr_7
    : loop_label?
    ;

aux_rule__match_arms_4
    : ',' optional__blocky_expr_6
    ;

optional__match_arms_5
    : aux_rule__match_arms_4?
    ;

optional__match_arm_intro_2
    : match_if_clause?
    ;

aux_rule__match_pattern_2
    : '|' pattern
    ;

kleene_star__match_pattern_3
    : aux_rule__match_pattern_2*
    ;

optional__prim_expr_1
    : expr_inner_attrs?
    ;

optional__prim_expr_2
    : fields?
    ;

optional__prim_expr_no_struct_1
    : macro_tail?
    ;

optional__prim_expr_no_struct_5
    : expr_list?
    ;

optional__prim_expr_no_struct_9
    : 'static'?
    ;

optional__prim_expr_no_struct_10
    : 'move'?
    ;

optional__prim_expr_no_struct_11
    : lifetime_or_expr?
    ;

optional__prim_expr_no_struct_12
    : lit?
    ;

optional__prim_expr_no_struct_13
    : item?
    ;

optional__closure_params_1
    : closure_param_list?
    ;

aux_rule__closure_param_list_1
    : ',' closure_param
    ;

kleene_star__closure_param_list_2
    : aux_rule__closure_param_list_1*
    ;

aux_rule__fields_1
    : ',' field
    ;

kleene_star__fields_2
    : aux_rule__fields_1*
    ;

kleene_star__field_1
    : expr_attrs*
    ;

aux_rule__post_expr_tail_4
    : optional__path_segment_no_super_2 '(' optional__prim_expr_no_struct_5 ')'
    ;

optional__post_expr_tail_5
    : aux_rule__post_expr_tail_4?
    ;

optional__range_expr_1
    : or_expr?
    ;

optional__range_expr_no_struct_1
    : or_expr_no_struct?
    ;

optional__macro_rules_def_1
    : macro_rules?
    ;

aux_rule__macro_rules_1
    : ';' macro_rule
    ;

kleene_star__macro_rules_2
    : aux_rule__macro_rules_1*
    ;

optional__macro_rules_3
    : ';'?
    ;

kleene_star__macro_matcher_1
    : macro_match*
    ;

kleene_plus__macro_match_1
    : macro_match+
    ;

optional__macro_match_2
    : macro_rep_sep?
    ;

aux_rule__bound_4
    : aux_rule__bound_5
    | aux_rule__bound_6
    ;

kleene_star__bound_3
    : aux_rule__bound_4*
    ;

bound
    : prim_bound kleene_star__bound_3
    ;

aux_rule__path_parent_3
    : '::' path_segment
    ;

kleene_star__path_parent_2
    : aux_rule__path_parent_3*
    ;

aux_rule__path_parent_4
    : 'self'
    | aux_rule__path_parent_6
    | aux_rule__path_parent_7
    ;

path_parent
    : aux_rule__path_parent_4 kleene_star__path_parent_2
    ;

aux_rule__lifetime_bound_2
    : '+' lifetime
    ;

kleene_star__lifetime_bound_1
    : aux_rule__lifetime_bound_2*
    ;

lifetime_bound
    : lifetime kleene_star__lifetime_bound_1
    ;

aux_rule__ty_path_parent_3
    : '::' type_path_segment
    ;

kleene_star__ty_path_parent_2
    : aux_rule__ty_path_parent_3*
    ;

aux_rule__ty_path_parent_4
    : 'self'
    | aux_rule__ty_path_parent_6
    | aux_rule__ty_path_parent_7
    ;

ty_path_parent
    : aux_rule__ty_path_parent_4 kleene_star__ty_path_parent_2
    ;

aux_rule__pattern_without_mut_19
    : '|' pattern_without_mut
    ;

kleene_star__pattern_without_mut_18
    : aux_rule__pattern_without_mut_19*
    ;

aux_rule__pattern_without_mut_20
    : '_'
    | '..'
    | aux_rule__pattern_without_mut_32
    | pat_lit
    | aux_rule__pattern_without_mut_33
    | aux_rule__pattern_without_mut_34
    | aux_rule__pattern_without_mut_35
    | aux_rule__pattern_without_mut_36
    | aux_rule__pattern_without_mut_37
    | aux_rule__pattern_without_mut_38
    | aux_rule__pattern_without_mut_39
    | aux_rule__pattern_without_mut_40
    ;

pattern_without_mut
    : aux_rule__pattern_without_mut_20 kleene_star__pattern_without_mut_18
    ;

kleene_star__post_expr_1
    : aux_rule__post_expr_2*
    ;

post_expr
    : prim_expr kleene_star__post_expr_1
    ;

aux_rule__cast_expr_2
    : altnt_block__cast_expr_3 ty_sum
    ;

kleene_star__cast_expr_1
    : aux_rule__cast_expr_2*
    ;

cast_expr
    : pre_expr kleene_star__cast_expr_1
    ;

aux_rule__mul_expr_2
    : altnt_block__mul_expr_3 cast_expr
    ;

kleene_star__mul_expr_1
    : aux_rule__mul_expr_2*
    ;

mul_expr
    : cast_expr kleene_star__mul_expr_1
    ;

aux_rule__add_expr_2
    : altnt_block__add_expr_3 mul_expr
    ;

kleene_star__add_expr_1
    : aux_rule__add_expr_2*
    ;

add_expr
    : mul_expr kleene_star__add_expr_1
    ;

aux_rule__shift_expr_2
    : altnt_block__shift_expr_3 add_expr
    ;

kleene_star__shift_expr_1
    : aux_rule__shift_expr_2*
    ;

shift_expr
    : add_expr kleene_star__shift_expr_1
    ;

aux_rule__bit_and_expr_2
    : '&' shift_expr
    ;

kleene_star__bit_and_expr_1
    : aux_rule__bit_and_expr_2*
    ;

bit_and_expr
    : shift_expr kleene_star__bit_and_expr_1
    ;

aux_rule__bit_xor_expr_2
    : '^' bit_and_expr
    ;

kleene_star__bit_xor_expr_1
    : aux_rule__bit_xor_expr_2*
    ;

bit_xor_expr
    : bit_and_expr kleene_star__bit_xor_expr_1
    ;

aux_rule__bit_or_expr_2
    : '|' bit_xor_expr
    ;

kleene_star__bit_or_expr_1
    : aux_rule__bit_or_expr_2*
    ;

bit_or_expr
    : bit_xor_expr kleene_star__bit_or_expr_1
    ;

aux_rule__and_expr_2
    : '&&' cmp_expr
    ;

kleene_star__and_expr_1
    : aux_rule__and_expr_2*
    ;

and_expr
    : cmp_expr kleene_star__and_expr_1
    ;

aux_rule__or_expr_2
    : '||' and_expr
    ;

kleene_star__or_expr_1
    : aux_rule__or_expr_2*
    ;

or_expr
    : and_expr kleene_star__or_expr_1
    ;

post_expr_no_struct
    : prim_expr_no_struct kleene_star__post_expr_1
    ;

cast_expr_no_struct
    : pre_expr_no_struct kleene_star__cast_expr_1
    ;

aux_rule__mul_expr_no_struct_2
    : altnt_block__mul_expr_3 cast_expr_no_struct
    ;

kleene_star__mul_expr_no_struct_1
    : aux_rule__mul_expr_no_struct_2*
    ;

mul_expr_no_struct
    : cast_expr_no_struct kleene_star__mul_expr_no_struct_1
    ;

aux_rule__add_expr_no_struct_2
    : altnt_block__add_expr_3 mul_expr_no_struct
    ;

kleene_star__add_expr_no_struct_1
    : aux_rule__add_expr_no_struct_2*
    ;

add_expr_no_struct
    : mul_expr_no_struct kleene_star__add_expr_no_struct_1
    ;

aux_rule__shift_expr_no_struct_2
    : altnt_block__shift_expr_3 add_expr_no_struct
    ;

kleene_star__shift_expr_no_struct_1
    : aux_rule__shift_expr_no_struct_2*
    ;

shift_expr_no_struct
    : add_expr_no_struct kleene_star__shift_expr_no_struct_1
    ;

aux_rule__bit_and_expr_no_struct_2
    : '&' shift_expr_no_struct
    ;

kleene_star__bit_and_expr_no_struct_1
    : aux_rule__bit_and_expr_no_struct_2*
    ;

bit_and_expr_no_struct
    : shift_expr_no_struct kleene_star__bit_and_expr_no_struct_1
    ;

aux_rule__bit_xor_expr_no_struct_2
    : '^' bit_and_expr_no_struct
    ;

kleene_star__bit_xor_expr_no_struct_1
    : aux_rule__bit_xor_expr_no_struct_2*
    ;

bit_xor_expr_no_struct
    : bit_and_expr_no_struct kleene_star__bit_xor_expr_no_struct_1
    ;

aux_rule__bit_or_expr_no_struct_2
    : '|' bit_xor_expr_no_struct
    ;

kleene_star__bit_or_expr_no_struct_1
    : aux_rule__bit_or_expr_no_struct_2*
    ;

bit_or_expr_no_struct
    : bit_xor_expr_no_struct kleene_star__bit_or_expr_no_struct_1
    ;

aux_rule__and_expr_no_struct_2
    : '&&' cmp_expr_no_struct
    ;

kleene_star__and_expr_no_struct_1
    : aux_rule__and_expr_no_struct_2*
    ;

and_expr_no_struct
    : cmp_expr_no_struct kleene_star__and_expr_no_struct_1
    ;

aux_rule__or_expr_no_struct_2
    : '||' and_expr_no_struct
    ;

kleene_star__or_expr_no_struct_1
    : aux_rule__or_expr_no_struct_2*
    ;

or_expr_no_struct
    : and_expr_no_struct kleene_star__or_expr_no_struct_1
    ;

kleene_plus__expr_attrs_2
    : attr+
    ;

kleene_plus__expr_inner_attrs_2
    : inner_attr+
    ;

aux_rule__enum_variant_main_3
    : '(' optional__enum_variant_main_1 ')'
    ;

optional__enum_variant_main_4
    : aux_rule__enum_variant_main_3?
    ;

aux_rule__impl_what_1
    : '!' ty_sum 'for'
    ;

optional__impl_what_2
    : aux_rule__impl_what_1?
    ;

aux_rule__path_2
    : optional__path_1 '::'
    ;

optional__path_3
    : aux_rule__path_2?
    ;

aux_rule__type_path_main_2
    : optional__type_path_main_1 '::'
    ;

optional__type_path_main_3
    : aux_rule__type_path_main_2?
    ;

aux_rule__tuple_type_2
    : ty_sum ',' optional__ty_path_tail_1
    ;

optional__tuple_type_3
    : aux_rule__tuple_type_2?
    ;

aux_rule__type_argument_1
    : ident '='
    ;

optional__type_argument_2
    : aux_rule__type_argument_1?
    ;

aux_rule__pattern_without_mut_21
    : pattern kleene_star__pattern_without_mut_16 optional__use_item_list_3
    ;

optional__pattern_without_mut_22
    : aux_rule__pattern_without_mut_21?
    ;

aux_rule__pattern_without_mut_23
    : '(' optional__pattern_without_mut_12 ')'
    ;

optional__pattern_without_mut_24
    : aux_rule__pattern_without_mut_23?
    ;

aux_rule__assign_expr_1
    : altnt_block__assign_expr_3 assign_expr
    ;

optional__assign_expr_2
    : aux_rule__assign_expr_1?
    ;

aux_rule__assign_expr_no_struct_1
    : altnt_block__assign_expr_no_struct_3 assign_expr_no_struct
    ;

optional__assign_expr_no_struct_2
    : aux_rule__assign_expr_no_struct_1?
    ;

optional__blocky_expr_11
    : 'async'?
    ;

optional__closure_params_2
    : optional__closure_params_1?
    ;

aux_rule__cmp_expr_1
    : altnt_block__cmp_expr_3 bit_or_expr
    ;

optional__cmp_expr_2
    : aux_rule__cmp_expr_1?
    ;

aux_rule__range_expr_5
    : '..' optional__range_expr_1
    ;

optional__range_expr_6
    : aux_rule__range_expr_5?
    ;

aux_rule__cmp_expr_no_struct_5
    : optional__expr_1 optional__expr_2 bit_or_expr_no_struct altnt_block__cmp_expr_no_struct_7 optional__expr_1 optional__expr_2
    ;

optional__cmp_expr_no_struct_6
    : aux_rule__cmp_expr_no_struct_5?
    ;

aux_rule__range_expr_no_struct_5
    : '..' optional__range_expr_no_struct_1
    ;

optional__range_expr_no_struct_6
    : aux_rule__range_expr_no_struct_5?
    ;

altnt_block__visibility_restriction_1
    : 'crate'
    | 'super'
    | aux_rule__visibility_restriction_2
    ;

altnt_block__type_decl_10
    : optional__impl_block_3 altnt_block__type_decl_11
    ;

altnt_block__use_suffix_2
    : '*'
    | aux_rule__use_suffix_4
    ;

altnt_block__foreign_item_tail_11
    : aux_rule__foreign_item_tail_13
    | aux_rule__foreign_item_tail_14
    ;

altnt_block__macro_invocation_semi_4
    : aux_rule__macro_invocation_semi_6
    | aux_rule__macro_invocation_semi_7
    ;

altnt_block__type_parameters_4
    : lifetime_param_list
    | aux_rule__type_parameters_5
    ;

altnt_block__trait_method_param_6
    : kleene_star__item_1 optional__trait_method_param_9
    ;

altnt_block__struct_tail_6
    : optional__struct_tail_8 optional__impl_block_6
    ;

altnt_block__enum_variant_main_5
    : optional__enum_variant_main_4
    | aux_rule__enum_variant_main_6
    | aux_rule__enum_variant_main_7
    ;

altnt_block__trait_item_19
    : kleene_star__item_1 optional__impl_block_1 altnt_block__trait_item_22
    ;

altnt_block__impl_what_3
    : ty_sum
    | '..'
    ;

altnt_block__type_arguments_9
    : altnt_block__type_arguments_11 optional__use_item_list_3
    ;

altnt_block__impl_item_tail_13
    : aux_rule__impl_item_tail_16
    | aux_rule__impl_item_tail_17
    ;

altnt_block__pattern_without_mut_25
    : 'box'
    | '$'
    | aux_rule__pattern_without_mut_41
    ;

altnt_block__pattern_without_mut_26
    : '...'
    | '..'
    | '..='
    ;

altnt_block__pattern_without_mut_27
    : macro_tail
    | optional__pattern_without_mut_24
    | aux_rule__pattern_without_mut_42
    ;

altnt_block__pattern_without_mut_28
    : optional__pattern_without_mut_3
    | aux_rule__pattern_without_mut_43
    ;

altnt_block__pattern_without_mut_29
    : '&'
    | '&&'
    ;

altnt_block__pat_fields_6
    : aux_rule__pat_fields_10
    | '..'
    ;

altnt_block__stmt_8
    : aux_rule__stmt_11
    | optional__block_with_inner_attrs_3
    ;

altnt_block__blocky_expr_12
    : 'unsafe'
    | 'try'
    | optional__blocky_expr_11
    | aux_rule__blocky_expr_19
    ;

altnt_block__if_cond_or_pat_1
    : expr_no_struct
    | aux_rule__if_cond_or_pat_2
    ;

altnt_block__match_arms_6
    : aux_rule__match_arms_7
    | aux_rule__match_arms_8
    ;

altnt_block__prim_expr_no_struct_18
    : optional__prim_expr_1 altnt_block__prim_expr_no_struct_23
    ;

altnt_block__prim_expr_no_struct_19
    : optional__prim_expr_1 altnt_block__prim_expr_no_struct_24
    ;

altnt_block__post_expr_tail_7
    : aux_rule__post_expr_tail_8
    | BareIntLit
    ;

altnt_block__pre_expr_3
    : expr_attrs
    | '-'
    | '!'
    | '*'
    | 'box'
    | aux_rule__pre_expr_7
    ;

altnt_block__cast_expr_3
    : 'as'
    | ':'
    ;

altnt_block__mul_expr_3
    : '*'
    | '/'
    | '%'
    ;

altnt_block__add_expr_3
    : '+'
    | '-'
    ;

altnt_block__shift_expr_3
    : aux_rule__shift_expr_4
    | aux_rule__shift_expr_5
    ;

altnt_block__range_expr_7
    : optional__range_expr_6
    | aux_rule__range_expr_11
    ;

altnt_block__range_expr_no_struct_7
    : optional__range_expr_no_struct_6
    | aux_rule__range_expr_no_struct_11
    ;

altnt_block__macro_rules_def_4
    : aux_rule__macro_rules_def_7
    | aux_rule__macro_rules_def_8
    ;

altnt_block__macro_match_3
    : aux_rule__macro_match_5
    | aux_rule__macro_match_6
    ;

altnt_block__macro_invocation_semi_5
    : aux_rule__macro_invocation_semi_8
    | aux_rule__macro_invocation_semi_9
    ;

type
    : impl_trait_type_one_bound
    | trait_object_type_one_bound
    | aux_rule__type_3
    | tuple_type
    | never_type
    | raw_pointer_type
    | reference_type
    | array_or_slice_type
    | inferred_type
    | bare_function_type
    | macro_invocation
    | aux_rule__type_4
    | impl_trait_type
    | trait_object_type
    | aux_rule__type_5
    ;

altnt_block__extern_crate_2
    : ident
    | 'self'
    ;

altnt_block__use_path_7
    : any_ident
    | '*'
    ;

altnt_block__use_item_2
    : any_ident
    | use_path
    | '*'
    ;

altnt_block__const_decl_2
    : ident
    | '_'
    ;

altnt_block__fn_decl_4
    : block_with_inner_attrs
    | ';'
    ;

altnt_block__method_param_list_4
    : param
    | self_param
    ;

altnt_block__restricted_pat_4
    : '_'
    | ident
    ;

altnt_block__trait_method_param_list_5
    : trait_method_param
    | self_param
    ;

altnt_block__fn_rtype_1
    : type
    | aux_rule__fn_rtype_2
    ;

altnt_block__trait_alias_3
    : aux_rule__trait_alias_4
    | where_clause
    ;

altnt_block__trait_item_20
    : const_decl
    | associated_const_decl
    ;

altnt_block__ty_path_tail_3
    : ident
    | 'Self'
    ;

altnt_block__pat_fields_7
    : aux_rule__pat_fields_11
    | optional__use_item_list_3
    ;

altnt_block__prim_expr_no_struct_20
    : blocky_expr
    | aux_rule__prim_expr_no_struct_32
    ;

altnt_block__fields_4
    : aux_rule__fields_6
    | optional__use_item_list_3
    ;

altnt_block__type_arguments_10
    : lifetime
    | type_argument
    ;

altnt_block__assign_expr_3
    : '='
    | '*='
    | '/='
    | '%='
    | '+='
    | '-='
    | '<<='
    | '>>='
    | '&='
    | '^='
    | '|='
    ;

altnt_block__assign_expr_no_struct_3
    : '*='
    | '/='
    | '%='
    | '+='
    | '-='
    | '<<='
    | aux_rule__assign_expr_no_struct_6
    | '&='
    | '^='
    | '|='
    | '>='
    | '<='
    ;

altnt_block__cmp_expr_3
    : '=='
    | '!='
    | '<'
    | '<='
    | '>'
    | '>='
    ;

altnt_block__cmp_expr_no_struct_7
    : '=='
    | '!='
    | '<'
    | '<='
    | aux_rule__cmp_expr_no_struct_9
    ;

altnt_block__trait_method_param_7
    : aux_rule__trait_method_param_11
    | restricted_pat
    ;

aux_rule__trait_method_param_8
    : altnt_block__trait_method_param_7 ':' kleene_star__item_1
    ;

optional__trait_method_param_9
    : aux_rule__trait_method_param_8?
    ;

aux_rule__struct_tail_7
    : '(' optional__struct_tail_2 ')'
    ;

optional__struct_tail_8
    : aux_rule__struct_tail_7?
    ;

aux_rule__assign_expr_no_struct_4
    : '>' '>'
    ;

optional__assign_expr_no_struct_5
    : aux_rule__assign_expr_no_struct_4?
    ;

aux_rule__blocky_expr_13
    : 'for' pattern 'in' expr_no_struct
    ;

optional__blocky_expr_14
    : aux_rule__blocky_expr_13?
    ;

optional__cmp_expr_no_struct_8
    : '='?
    ;

altnt_block__type_decl_11
    : aux_rule__type_decl_12
    | aux_rule__type_decl_13
    ;

altnt_block__use_path_8
    : aux_rule__use_path_9
    | aux_rule__use_path_10
    ;

altnt_block__foreign_item_4
    : aux_rule__foreign_item_5
    | macro_invocation_semi
    ;

altnt_block__param_12
    : aux_rule__param_14
    | aux_rule__param_15
    ;

altnt_block__trait_item_21
    : trait_method_decl
    | macro_invocation_semi
    ;

altnt_block__trait_item_22
    : aux_rule__trait_item_26
    | aux_rule__trait_item_27
    ;

altnt_block__type_arguments_11
    : aux_rule__type_arguments_12
    | aux_rule__type_arguments_13
    ;

altnt_block__pattern_without_mut_31
    : aux_rule__pattern_without_mut_44
    | aux_rule__pattern_without_mut_45
    ;

altnt_block__pat_field_6
    : aux_rule__pat_field_7
    | aux_rule__pat_field_8
    ;

altnt_block__blocky_expr_15
    : while_cond_or_pat
    | optional__blocky_expr_14
    | 'loop'
    ;

altnt_block__prim_expr_no_struct_22
    : aux_rule__prim_expr_no_struct_33
    | 'return'
    | 'yield'
    ;

altnt_block__prim_expr_no_struct_23
    : optional__block_with_inner_attrs_3
    | aux_rule__prim_expr_no_struct_34
    ;

altnt_block__prim_expr_no_struct_24
    : optional__prim_expr_no_struct_5
    | aux_rule__prim_expr_no_struct_35
    ;

altnt_block__range_expr_8
    : '..'
    | '..='
    ;

altnt_block__item_7
    : aux_rule__item_8
    | impl_block
    | extern_mod
    | macro_rules_definition
    | macro_invocation_semi
    | '\''
    ;

altnt_block__param_11
    : ty_sum
    | aux_rule__param_16
    | '...'
    ;

altnt_block__ty_path_segment_no_super_6
    : aux_rule__ty_path_segment_no_super_7
    | ident
    | 'Self'
    | '&raw'
    ;

aux_rule__post_expr_2
    : '?'
    | aux_rule__post_expr_3
    | aux_rule__post_expr_4
    | aux_rule__post_expr_5
    ;

aux_rule__visibility_2
    : 'pub' optional__visibility_1
    ;

aux_rule__use_suffix_3
    : '::' altnt_block__use_suffix_2
    ;

aux_rule__foreign_item_tail_12
    : altnt_block__foreign_item_tail_11 ';'
    ;

aux_rule__param_13
    : kleene_star__item_1 altnt_block__param_12
    ;

aux_rule__self_param_6
    : optional__static_decl_1 'self' optional__associated_const_decl_2
    ;

aux_rule__self_param_7
    : '&' optional__type_1 optional__static_decl_1 'self'
    ;

aux_rule__trait_method_param_10
    : altnt_block__trait_method_param_6 ty_sum
    ;

aux_rule__struct_tail_9
    : optional__impl_block_6 '{' optional__struct_tail_5 '}'
    ;

aux_rule__struct_tail_10
    : altnt_block__struct_tail_6 ';'
    ;

aux_rule__trait_item_23
    : optional__impl_block_1 optional__item_2 altnt_block__trait_item_20
    ;

aux_rule__trait_item_24
    : altnt_block__trait_item_19 ';'
    ;

aux_rule__trait_item_25
    : kleene_star__item_1 optional__impl_block_1 optional__item_2 altnt_block__trait_item_21
    ;

aux_rule__impl_what_4
    : optional__impl_what_2 ty_sum
    ;

aux_rule__impl_what_5
    : ident type_arguments
    ;

aux_rule__impl_what_6
    : ty_sum 'for' altnt_block__impl_what_3
    ;

aux_rule__impl_item_tail_14
    : optional__impl_block_1 method_decl
    ;

aux_rule__impl_item_tail_15
    : altnt_block__impl_item_tail_13 ';'
    ;

aux_rule__tt_1
    : ~('(' | ')' | '{' | '}' | '[' | ']')
    ;

aux_rule__ty_path_tail_4
    : altnt_block__ty_path_tail_3 '(' optional__ty_path_tail_1 ')' optional__foreign_fn_decl_2
    ;

aux_rule__where_bound_3
    : lifetime ':' lifetime_bound
    ;

aux_rule__where_bound_4
    : optional__where_bound_1 type optional__where_bound_2
    ;

aux_rule__trait_bound_5
    : optional__impl_block_4 optional__where_bound_1 type_path_main
    ;

aux_rule__trait_bound_6
    : '(' optional__impl_block_4 optional__where_bound_1 type_path_main ')'
    ;

aux_rule__type_argument_3
    : optional__type_argument_2 ty_sum
    ;

aux_rule__type_parameter_5
    : kleene_star__item_1 optional__impl_block_5 ident optional__type_decl_4 optional__type_parameter_4
    ;

aux_rule__pattern_3
    : 'mut' ident optional__pattern_2
    ;

aux_rule__pat_ident_1
    : 'ref' ident
    ;

aux_rule__pat_list_with_dots_6
    : match_pattern kleene_star__pattern_without_mut_16 optional__pat_list_with_dots_5
    ;

aux_rule__pat_fields_8
    : pat_fields_left ':' pat_fields_left kleene_star__pat_fields_2
    ;

aux_rule__pat_fields_9
    : pat_field kleene_star__pat_fields_4 altnt_block__pat_fields_7
    ;

aux_rule__stmt_9
    : kleene_star__item_1 blocky_expr
    ;

aux_rule__stmt_10
    : altnt_block__stmt_8 ';'
    ;

aux_rule__blocky_expr_16
    : if_cond_or_pat block kleene_star__blocky_expr_2 optional__blocky_expr_4
    ;

aux_rule__blocky_expr_17
    : 'match' expr_no_struct '{' optional__blocky_expr_5 optional__blocky_expr_6 '}'
    ;

aux_rule__blocky_expr_18
    : altnt_block__blocky_expr_12 block_with_inner_attrs
    ;

aux_rule__prim_expr_3
    : path '{' optional__prim_expr_1 optional__prim_expr_2 '}'
    ;

aux_rule__prim_expr_no_struct_25
    : path optional__prim_expr_no_struct_1
    ;

aux_rule__prim_expr_no_struct_26
    : optional__prim_expr_no_struct_9 optional__prim_expr_no_struct_10 closure_params closure_tail
    ;

aux_rule__prim_expr_no_struct_27
    : 'async' 'move' altnt_block__prim_expr_no_struct_20
    ;

aux_rule__prim_expr_no_struct_28
    : 'continue' optional__type_1
    ;

aux_rule__prim_expr_no_struct_29
    : '(' altnt_block__prim_expr_no_struct_18 ')'
    ;

aux_rule__prim_expr_no_struct_30
    : '[' altnt_block__prim_expr_no_struct_19 ']'
    ;

aux_rule__prim_expr_no_struct_31
    : altnt_block__prim_expr_no_struct_22 optional__block_with_inner_attrs_3
    ;

aux_rule__closure_params_3
    : '|' optional__closure_params_2 '|'
    ;

aux_rule__closure_tail_2
    : optional__foreign_fn_decl_2 block
    ;

aux_rule__fields_5
    : field kleene_star__fields_2 altnt_block__fields_4
    ;

aux_rule__field_2
    : kleene_star__field_1 field_name ':' expr
    ;

aux_rule__pre_expr_5
    : 'in' expr_no_struct block
    ;

aux_rule__pre_expr_6
    : altnt_block__pre_expr_3 pre_expr
    ;

aux_rule__range_expr_9
    : or_expr altnt_block__range_expr_7
    ;

aux_rule__range_expr_10
    : altnt_block__range_expr_8 optional__range_expr_1
    ;

aux_rule__pre_expr_no_struct_4
    : altnt_block__pre_expr_3 pre_expr_no_struct
    ;

aux_rule__range_expr_no_struct_9
    : or_expr_no_struct altnt_block__range_expr_no_struct_7
    ;

aux_rule__range_expr_no_struct_10
    : altnt_block__range_expr_8 optional__range_expr_no_struct_1
    ;

aux_rule__macro_rules_def_5
    : '{' optional__macro_rules_def_1 '}'
    ;

aux_rule__macro_rules_def_6
    : altnt_block__macro_rules_def_4 ';'
    ;

aux_rule__macro_matcher_4
    : '(' kleene_star__macro_matcher_1 ')'
    ;

aux_rule__macro_matcher_5
    : '[' kleene_star__macro_matcher_1 ']'
    ;

aux_rule__macro_matcher_6
    : '{' kleene_star__macro_matcher_1 '}'
    ;

aux_rule__macro_match_4
    : '$' altnt_block__macro_match_3
    ;

aux_rule__delim_token_tree_4
    : '(' kleene_star__inner_attr_1 ')'
    ;

aux_rule__delim_token_tree_5
    : '[' kleene_star__inner_attr_1 ']'
    ;

aux_rule__delim_token_tree_6
    : '{' kleene_star__inner_attr_1 '}'
    ;

aux_rule__prim_bound_6
    : optional__impl_block_4 optional__where_bound_1 optional__prim_bound_4 type_path_main
    ;

aux_rule__bound_5
    : '+' prim_bound
    ;

aux_rule__bound_6
    : '<' kleene_star__type_parameters_2 type_parameter_list '>'
    ;

aux_rule__path_parent_6
    : '<' ty_sum optional__path_parent_1 '>'
    ;

aux_rule__path_parent_7
    : optional__simple_path_1 path_segment
    ;

aux_rule__ty_path_parent_6
    : '<' ty_sum optional__path_parent_1 '>'
    ;

aux_rule__ty_path_parent_7
    : optional__simple_path_1 type_path_segment
    ;

aux_rule__pattern_without_mut_32
    : '|' pattern_without_mut optional__pattern_without_mut_1
    ;

aux_rule__pattern_without_mut_33
    : '(' optional__pattern_without_mut_12 ')'
    ;

aux_rule__pattern_without_mut_34
    : '[' optional__pattern_without_mut_22 ']'
    ;

aux_rule__pattern_without_mut_35
    : altnt_block__pattern_without_mut_25 pattern
    ;

aux_rule__pattern_without_mut_36
    : pat_range_end altnt_block__pattern_without_mut_26 pat_range_end
    ;

aux_rule__pattern_without_mut_37
    : path altnt_block__pattern_without_mut_27
    ;

aux_rule__pattern_without_mut_38
    : ident altnt_block__pattern_without_mut_28
    ;

aux_rule__pattern_without_mut_39
    : altnt_block__pattern_without_mut_29 pattern_without_mut
    ;

aux_rule__pattern_without_mut_40
    : altnt_block__pattern_without_mut_31 optional__pattern_2
    ;

aux_rule__visibility_restriction_2
    : 'in' simple_path
    ;

aux_rule__use_suffix_4
    : '{' optional__use_path_2 '}'
    ;

aux_rule__foreign_item_tail_13
    : 'static' optional__static_decl_1 ident ':' type optional__foreign_item_tail_3
    ;

aux_rule__foreign_item_tail_14
    : 'type' ident optional__impl_block_3 optional__type_decl_4 optional__impl_block_6 optional__type_decl_7 optional__type_decl_9
    ;

aux_rule__macro_invocation_semi_6
    : '{' kleene_star__inner_attr_1 '}'
    ;

aux_rule__macro_invocation_semi_7
    : altnt_block__macro_invocation_semi_5 ';'
    ;

aux_rule__type_parameters_5
    : kleene_star__type_parameters_2 optional__type_parameters_3
    ;

aux_rule__enum_variant_main_6
    : '{' optional__struct_tail_5 '}'
    ;

aux_rule__enum_variant_main_7
    : '=' expr
    ;

aux_rule__impl_item_tail_16
    : optional__impl_block_1 'type' ident optional__impl_block_3 optional__impl_block_6 '=' ty_sum
    ;

aux_rule__impl_item_tail_17
    : 'type' ident optional__impl_block_3 optional__type_decl_4 optional__impl_block_6 optional__type_decl_7 optional__impl_item_tail_12
    ;

aux_rule__pattern_without_mut_41
    : altnt_block__pattern_without_mut_29 'mut'
    ;

aux_rule__pattern_without_mut_42
    : '{' optional__pattern_without_mut_13 '}'
    ;

aux_rule__pattern_without_mut_43
    : '@' '(' match_pattern ')'
    ;

aux_rule__pat_fields_10
    : pat_fields_left ':' pat_fields_left
    ;

aux_rule__stmt_11
    : kleene_star__item_1 'let' match_pattern optional__type_decl_7 optional__foreign_item_tail_3
    ;

aux_rule__blocky_expr_19
    : optional__blocky_expr_7 altnt_block__blocky_expr_15
    ;

aux_rule__if_cond_or_pat_2
    : 'let' pattern '=' expr
    ;

aux_rule__match_arms_7
    : blocky_expr optional__use_item_list_3 optional__blocky_expr_6
    ;

aux_rule__match_arms_8
    : expr optional__match_arms_5
    ;

aux_rule__post_expr_tail_8
    : ident optional__post_expr_tail_5
    ;

aux_rule__pre_expr_7
    : altnt_block__pattern_without_mut_29 optional__static_decl_1
    ;

aux_rule__shift_expr_4
    : '<' '<'
    ;

aux_rule__shift_expr_5
    : '>' '>'
    ;

aux_rule__range_expr_11
    : '..=' optional__range_expr_1
    ;

aux_rule__range_expr_no_struct_11
    : '..=' optional__range_expr_no_struct_1
    ;

aux_rule__macro_rules_def_7
    : '(' optional__macro_rules_def_1 ')'
    ;

aux_rule__macro_rules_def_8
    : '[' optional__macro_rules_def_1 ']'
    ;

aux_rule__macro_match_5
    : ~EOF ':' aux_rule__param_3
    ;

aux_rule__macro_match_6
    : '(' kleene_plus__macro_match_1 ')' optional__macro_match_2 macro_rep_op
    ;

aux_rule__macro_invocation_semi_8
    : '(' kleene_star__inner_attr_1 ')'
    ;

aux_rule__macro_invocation_semi_9
    : '[' kleene_star__inner_attr_1 ']'
    ;

aux_rule__type_3
    : '(' ty_sum ')'
    ;

aux_rule__type_4
    : '&&' optional__type_1 optional__static_decl_1 type
    ;

aux_rule__type_5
    : '{' expr '}'
    ;

aux_rule__fn_rtype_2
    : 'impl' bound
    ;

aux_rule__trait_alias_4
    : ty_sum optional__impl_block_6
    ;

aux_rule__pat_fields_11
    : ',' '..'
    ;

aux_rule__prim_expr_no_struct_32
    : closure_params closure_tail
    ;

aux_rule__fields_6
    : ',' struct_update_base
    ;

aux_rule__assign_expr_no_struct_6
    : optional__assign_expr_no_struct_5 '='
    ;

aux_rule__cmp_expr_no_struct_9
    : '>' optional__cmp_expr_no_struct_8
    ;

aux_rule__trait_method_param_11
    : '(' kleene_star__trait_method_param_3 restricted_pat ')'
    ;

aux_rule__type_decl_12
    : optional__impl_block_6 '=' ty_sum
    ;

aux_rule__type_decl_13
    : optional__type_decl_4 optional__impl_block_6 optional__type_decl_7 optional__type_decl_9
    ;

aux_rule__use_path_9
    : '{' optional__use_path_2 '}'
    ;

aux_rule__use_path_10
    : altnt_block__use_path_7 kleene_star__use_path_5 optional__use_path_6
    ;

aux_rule__foreign_item_5
    : optional__item_2 foreign_item_tail
    ;

aux_rule__param_14
    : optional__expr_2 optional__param_4 pattern ':' altnt_block__param_11
    ;

aux_rule__param_15
    : optional__param_6 optional__type_1 optional__expr_2 'self' optional__type_decl_7
    ;

aux_rule__trait_item_26
    : optional__item_2 'type' ident optional__impl_block_3 optional__type_decl_4 optional__impl_block_6 optional__type_parameter_4
    ;

aux_rule__trait_item_27
    : 'const' ident ':' ty_sum optional__foreign_item_tail_3
    ;

aux_rule__type_arguments_12
    : lifetime kleene_star__type_arguments_2
    ;

aux_rule__type_arguments_13
    : kleene_star__type_arguments_5 type_argument kleene_star__type_arguments_7
    ;

aux_rule__pattern_without_mut_44
    : kleene_star__pattern_without_mut_5 pat_ident
    ;

aux_rule__pattern_without_mut_45
    : optional__restricted_pat_1 optional__static_decl_1 ident
    ;

aux_rule__pat_field_7
    : optional__pat_field_2 optional__restricted_pat_1 optional__static_decl_1 ident
    ;

aux_rule__pat_field_8
    : ident ':' pattern
    ;

aux_rule__prim_expr_no_struct_33
    : 'break' optional__prim_expr_no_struct_11 optional__prim_expr_no_struct_12 optional__prim_expr_no_struct_13
    ;

aux_rule__prim_expr_no_struct_34
    : expr ',' optional__prim_expr_no_struct_5
    ;

aux_rule__prim_expr_no_struct_35
    : expr ';' expr
    ;

aux_rule__item_8
    : optional__item_2 pub_item
    ;

aux_rule__param_16
    : 'impl' bound
    ;

aux_rule__ty_path_segment_no_super_7
    : '(' optional__ty_path_segment_no_super_2 ')'
    ;

aux_rule__post_expr_3
    : '[' expr ']'
    ;

aux_rule__post_expr_4
    : '(' optional__prim_expr_no_struct_5 ')'
    ;

aux_rule__post_expr_5
    : '.' altnt_block__post_expr_tail_7
    ;

