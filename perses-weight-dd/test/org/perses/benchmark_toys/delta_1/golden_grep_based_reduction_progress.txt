=====================Reduction starts.======================

The initial program size is 56
------------------------------------------------------------


=Fixpoint iteration 1. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=1}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___aux_rule__declaration_3 {id=344,slot_type=[aux_rule__translationUnit_2,declaration,aux_rule__declaration_3]}
    |   |___(+) {id=345,slot_type=declarationSpecifiers}
    |   |   |___Token:int {id=385,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
    |   |___(?) {id=346,slot_type=optional__declaration_2}
    |   |   |___directDeclarator {id=351,slot_type=[initDeclaratorList,initDeclarator,declarator,directDeclarator]}
    |   |       |___Token:printf {id=381,slot_type=[aux_rule__directDeclarator_9,Identifier]}
    |   |       |___(*) {id=353,slot_type=kleene_star__directDeclarator_7}
    |   |           |___aux_rule__directDeclarator_15 {id=355,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
    |   |               |___Token:( {id=356,slot_type=LeftParen}
    |   |               |___parameterTypeList {id=359,slot_type=[altnt_block__directDeclarator_11,parameterTypeList]}
    |   |               |   |___parameterDeclaration {id=365,slot_type=[parameterList,parameterDeclaration]}
    |   |               |   |   |___(+) {id=366,slot_type=declarationSpecifiers}
    |   |               |   |   |   |___Token:const {id=380,slot_type=[declarationSpecifier,typeQualifier,Const]}
    |   |               |   |   |   |___Token:char {id=378,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Char]}
    |   |               |   |   |___(?) {id=368,slot_type=[altnt_block__parameterDeclaration_2,optional__typeName_1]}
    |   |               |   |       |___Token:* {id=373,slot_type=[abstractDeclarator,pointer,altnt_block__pointer_8,Star]}
    |   |               |   |___(?) {id=361,slot_type=optional__parameterTypeList_2}
    |   |               |       |___aux_rule__parameterTypeList_1 {id=362,slot_type=aux_rule__parameterTypeList_1}
    |   |               |           |___Token:, {id=363,slot_type=Comma}
    |   |               |           |___Token:... {id=364,slot_type=Ellipsis}
    |   |               |___Token:) {id=358,slot_type=RightParen}
    |   |___Token:; {id=347,slot_type=Semi}
    |___functionDefinition {id=5,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=6,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=338,slot_type=declarationSpecifiers}
        |       |___Token:int {id=342,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=288,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=337,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=290,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=292,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=293,slot_type=LeftParen}
        |           |___parameterList {id=297,slot_type=[altnt_block__directDeclarator_11,parameterTypeList,parameterList]}
        |           |   |___(+) {id=326,slot_type=[parameterDeclaration,declarationSpecifiers]}
        |           |   |   |___Token:int {id=336,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |           |   |   |___Token:argc {id=333,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,typedefName,Identifier]}
        |           |   |___(*) {id=299,slot_type=kleene_star__parameterList_1}
        |           |       |___aux_rule__parameterList_2 {id=300,slot_type=aux_rule__parameterList_2}
        |           |           |___Token:, {id=301,slot_type=Comma}
        |           |           |___parameterDeclaration {id=302,slot_type=parameterDeclaration}
        |           |               |___(+) {id=303,slot_type=declarationSpecifiers}
        |           |               |   |___Token:char {id=325,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Char]}
        |           |               |___declarator {id=305,slot_type=[altnt_block__parameterDeclaration_2,declarator]}
        |           |                   |___(?) {id=306,slot_type=optional__declarator_1}
        |           |                   |   |___Token:* {id=321,slot_type=[pointer,altnt_block__pointer_8,Star]}
        |           |                   |___directDeclarator {id=307,slot_type=directDeclarator}
        |           |                       |___Token:argv {id=317,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |           |                       |___(*) {id=309,slot_type=kleene_star__directDeclarator_7}
        |           |                           |___aux_rule__directDeclarator_14 {id=311,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_14]}
        |           |                               |___Token:[ {id=312,slot_type=LeftBracket}
        |           |                               |___Token:] {id=314,slot_type=RightBracket}
        |           |___Token:) {id=295,slot_type=RightParen}
        |___compoundStatement {id=8,slot_type=compoundStatement}
            |___Token:{ {id=9,slot_type=LeftBrace}
            |___(?) {id=10,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=13,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___aux_rule__declaration_3 {id=253,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=254,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=287,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=255,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=258,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:a {id=283,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=260,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=261,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=262,slot_type=Assign}
            |       |   |               |___Token:1 {id=280,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |___Token:; {id=256,slot_type=Semi}
            |       |___aux_rule__declaration_3 {id=207,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=208,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=251,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=209,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=212,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:b {id=247,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=214,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=215,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=216,slot_type=Assign}
            |       |   |               |___additiveExpression {id=228,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression]}
            |       |   |                   |___Token:a {id=244,slot_type=[multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |       |   |                   |___(*) {id=230,slot_type=kleene_star__additiveExpression_1}
            |       |   |                       |___aux_rule__additiveExpression_2 {id=231,slot_type=aux_rule__additiveExpression_2}
            |       |   |                           |___Token:+ {id=239,slot_type=[altnt_block__additiveExpression_3,Plus]}
            |       |   |                           |___Token:1 {id=238,slot_type=[multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |___Token:; {id=210,slot_type=Semi}
            |       |___expressionStatement {id=140,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |       |   |___(?) {id=141,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=158,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression]}
            |       |   |       |___Token:printf {id=205,slot_type=[aux_rule__postfixExpression_4,Identifier]}
            |       |   |       |___(*) {id=160,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___aux_rule__postfixExpression_11 {id=162,slot_type=[aux_rule__postfixExpression_3,aux_rule__postfixExpression_11]}
            |       |   |               |___Token:( {id=163,slot_type=LeftParen}
            |       |   |               |___(?) {id=164,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___expression {id=166,slot_type=expression}
            |       |   |               |       |___(+) {id=203,slot_type=[assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |       |   |               |       |   |___Token:"%d\n" {id=204,slot_type=StringLiteral}
            |       |   |               |       |___(*) {id=168,slot_type=kleene_star__expression_1}
            |       |   |               |           |___aux_rule__expression_2 {id=169,slot_type=aux_rule__expression_2}
            |       |   |               |               |___Token:, {id=170,slot_type=Comma}
            |       |   |               |               |___Token:b {id=187,slot_type=[assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |       |   |               |___Token:) {id=165,slot_type=RightParen}
            |       |   |___Token:; {id=142,slot_type=Semi}
            |       |___expressionStatement {id=93,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |       |   |___(?) {id=94,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=111,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression]}
            |       |   |       |___Token:printf {id=138,slot_type=[aux_rule__postfixExpression_4,Identifier]}
            |       |   |       |___(*) {id=113,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___aux_rule__postfixExpression_11 {id=115,slot_type=[aux_rule__postfixExpression_3,aux_rule__postfixExpression_11]}
            |       |   |               |___Token:( {id=116,slot_type=LeftParen}
            |       |   |               |___(?) {id=117,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___(+) {id=136,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |       |   |               |       |___Token:"hello\n" {id=137,slot_type=StringLiteral}
            |       |   |               |___Token:) {id=118,slot_type=RightParen}
            |       |   |___Token:; {id=95,slot_type=Semi}
            |       |___expressionStatement {id=46,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |       |   |___(?) {id=47,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=64,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression]}
            |       |   |       |___Token:printf {id=91,slot_type=[aux_rule__postfixExpression_4,Identifier]}
            |       |   |       |___(*) {id=66,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___aux_rule__postfixExpression_11 {id=68,slot_type=[aux_rule__postfixExpression_3,aux_rule__postfixExpression_11]}
            |       |   |               |___Token:( {id=69,slot_type=LeftParen}
            |       |   |               |___(?) {id=70,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___(+) {id=89,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |       |   |               |       |___Token:"world\n" {id=90,slot_type=StringLiteral}
            |       |   |               |___Token:) {id=71,slot_type=RightParen}
            |       |   |___Token:; {id=48,slot_type=Semi}
            |       |___jumpStatement {id=21,slot_type=[aux_rule__blockItemList_2,statement,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=24,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=25,slot_type=Return}
            |           |   |___(?) {id=26,slot_type=optional__postfixExpression_1}
            |           |       |___Token:0 {id=44,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |           |___Token:; {id=23,slot_type=Semi}
            |___Token:} {id=11,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=56==================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]remove whole except first
    int printf(const char*, ...);
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=5}
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:kleene_plus__translationUnit_3]dd@1
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 1 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 2 from 56 to 46
------------------------------------------------------------


==================Reducing node 5, size=46==================

The current best program is the following

    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int a = 1;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int b = a + 1;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


==================Reducing node 8, size=46==================

The current best program is the following

    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 10, size=46==================

The current best program is the following

    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    int main (int argc, char *argv[]) {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


=================Reducing node 13, size=46==================

The current best program is the following

    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
        return 0;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=13}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]remove whole except first
    int main (int argc, char *argv[]) {
         int a = 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@3
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
     printf("world\n");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 6 --> 6.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 12
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("hello\n");
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    int main (int argc, char *argv[]) {
         int a = 1;
              int b = a + 1;
     printf("%d\n", b);
     printf("world\n");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 7 --> 6.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 3
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@3
    int main (int argc, char *argv[]) {
     printf("world\n");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

4 entries are removed: 6 --> 2.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 1
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 13 from 46 to 19
------------------------------------------------------------


=================Reducing node 288, size=19=================

The current best program is the following

    int main (int argc, char *argv[]) {
     printf("world\n");
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int main                          {
     printf("world\n");
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int           argc                {
     printf("world\n");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 2 --> 1.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 288 from 19 to 9
------------------------------------------------------------


==================Reducing node 46, size=9==================

The current best program is the following

    int main                          {
     printf("world\n");
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    int main                          {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 46
------------------------------------------------------------


==================Reducing node 47, size=9==================

The current best program is the following

    int main                          {
     printf("world\n");
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 47
------------------------------------------------------------


==================Reducing node 64, size=9==================

The current best program is the following

    int main                          {
     printf("world\n");
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=64}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main                          {
     printf           ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 4 --> 3.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 6
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 64 from 9 to 6
------------------------------------------------------------


=================Reducing node 337, size=6==================

The current best program is the following

    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 337
------------------------------------------------------------


==================Reducing node 89, size=6==================

The current best program is the following

    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 89
------------------------------------------------------------


==================Reducing node 90, size=6==================

The current best program is the following

    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 90
------------------------------------------------------------


==================Reducing node 48, size=6==================

The current best program is the following

    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 48
------------------------------------------------------------


==================Reducing node 11, size=6==================

The current best program is the following

    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


==================Reducing node 9, size=6===================

The current best program is the following

    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


==================Reducing node 6, size=6===================

The current best program is the following

    int main                          {
            "world\n" ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    main                          {
            "world\n" ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 3 --> 1.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 6 from 6 to 5
------------------------------------------------------------


=Fixpoint iteration 2. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=================Reducing node 387, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 387
------------------------------------------------------------


=================Reducing node 389, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 389
------------------------------------------------------------


=================Reducing node 391, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 391
------------------------------------------------------------


=================Reducing node 393, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    main                          {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 393
------------------------------------------------------------


=================Reducing node 396, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=396}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 396
------------------------------------------------------------


=================Reducing node 399, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    main                          {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 399
------------------------------------------------------------


=================Reducing node 423, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 423
------------------------------------------------------------


=================Reducing node 401, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 401
------------------------------------------------------------


=================Reducing node 400, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    main                          {
                      ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 400
------------------------------------------------------------


=================Reducing node 419, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=419}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 419
------------------------------------------------------------


=================Reducing node 420, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 420
------------------------------------------------------------


=================Reducing node 394, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 394
------------------------------------------------------------


=================Reducing node 392, size=5==================

The current best program is the following

    main                          {
            "world\n" ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 392
------------------------------------------------------------


==Fixpoint iteration 3. Reducer: concurrent_token_slicer@1==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    main                          {
                      ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    main                          {
            "world\n" ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    main                          {
            "world\n"
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    main
            "world\n" ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    {
            "world\n" ;
    }
------------------------------------------------------------


==Fixpoint iteration 4. Reducer: concurrent_token_slicer@2==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    main                          {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    main                          {
            "world\n"
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    main
                      ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    "world\n" ;
    }
------------------------------------------------------------


==Fixpoint iteration 5. Reducer: concurrent_token_slicer@3==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    main                          {
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    ;
    }
------------------------------------------------------------


==Fixpoint iteration 6. Reducer: concurrent_token_slicer@4==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    main
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    }
------------------------------------------------------------


==Fixpoint iteration 7. Reducer: concurrent_token_slicer@5==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
------------------------------------------------------------


==Fixpoint iteration 8. Reducer: concurrent_token_slicer@6==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


==Fixpoint iteration 9. Reducer: concurrent_token_slicer@7==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 10. Reducer: concurrent_token_slicer@8==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 11. Reducer: concurrent_token_slicer@9==

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 12. Reducer: concurrent_token_slicer@10=

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 13. Reducer: concurrent_token_slicer@11=

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 14. Reducer: concurrent_token_slicer@12=

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 15. Reducer: concurrent_token_slicer@13=

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


=Fixpoint iteration 16. Reducer: concurrent_token_slicer@14=

The spar-tree is the following.
translationUnit {id=386}
|___(+) {id=387,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=389,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___Token:main {id=423,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
        |___compoundStatement {id=391,slot_type=compoundStatement}
            |___Token:{ {id=392,slot_type=LeftBrace}
            |___(?) {id=393,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=396,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___expressionStatement {id=399,slot_type=[aux_rule__blockItemList_2,statement,expressionStatement]}
            |           |___(?) {id=400,slot_type=optional__postfixExpression_1}
            |           |   |___(+) {id=419,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,kleene_plus__primaryExpression_1]}
            |           |       |___Token:"world\n" {id=420,slot_type=StringLiteral}
            |           |___Token:; {id=401,slot_type=Semi}
            |___Token:} {id=394,slot_type=RightBrace}
------------------------------------------------------------


#test success = 7
#test failure = 26
#test result cache hits = 8
#test execution cancelled = 1
#node edit action set cache hits = 5
#external test execution cache hits = 0
