=====================Reduction starts.======================

The initial program size is 93
------------------------------------------------------------


=Fixpoint iteration 1. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=1}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=4,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=5,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=936,slot_type=declarationSpecifiers}
        |       |___Token:int {id=940,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=927,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=935,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=929,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=931,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=932,slot_type=LeftParen}
        |           |___Token:) {id=934,slot_type=RightParen}
        |___compoundStatement {id=7,slot_type=compoundStatement}
            |___Token:{ {id=8,slot_type=LeftBrace}
            |___(?) {id=9,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=12,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___aux_rule__declaration_3 {id=892,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=893,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=926,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=894,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=897,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:a {id=922,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=899,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=900,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=901,slot_type=Assign}
            |       |   |               |___Token:99 {id=919,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |___Token:; {id=895,slot_type=Semi}
            |       |___aux_rule__declaration_3 {id=42,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=43,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=890,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=44,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=47,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:b {id=886,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=49,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=50,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=51,slot_type=Assign}
            |       |   |               |___aux_rule__postfixExpression_13 {id=69,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |___aux_rule__primaryExpression_4 {id=72,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |   |___Token:( {id=73,slot_type=LeftParen}
            |       |   |                   |   |___aux_rule__postfixExpression_13 {id=91,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |___aux_rule__primaryExpression_4 {id=94,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |   |___Token:( {id=95,slot_type=LeftParen}
            |       |   |                   |       |   |___aux_rule__postfixExpression_13 {id=113,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |___aux_rule__primaryExpression_4 {id=116,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |   |___Token:( {id=117,slot_type=LeftParen}
            |       |   |                   |       |       |   |___aux_rule__postfixExpression_13 {id=135,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |___aux_rule__primaryExpression_4 {id=138,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |   |___Token:( {id=139,slot_type=LeftParen}
            |       |   |                   |       |       |       |   |___aux_rule__postfixExpression_13 {id=157,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |___aux_rule__primaryExpression_4 {id=160,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |   |___Token:( {id=161,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=179,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=182,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |   |___Token:( {id=183,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=201,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=204,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |   |___Token:( {id=205,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=223,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=226,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |   |___Token:( {id=227,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=245,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=248,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |   |___Token:( {id=249,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=267,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=270,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |   |___Token:( {id=271,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=289,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=292,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=293,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=311,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=314,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=315,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=333,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=336,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=337,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=355,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=358,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=359,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=377,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=380,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=381,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=399,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=402,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=403,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=421,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=424,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=425,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=443,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=446,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=447,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=465,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=468,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=469,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=487,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=490,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=491,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=509,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=512,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=513,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=531,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=534,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=535,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=553,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=556,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=557,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=575,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=578,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=579,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=597,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=600,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=601,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=619,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=622,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=623,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=641,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=644,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=645,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=663,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=666,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=667,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=685,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=688,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=689,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=707,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=710,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=711,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=729,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=732,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=733,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=751,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=754,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=755,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=773,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=776,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=777,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=795,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=798,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=799,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=817,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=820,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=821,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=839,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=842,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=843,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___aux_rule__postfixExpression_13 {id=861,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,aux_rule__postfixExpression_13]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___aux_rule__primaryExpression_4 {id=864,slot_type=[altnt_block__primaryExpression_3,aux_rule__primaryExpression_4]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:( {id=865,slot_type=LeftParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |   |___Token:a {id=883,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=863,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=841,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=819,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=797,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=775,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=753,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=731,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=709,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=687,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=665,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=643,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=621,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=599,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=577,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=555,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=533,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=511,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=489,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=467,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=445,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=423,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=401,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=379,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=357,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=335,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |       |___Token:) {id=313,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |       |___Token:) {id=291,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |       |___Token:) {id=269,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |       |___Token:) {id=247,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |       |___Token:) {id=225,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |       |___Token:) {id=203,slot_type=RightParen}
            |       |   |                   |       |       |       |       |       |___Token:) {id=181,slot_type=RightParen}
            |       |   |                   |       |       |       |       |___Token:) {id=159,slot_type=RightParen}
            |       |   |                   |       |       |       |___Token:) {id=137,slot_type=RightParen}
            |       |   |                   |       |       |___Token:) {id=115,slot_type=RightParen}
            |       |   |                   |       |___Token:) {id=93,slot_type=RightParen}
            |       |   |                   |___Token:) {id=71,slot_type=RightParen}
            |       |   |___Token:; {id=45,slot_type=Semi}
            |       |___jumpStatement {id=17,slot_type=[aux_rule__blockItemList_2,statement,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=20,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=21,slot_type=Return}
            |           |   |___(?) {id=22,slot_type=optional__postfixExpression_1}
            |           |       |___Token:b {id=40,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |           |___Token:; {id=19,slot_type=Semi}
            |___Token:} {id=10,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 4, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    ;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int a = 99;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 4
------------------------------------------------------------


==================Reducing node 7, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 9, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__compoundStatement_1]dd@1
    int main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 12, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=12}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]remove whole except first
    int main() {
      int a = 99;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@2
    int main() {
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    int main() {
      int a = 99;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus:kleene_plus__blockItemList_3]dd@1
    int main() {
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 42, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=42}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main() {
      int a = 99;
                                                                                         ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 42
------------------------------------------------------------


=================Reducing node 44, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__declaration_2]dd@1
    int main() {
      int a = 99;
      int                                                                                ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 44
------------------------------------------------------------


=================Reducing node 47, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=47}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main() {
      int a = 99;
      int b                                                                              ;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main() {
      int a = 99;
      int                                          a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 47
------------------------------------------------------------


=================Reducing node 49, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int b                                                                              ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 49
------------------------------------------------------------


=================Reducing node 50, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=50}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50
------------------------------------------------------------


=================Reducing node 69, size=93==================

The current best program is the following

    int main() {
      int a = 99;
      int b = (((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))));
      return b;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                                     (a)                                    ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                                    ((a))                                   ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                                   (((a)))                                  ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                                  ((((a))))                                 ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                                 (((((a)))))                                ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                                ((((((a))))))                               ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                               (((((((a)))))))                              ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                              ((((((((a))))))))                             ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                             (((((((((a)))))))))                            ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                            ((((((((((a))))))))))                           ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                           (((((((((((a)))))))))))                          ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                          ((((((((((((a))))))))))))                         ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                         (((((((((((((a)))))))))))))                        ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                        ((((((((((((((a))))))))))))))                       ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                       (((((((((((((((a)))))))))))))))                      ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                      ((((((((((((((((a))))))))))))))))                     ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                     (((((((((((((((((a)))))))))))))))))                    ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                    ((((((((((((((((((a))))))))))))))))))                   ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                   (((((((((((((((((((a)))))))))))))))))))                  ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                  ((((((((((((((((((((a))))))))))))))))))))                 ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                 (((((((((((((((((((((a)))))))))))))))))))))                ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =                ((((((((((((((((((((((a))))))))))))))))))))))               ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =               (((((((((((((((((((((((a)))))))))))))))))))))))              ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =              ((((((((((((((((((((((((a))))))))))))))))))))))))             ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =             (((((((((((((((((((((((((a)))))))))))))))))))))))))            ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =            ((((((((((((((((((((((((((a))))))))))))))))))))))))))           ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =           (((((((((((((((((((((((((((a)))))))))))))))))))))))))))          ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =          ((((((((((((((((((((((((((((a))))))))))))))))))))))))))))         ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =         (((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))        ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =        ((((((((((((((((((((((((((((((a))))))))))))))))))))))))))))))       ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =       (((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))      ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =      ((((((((((((((((((((((((((((((((a))))))))))))))))))))))))))))))))     ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =     (((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))    ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =    ((((((((((((((((((((((((((((((((((a))))))))))))))))))))))))))))))))))   ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =   (((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))  ;
      return b;
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main() {
      int a = 99;
      int b =  ((((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))))) ;
      return b;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

3 entries are removed: 13 --> 10.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 53
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 69 from 93 to 19
------------------------------------------------------------


=================Reducing node 892, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    int main() {
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main() {
                ;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 892
------------------------------------------------------------


=================Reducing node 927, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main   {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 927
------------------------------------------------------------


=================Reducing node 894, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__declaration_2]dd@1
    int main() {
      int       ;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 894
------------------------------------------------------------


=================Reducing node 897, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=897}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main() {
      int a     ;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 897
------------------------------------------------------------


=================Reducing node 17, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    int main() {
      int a = 99;
      int b =                                      a                                     ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main() {
      int a = 99;
      int b =                                      a                                     ;
              ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 17
------------------------------------------------------------


=================Reducing node 929, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main   {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 929
------------------------------------------------------------


=================Reducing node 931, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=931}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 931
------------------------------------------------------------


=================Reducing node 899, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a     ;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 899
------------------------------------------------------------


=================Reducing node 900, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=900}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 900
------------------------------------------------------------


=================Reducing node 20, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 935, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 935
------------------------------------------------------------


=================Reducing node 934, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 934
------------------------------------------------------------


=================Reducing node 932, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 932
------------------------------------------------------------


=================Reducing node 922, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 922
------------------------------------------------------------


=================Reducing node 919, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 919
------------------------------------------------------------


=================Reducing node 901, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 901
------------------------------------------------------------


=================Reducing node 895, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 895
------------------------------------------------------------


=================Reducing node 893, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 893
------------------------------------------------------------


=================Reducing node 926, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 926
------------------------------------------------------------


=================Reducing node 886, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 886
------------------------------------------------------------


=================Reducing node 883, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 883
------------------------------------------------------------


=================Reducing node 51, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51
------------------------------------------------------------


=================Reducing node 45, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 45
------------------------------------------------------------


=================Reducing node 43, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


=================Reducing node 890, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 890
------------------------------------------------------------


=================Reducing node 22, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 22
------------------------------------------------------------


=================Reducing node 40, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 40
------------------------------------------------------------


=================Reducing node 21, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 19, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 10, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


==================Reducing node 8, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


==================Reducing node 5, size=19==================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star:optional__functionDefinition_2]dd@1
    main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


=================Reducing node 936, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=936}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 936
------------------------------------------------------------


=================Reducing node 940, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 940
------------------------------------------------------------


=Fixpoint iteration 2. Reducer: perses_node_priority_with_dfs_delta

The spar-tree is the following.
translationUnit {id=941}
|___(+) {id=942,slot_type=kleene_plus__translationUnit_3}
    |___functionDefinition {id=944,slot_type=[aux_rule__translationUnit_2,functionDefinition]}
        |___(?) {id=945,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=1062,slot_type=declarationSpecifiers}
        |       |___Token:int {id=1066,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
        |___directDeclarator {id=1053,slot_type=[declarator,directDeclarator]}
        |   |___Token:main {id=1061,slot_type=[aux_rule__directDeclarator_9,Identifier]}
        |   |___(*) {id=1055,slot_type=kleene_star__directDeclarator_7}
        |       |___aux_rule__directDeclarator_15 {id=1057,slot_type=[aux_rule__directDeclarator_8,aux_rule__directDeclarator_15]}
        |           |___Token:( {id=1058,slot_type=LeftParen}
        |           |___Token:) {id=1060,slot_type=RightParen}
        |___compoundStatement {id=947,slot_type=compoundStatement}
            |___Token:{ {id=948,slot_type=LeftBrace}
            |___(?) {id=949,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=952,slot_type=[blockItemList,kleene_plus__blockItemList_3]}
            |       |___aux_rule__declaration_3 {id=1018,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=1019,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=1052,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=1020,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=1023,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:a {id=1048,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=1025,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=1026,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=1027,slot_type=Assign}
            |       |   |               |___Token:99 {id=1045,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Constant]}
            |       |   |___Token:; {id=1021,slot_type=Semi}
            |       |___aux_rule__declaration_3 {id=982,slot_type=[aux_rule__blockItemList_2,declaration,aux_rule__declaration_3]}
            |       |   |___(+) {id=983,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=1016,slot_type=[declarationSpecifier,typeSpecifierWithAttrList,typeSpecifier,Int]}
            |       |   |___(?) {id=984,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=987,slot_type=[initDeclaratorList,initDeclarator]}
            |       |   |       |___Token:b {id=1012,slot_type=[declarator,directDeclarator,aux_rule__directDeclarator_9,Identifier]}
            |       |   |       |___(?) {id=989,slot_type=optional__initDeclarator_2}
            |       |   |           |___aux_rule__initDeclarator_1 {id=990,slot_type=aux_rule__initDeclarator_1}
            |       |   |               |___Token:= {id=991,slot_type=Assign}
            |       |   |               |___Token:a {id=1009,slot_type=[initializer,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |       |   |___Token:; {id=985,slot_type=Semi}
            |       |___jumpStatement {id=957,slot_type=[aux_rule__blockItemList_2,statement,jumpStatement]}
            |           |___aux_rule__jumpStatement_4 {id=960,slot_type=[altnt_block__jumpStatement_2,aux_rule__jumpStatement_4]}
            |           |   |___Token:return {id=961,slot_type=Return}
            |           |   |___(?) {id=962,slot_type=optional__postfixExpression_1}
            |           |       |___Token:b {id=980,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_4,Identifier]}
            |           |___Token:; {id=959,slot_type=Semi}
            |___Token:} {id=950,slot_type=RightBrace}
------------------------------------------------------------


=================Reducing node 942, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 942
------------------------------------------------------------


=================Reducing node 944, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    ;
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int a = 99;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int b =                                      a                                     ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 944
------------------------------------------------------------


=================Reducing node 947, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 947
------------------------------------------------------------


=================Reducing node 949, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 949
------------------------------------------------------------


=================Reducing node 952, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=952}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int b =                                      a                                     ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 952
------------------------------------------------------------


================Reducing node 1018, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=1018}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
                ;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1018
------------------------------------------------------------


=================Reducing node 982, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=982}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
                                                                                         ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 982
------------------------------------------------------------


================Reducing node 1053, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main   {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1053
------------------------------------------------------------


================Reducing node 1020, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int       ;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1020
------------------------------------------------------------


================Reducing node 1023, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=1023}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a     ;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1023
------------------------------------------------------------


=================Reducing node 984, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int                                                                                ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 984
------------------------------------------------------------


=================Reducing node 987, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=987}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int b                                                                              ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int                                          a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 987
------------------------------------------------------------


=================Reducing node 957, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=957}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int b =                                      a                                     ;
              ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 957
------------------------------------------------------------


================Reducing node 1055, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main   {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1055
------------------------------------------------------------


================Reducing node 1057, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=1057}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1057
------------------------------------------------------------


================Reducing node 1025, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a     ;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1025
------------------------------------------------------------


================Reducing node 1026, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=1026}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1026
------------------------------------------------------------


=================Reducing node 989, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int b                                                                              ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 989
------------------------------------------------------------


=================Reducing node 990, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=990}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 990
------------------------------------------------------------


=================Reducing node 960, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 960
------------------------------------------------------------


================Reducing node 1061, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1061
------------------------------------------------------------


================Reducing node 1060, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1060
------------------------------------------------------------


================Reducing node 1058, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1058
------------------------------------------------------------


================Reducing node 1048, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1048
------------------------------------------------------------


================Reducing node 1045, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1045
------------------------------------------------------------


================Reducing node 1027, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1027
------------------------------------------------------------


================Reducing node 1021, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1021
------------------------------------------------------------


================Reducing node 1019, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1019
------------------------------------------------------------


================Reducing node 1052, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1052
------------------------------------------------------------


================Reducing node 1012, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1012
------------------------------------------------------------


================Reducing node 1009, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1009
------------------------------------------------------------


=================Reducing node 991, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 991
------------------------------------------------------------


=================Reducing node 985, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 985
------------------------------------------------------------


=================Reducing node 983, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 983
------------------------------------------------------------


================Reducing node 1016, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1016
------------------------------------------------------------


=================Reducing node 962, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return  ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 962
------------------------------------------------------------


=================Reducing node 980, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 980
------------------------------------------------------------


=================Reducing node 961, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 961
------------------------------------------------------------


=================Reducing node 959, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 959
------------------------------------------------------------


=================Reducing node 950, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 950
------------------------------------------------------------


=================Reducing node 948, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 948
------------------------------------------------------------


=================Reducing node 945, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 945
------------------------------------------------------------


================Reducing node 1062, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=1062}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1062
------------------------------------------------------------


================Reducing node 1066, size=19=================

The current best program is the following

    int main() {
      int a = 99;
      int b =                                      a                                     ;
      return b;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 1066
------------------------------------------------------------


#test success = 1
#test failure = 23
#test result cache hits = 27
#test execution cancelled = 36
#node edit action set cache hits = 18
#external test execution cache hits = 0
