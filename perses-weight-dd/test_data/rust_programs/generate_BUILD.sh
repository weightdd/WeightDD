#!/usr/bin/env bash

set -o nounset
set -o pipefail

if [[ "$(dirname "${0}")" != "." ]] ; then
  echo "ERROR: This script should be run in the folder of the script."
  exit 1
fi


readonly RUSTC_VERSION="nightly-2020-10-08"

readonly OUTPUT_FOLDER="$(mktemp -d)"
readonly INVALID_FILE_LIST="${OUTPUT_FOLDER}/syntactically_invalid_rust_programs.txt"
trap "rm -rf ${OUTPUT_FOLDER}" EXIT


readonly PKG="rust_testsuite"
rustup toolchain install "${RUSTC_VERSION}"
for f in $(find "${PKG}" -name '*.rs') ; do
  if [[ "$(dirname "${f}")" == "${PKG}/run-make-fulldeps/dep-info-spaces" ]] ; then
    # Skip files in this folder with weird file names.
    continue
  elif [[ "$(dirname "${f}")" == "." ]] ; then
    # Skip empty dir.
    continue
  elif [[ ! -e "${f}" ]] ; then
    # weird file name, and does not exit
    continue
  elif rustup run "${RUSTC_VERSION}" rustc --edition 2015 --crate-type rlib "${f}" --out-dir "${OUTPUT_FOLDER}" &> /dev/null || \
       rustup run "${RUSTC_VERSION}" rustc --edition 2018 --crate-type rlib "${f}" --out-dir "${OUTPUT_FOLDER}" &> /dev/null ; then
    # A compilable program, will include this file in the test set.
    continue
  elif grep --quiet --ignore-case --extended-regexp --regexp "//\W*ERROR(\s+|\s*:|\s*,|$)" "${f}" || \
       grep --quiet --ignore-case --extended-regexp --regexp "//\W*\[.+\]\W*ERROR(\s+|\s*:|\s*,|$)" "${f}" ; then
    # Exclude this incompilable UI test.
    true # fall through
  elif rustup run "${RUSTC_VERSION}" rustc --edition 2015 -Z ast-json-noexpand=yes "${f}" --out-dir "${OUTPUT_FOLDER}" &> /dev/null || \
     rustup run "${RUSTC_VERSION}" rustc --edition 2018 -Z ast-json-noexpand=yes "${f}" --out-dir "${OUTPUT_FOLDER}" &> /dev/null || \
     rustup run "${RUSTC_VERSION}" rustc --edition 2015 -Z parse-only "${f}" --out-dir "${OUTPUT_FOLDER}" &> /dev/null || \
     rustup run "${RUSTC_VERSION}" rustc --edition 2018 -Z parse-only "${f}" --out-dir "${OUTPUT_FOLDER}" &> /dev/null ; then
    # This file is parsable.
    continue
  fi

  echo "\"${f}\"," | sed -E 's/(\[|\])+/*/g' | tee -a "${INVALID_FILE_LIST}"
done

readonly BUILD_FILE="BUILD"
echo "writing to ${BUILD_FILE}"

cat > "${BUILD_FILE}" <<-EOF
# DO NOT EDIT.
# THIS FILE IS AUTOMATICALLY GENERATED.
# Run '$0' to update this BUILD file.
package(default_visibility = ["//test/org/perses:__subpackages__"])

filegroup(
    name = "whole_rust_repo",
    srcs = glob(
        ["rust/**/*.rs"],
        exclude = [
            "rust/src/test/**",
        ],
    ),
)

filegroup(
    name = "rust_testsuite",
    srcs = glob(
        ["rust_testsuite/**/*.rs"],
        exclude = [
            "rust_testsuite/run-make-fulldeps/dep-info-spaces/*.rs",
            "rust_testsuite/ui/parser/extern-crate-async.rs", # Should not be parsed according to the comments in this file.
            "rust_testsuite/ui/closures/deeply-nested_closures.rs",  # TODO: cause infinite loop of antlr.
$(cat "${INVALID_FILE_LIST}")
        ],
    ),
)
EOF

bazel run //:buildifier